circuit Test : @[when_test.py:15]
  module Test : @[when_test.py:15]
    input clock : Clock @[rawmodule.py:100]
    input reset : UInt<1> @[rawmodule.py:101]
    output io : {flip a : UInt<32>, flip b : UInt<32>, flip sig : UInt<4>, out : UInt<32>} @[when_test.py:6]

    node _T_8 = geq(io.sig, UInt(0)) @[when_test.py:18]
    node _T_9 = lt(io.sig, UInt<1>(1)) @[when_test.py:18]
    node _T_10 = and(_T_8, _T_9) @[when_test.py:18]
    when _T_10 : @[when_test.py:18]
      node _T_11 = add(io.a, io.b) @[when_test.py:19]
      io.out <= _T_11 @[when_test.py:19]
      node _T_12 = geq(io.sig, UInt<1>(1)) @[when_test.py:20]
      node _T_13 = lt(io.sig, UInt<2>(2)) @[when_test.py:20]
      node _T_14 = and(_T_12, _T_13) @[when_test.py:20]
      when _T_14 : @[when_test.py:20]
        node _T_15 = sub(io.a, io.b) @[when_test.py:21]
        node _T_16 = asUInt(_T_15) @[when_test.py:21]
        io.out <= _T_16 @[when_test.py:21]
        node _T_17 = geq(io.sig, UInt<2>(2)) @[when_test.py:22]
        node _T_18 = lt(io.sig, UInt<2>(3)) @[when_test.py:22]
        node _T_19 = and(_T_17, _T_18) @[when_test.py:22]
        when _T_19 : @[when_test.py:22]
          node _T_20 = mul(io.a, io.b) @[when_test.py:23]
          io.out <= _T_20 @[when_test.py:23]
          skip @[when_test.py:22]
        else : @[when_test.py:24]
          node _T_21 = and(UInt<2>(3), io.sig) @[when_test.py:24]
          node _T_22 = geq(io.sig, _T_21) @[when_test.py:24]
          node _T_23 = lt(_T_21, UInt<3>(4)) @[when_test.py:24]
          when _T_23 : @[when_test.py:24]
            node _T_24 = div(io.a, io.b) @[when_test.py:25]
            io.out <= _T_24 @[when_test.py:25]
            skip @[when_test.py:24]
          else : @[when_test.py:26]
            node _T_25 = geq(io.sig, UInt<3>(4)) @[when_test.py:26]
            node _T_26 = lt(io.sig, UInt<3>(5)) @[when_test.py:26]
            node _T_27 = and(_T_25, _T_26) @[when_test.py:26]
            when _T_27 : @[when_test.py:26]
              node _T_28 = and(io.a, io.b) @[when_test.py:27]
              io.out <= _T_28 @[when_test.py:27]
              skip @[when_test.py:26]
            else : @[when_test.py:28]
              node _T_29 = or(io.a, io.b) @[when_test.py:29]
              io.out <= _T_29 @[when_test.py:29]
              skip @[when_test.py:28]
            skip @[when_test.py:26]
          skip @[when_test.py:24]
        skip @[when_test.py:20]
      else : @[when_test.py:30]
        node _T_30 = geq(io.sig, UInt<3>(5)) @[when_test.py:30]
        node _T_31 = lt(io.sig, UInt<3>(6)) @[when_test.py:30]
        node _T_32 = and(_T_30, _T_31) @[when_test.py:30]
        when _T_32 : @[when_test.py:30]
          node _T_33 = xor(io.a, io.b) @[when_test.py:31]
          io.out <= _T_33 @[when_test.py:31]
          skip @[when_test.py:30]
        else : @[when_test.py:32]
          node _T_34 = geq(io.sig, UInt<3>(6)) @[when_test.py:32]
          node _T_35 = lt(io.sig, UInt<3>(7)) @[when_test.py:32]
          node _T_36 = and(_T_34, _T_35) @[when_test.py:32]
          when _T_36 : @[when_test.py:32]
            node _T_37 = rem(io.a, io.b) @[when_test.py:33]
            io.out <= _T_37 @[when_test.py:33]
            skip @[when_test.py:32]
          else : @[when_test.py:34]
            node _T_38 = eq(io.a, io.b) @[when_test.py:35]
            io.out <= _T_38 @[when_test.py:35]
            skip @[when_test.py:34]
          skip @[when_test.py:32]
        skip @[when_test.py:30]
      skip @[when_test.py:18]
    else : @[when_test.py:36]
      node _T_39 = geq(io.sig, UInt<3>(7)) @[when_test.py:36]
      node _T_40 = lt(io.sig, UInt<4>(8)) @[when_test.py:36]
      node _T_41 = and(_T_39, _T_40) @[when_test.py:36]
      when _T_41 : @[when_test.py:36]
        node _T_42 = neq(io.a, io.b) @[when_test.py:37]
        io.out <= _T_42 @[when_test.py:37]
        skip @[when_test.py:36]
      else : @[when_test.py:38]
        node _T_43 = geq(io.sig, UInt<4>(8)) @[when_test.py:38]
        node _T_44 = lt(io.sig, UInt<4>(9)) @[when_test.py:38]
        node _T_45 = and(_T_43, _T_44) @[when_test.py:38]
        when _T_45 : @[when_test.py:38]
          node _T_46 = lt(io.a, io.b) @[when_test.py:39]
          io.out <= _T_46 @[when_test.py:39]
          skip @[when_test.py:38]
        else : @[when_test.py:40]
          node _T_47 = gt(io.a, io.b) @[when_test.py:41]
          io.out <= _T_47 @[when_test.py:41]
          skip @[when_test.py:40]
        skip @[when_test.py:38]
      skip @[when_test.py:36]


