circuit Tile : @[tile.py:52]
  module Addr_Buffer : @[addr_buffer.py:21]
    input clock : Clock @[rawmodule.py:100]
    input reset : UInt<1> @[rawmodule.py:101]
    output io : {flip addr_input : UInt<32>, flip flush : UInt<1>, flip record : UInt<1>, front : UInt<32>} @[addr_buffer.py:11]

    cmem buffer : UInt<32>[3] @[addr_buffer.py:24]
    cmem counter : UInt<2>[3] @[addr_buffer.py:25]
    cmem is_used : UInt<1>[3] @[rawdata.py:698]
    read mport _T_1110 = counter[UInt(0)], clock @[memory.py:52]
    read mport _T_1111 = counter[UInt<1>(1)], clock @[memory.py:52]
    node _T_1112 = gt(_T_1110, _T_1111) @[addr_buffer.py:28]
    read mport _T_1113 = counter[UInt(0)], clock @[memory.py:52]
    read mport _T_1114 = counter[UInt<2>(2)], clock @[memory.py:52]
    node _T_1115 = gt(_T_1113, _T_1114) @[addr_buffer.py:29]
    read mport _T_1116 = buffer[UInt(0)], clock @[memory.py:52]
    read mport _T_1117 = buffer[UInt<2>(2)], clock @[memory.py:52]
    node _T_1118 = mux(_T_1115, _T_1116, _T_1117) @[addr_buffer.py:29]
    read mport _T_1119 = counter[UInt<1>(1)], clock @[memory.py:52]
    read mport _T_1120 = counter[UInt<2>(2)], clock @[memory.py:52]
    node _T_1121 = gt(_T_1119, _T_1120) @[addr_buffer.py:30]
    read mport _T_1122 = buffer[UInt<1>(1)], clock @[memory.py:52]
    read mport _T_1123 = buffer[UInt<2>(2)], clock @[memory.py:52]
    node _T_1124 = mux(_T_1121, _T_1122, _T_1123) @[addr_buffer.py:30]
    node _T_1125 = mux(_T_1112, _T_1118, _T_1124) @[addr_buffer.py:30]
    io.front <= _T_1125 @[addr_buffer.py:30]
    read mport _T_1126 = is_used[UInt(0)], clock @[memory.py:52]
    node _T_1127 = eq(UInt(0), _T_1126) @[addr_buffer.py:32]
    read mport _T_1128 = is_used[UInt<1>(1)], clock @[memory.py:52]
    node _T_1129 = eq(UInt(0), _T_1128) @[addr_buffer.py:32]
    node _T_1130 = mux(_T_1129, UInt<1>(1), UInt<2>(2)) @[addr_buffer.py:32]
    node _T_1131 = mux(_T_1127, UInt(0), _T_1130) @[addr_buffer.py:32]
    node _T_1132 = bits(io.record, 0, 0) @[define.py:161]
    node _T_1133 = eq(UInt(0), _T_1131) @[addr_buffer.py:37]
    read mport _T_1134 = is_used[UInt(0)], clock @[memory.py:52]
    node _T_1135 = mux(_T_1133, UInt<1>(1), _T_1134) @[addr_buffer.py:37]
    read mport _T_1136 = is_used[UInt(0)], clock @[memory.py:52]
    node _T_1137 = mux(_T_1132, _T_1135, _T_1136) @[addr_buffer.py:38]
    node _T_1138 = bits(io.record, 0, 0) @[define.py:161]
    node _T_1139 = eq(UInt<1>(1), _T_1131) @[addr_buffer.py:37]
    read mport _T_1140 = is_used[UInt<1>(1)], clock @[memory.py:52]
    node _T_1141 = mux(_T_1139, UInt<1>(1), _T_1140) @[addr_buffer.py:37]
    read mport _T_1142 = is_used[UInt<1>(1)], clock @[memory.py:52]
    node _T_1143 = mux(_T_1138, _T_1141, _T_1142) @[addr_buffer.py:38]
    node _T_1144 = bits(io.record, 0, 0) @[define.py:161]
    node _T_1145 = eq(UInt<2>(2), _T_1131) @[addr_buffer.py:37]
    read mport _T_1146 = is_used[UInt<2>(2)], clock @[memory.py:52]
    node _T_1147 = mux(_T_1145, UInt<1>(1), _T_1146) @[addr_buffer.py:37]
    read mport _T_1148 = is_used[UInt<2>(2)], clock @[memory.py:52]
    node _T_1149 = mux(_T_1144, _T_1147, _T_1148) @[addr_buffer.py:38]
    write mport _T_1150 = is_used[UInt(0)], clock @[memory.py:52]
    node _T_1151 = bits(io.flush, 0, 0) @[define.py:161]
    read mport _T_1152 = counter[UInt(0)], clock @[memory.py:52]
    node _T_1153 = eq(UInt<2>(2), _T_1152) @[addr_buffer.py:41]
    node _T_1154 = mux(_T_1153, UInt<1>(0), _T_1137) @[addr_buffer.py:42]
    node _T_1155 = mux(_T_1151, UInt<1>(0), _T_1154) @[addr_buffer.py:42]
    _T_1150 <= _T_1155 @[addr_buffer.py:42]
    write mport _T_1156 = is_used[UInt<1>(1)], clock @[memory.py:52]
    node _T_1157 = bits(io.flush, 0, 0) @[define.py:161]
    read mport _T_1158 = counter[UInt<1>(1)], clock @[memory.py:52]
    node _T_1159 = eq(UInt<2>(2), _T_1158) @[addr_buffer.py:41]
    node _T_1160 = mux(_T_1159, UInt<1>(0), _T_1143) @[addr_buffer.py:42]
    node _T_1161 = mux(_T_1157, UInt<1>(0), _T_1160) @[addr_buffer.py:42]
    _T_1156 <= _T_1161 @[addr_buffer.py:42]
    write mport _T_1162 = is_used[UInt<2>(2)], clock @[memory.py:52]
    node _T_1163 = bits(io.flush, 0, 0) @[define.py:161]
    read mport _T_1164 = counter[UInt<2>(2)], clock @[memory.py:52]
    node _T_1165 = eq(UInt<2>(2), _T_1164) @[addr_buffer.py:41]
    node _T_1166 = mux(_T_1165, UInt<1>(0), _T_1149) @[addr_buffer.py:42]
    node _T_1167 = mux(_T_1163, UInt<1>(0), _T_1166) @[addr_buffer.py:42]
    _T_1162 <= _T_1167 @[addr_buffer.py:42]
    write mport _T_1168 = counter[UInt(0)], clock @[memory.py:52]
    node _T_1169 = bits(io.flush, 0, 0) @[define.py:161]
    read mport _T_1170 = counter[UInt(0)], clock @[memory.py:52]
    node _T_1171 = eq(UInt<2>(2), _T_1170) @[addr_buffer.py:46]
    read mport _T_1172 = is_used[UInt(0)], clock @[memory.py:52]
    read mport _T_1173 = counter[UInt(0)], clock @[memory.py:52]
    node _T_1174 = add(_T_1173, UInt<1>(1)) @[addr_buffer.py:47]
    read mport _T_1175 = counter[UInt(0)], clock @[memory.py:52]
    node _T_1176 = mux(_T_1172, _T_1174, _T_1175) @[addr_buffer.py:47]
    node _T_1177 = mux(_T_1171, UInt(0), _T_1176) @[addr_buffer.py:47]
    node _T_1178 = mux(_T_1169, UInt(0), _T_1177) @[addr_buffer.py:47]
    _T_1168 <= _T_1178 @[addr_buffer.py:47]
    write mport _T_1179 = counter[UInt<1>(1)], clock @[memory.py:52]
    node _T_1180 = bits(io.flush, 0, 0) @[define.py:161]
    read mport _T_1181 = counter[UInt<1>(1)], clock @[memory.py:52]
    node _T_1182 = eq(UInt<2>(2), _T_1181) @[addr_buffer.py:46]
    read mport _T_1183 = is_used[UInt<1>(1)], clock @[memory.py:52]
    read mport _T_1184 = counter[UInt<1>(1)], clock @[memory.py:52]
    node _T_1185 = add(_T_1184, UInt<1>(1)) @[addr_buffer.py:47]
    read mport _T_1186 = counter[UInt<1>(1)], clock @[memory.py:52]
    node _T_1187 = mux(_T_1183, _T_1185, _T_1186) @[addr_buffer.py:47]
    node _T_1188 = mux(_T_1182, UInt(0), _T_1187) @[addr_buffer.py:47]
    node _T_1189 = mux(_T_1180, UInt(0), _T_1188) @[addr_buffer.py:47]
    _T_1179 <= _T_1189 @[addr_buffer.py:47]
    write mport _T_1190 = counter[UInt<2>(2)], clock @[memory.py:52]
    node _T_1191 = bits(io.flush, 0, 0) @[define.py:161]
    read mport _T_1192 = counter[UInt<2>(2)], clock @[memory.py:52]
    node _T_1193 = eq(UInt<2>(2), _T_1192) @[addr_buffer.py:46]
    read mport _T_1194 = is_used[UInt<2>(2)], clock @[memory.py:52]
    read mport _T_1195 = counter[UInt<2>(2)], clock @[memory.py:52]
    node _T_1196 = add(_T_1195, UInt<1>(1)) @[addr_buffer.py:47]
    read mport _T_1197 = counter[UInt<2>(2)], clock @[memory.py:52]
    node _T_1198 = mux(_T_1194, _T_1196, _T_1197) @[addr_buffer.py:47]
    node _T_1199 = mux(_T_1193, UInt(0), _T_1198) @[addr_buffer.py:47]
    node _T_1200 = mux(_T_1191, UInt(0), _T_1199) @[addr_buffer.py:47]
    _T_1190 <= _T_1200 @[addr_buffer.py:47]
    write mport _T_1201 = buffer[UInt(0)], clock @[memory.py:52]
    node _T_1202 = bits(io.flush, 0, 0) @[define.py:161]
    read mport _T_1203 = counter[UInt(0)], clock @[memory.py:52]
    node _T_1204 = eq(UInt<2>(2), _T_1203) @[addr_buffer.py:51]
    node _T_1205 = bits(io.record, 0, 0) @[define.py:161]
    node _T_1206 = eq(UInt(0), _T_1131) @[addr_buffer.py:53]
    read mport _T_1207 = buffer[UInt(0)], clock @[memory.py:52]
    node _T_1208 = mux(_T_1206, io.addr_input, _T_1207) @[addr_buffer.py:53]
    read mport _T_1209 = buffer[UInt(0)], clock @[memory.py:52]
    node _T_1210 = mux(_T_1205, _T_1208, _T_1209) @[addr_buffer.py:54]
    node _T_1211 = mux(_T_1204, UInt(0), _T_1210) @[addr_buffer.py:54]
    node _T_1212 = mux(_T_1202, UInt(0), _T_1211) @[addr_buffer.py:54]
    _T_1201 <= _T_1212 @[addr_buffer.py:54]
    write mport _T_1213 = buffer[UInt<1>(1)], clock @[memory.py:52]
    node _T_1214 = bits(io.flush, 0, 0) @[define.py:161]
    read mport _T_1215 = counter[UInt<1>(1)], clock @[memory.py:52]
    node _T_1216 = eq(UInt<2>(2), _T_1215) @[addr_buffer.py:51]
    node _T_1217 = bits(io.record, 0, 0) @[define.py:161]
    node _T_1218 = eq(UInt<1>(1), _T_1131) @[addr_buffer.py:53]
    read mport _T_1219 = buffer[UInt<1>(1)], clock @[memory.py:52]
    node _T_1220 = mux(_T_1218, io.addr_input, _T_1219) @[addr_buffer.py:53]
    read mport _T_1221 = buffer[UInt<1>(1)], clock @[memory.py:52]
    node _T_1222 = mux(_T_1217, _T_1220, _T_1221) @[addr_buffer.py:54]
    node _T_1223 = mux(_T_1216, UInt(0), _T_1222) @[addr_buffer.py:54]
    node _T_1224 = mux(_T_1214, UInt(0), _T_1223) @[addr_buffer.py:54]
    _T_1213 <= _T_1224 @[addr_buffer.py:54]
    write mport _T_1225 = buffer[UInt<2>(2)], clock @[memory.py:52]
    node _T_1226 = bits(io.flush, 0, 0) @[define.py:161]
    read mport _T_1227 = counter[UInt<2>(2)], clock @[memory.py:52]
    node _T_1228 = eq(UInt<2>(2), _T_1227) @[addr_buffer.py:51]
    node _T_1229 = bits(io.record, 0, 0) @[define.py:161]
    node _T_1230 = eq(UInt<2>(2), _T_1131) @[addr_buffer.py:53]
    read mport _T_1231 = buffer[UInt<2>(2)], clock @[memory.py:52]
    node _T_1232 = mux(_T_1230, io.addr_input, _T_1231) @[addr_buffer.py:53]
    read mport _T_1233 = buffer[UInt<2>(2)], clock @[memory.py:52]
    node _T_1234 = mux(_T_1229, _T_1232, _T_1233) @[addr_buffer.py:54]
    node _T_1235 = mux(_T_1228, UInt(0), _T_1234) @[addr_buffer.py:54]
    node _T_1236 = mux(_T_1226, UInt(0), _T_1235) @[addr_buffer.py:54]
    _T_1225 <= _T_1236 @[addr_buffer.py:54]


  module PC : @[pc.py:20]
    input clock : Clock @[rawmodule.py:100]
    input reset : UInt<1> @[rawmodule.py:101]
    output io : {flip next_pc : UInt<32>, flip PC_Write : UInt<1>, pc_out : UInt<32>} @[pc.py:12]

    reg pc_reg : UInt<32>, clock with: (reset => (reset, UInt(0))) @[pc.py:23]
    node _T_32 = bits(io.PC_Write, 0, 0) @[define.py:161]
    node _T_33 = mux(_T_32, io.next_pc, pc_reg) @[pc.py:24]
    pc_reg <= _T_33 @[pc.py:24]
    io.pc_out <= pc_reg @[pc.py:25]


  module InstCache : @[instcache.py:19]
    input clock : Clock @[rawmodule.py:100]
    input reset : UInt<1> @[rawmodule.py:101]
    output io : {flip addr : UInt<32>, inst : UInt<32>} @[instcache.py:12]

    cmem cache : UInt<8>[1024] @[instcache.py:22]
    read mport _T_41 = cache[io.addr], clock @[memory.py:52]
    node _T_42 = add(io.addr, UInt<1>(1)) @[instcache.py:23]
    read mport _T_43 = cache[_T_42], clock @[memory.py:52]
    node _T_44 = add(io.addr, UInt<2>(2)) @[instcache.py:24]
    read mport _T_45 = cache[_T_44], clock @[memory.py:52]
    node _T_46 = add(io.addr, UInt<2>(3)) @[instcache.py:24]
    read mport _T_47 = cache[_T_46], clock @[memory.py:52]
    node _T_48 = cat(_T_41, _T_43) @[instcache.py:24]
    node _T_49 = cat(_T_48, _T_45) @[instcache.py:24]
    node _T_50 = cat(_T_49, _T_47) @[instcache.py:24]
    io.inst <= _T_50 @[instcache.py:24]


  module Datapath : @[datapath.py:94]
    input clock : Clock @[rawmodule.py:100]
    input reset : UInt<1> @[rawmodule.py:101]
    output io : {if_io : {flip if_pc : UInt<32>, flip PC_Sel : UInt<2>, flip new_addr : UInt<32>, flip pc_recover : UInt<32>, if_new_pc : UInt<32>, if_pc_4 : UInt<32>}, id_io : {flip Bubble : UInt<1>, flip ctrl_in : {Reg_Write : UInt<1>, Imm_Sel : UInt<3>, ALU_Src : UInt<1>, ALUOp : UInt<5>, Branch : UInt<1>, Branch_Src : UInt<1>, Mem_Read : UInt<1>, Mem_Write : UInt<1>, Data_Size : UInt<2>, Load_Type : UInt<1>, Mem_to_Reg : UInt<3>, Jump_Type : UInt<1>}, ctrl_out : {Reg_Write : UInt<1>, Imm_Sel : UInt<3>, ALU_Src : UInt<1>, ALUOp : UInt<5>, Branch : UInt<1>, Branch_Src : UInt<1>, Mem_Read : UInt<1>, Mem_Write : UInt<1>, Data_Size : UInt<2>, Load_Type : UInt<1>, Mem_to_Reg : UInt<3>, Jump_Type : UInt<1>}}, ex_io : {flip ex_rs1_out : UInt<32>, flip ex_rs2_out : UInt<32>, flip ex_imm : UInt<32>, flip ex_pc : UInt<32>, flip ex_ALU_Src : UInt<1>, flip ex_Branch : UInt<1>, flip ex_alu_conflag : UInt<1>, flip ex_Branch_Src : UInt<1>, flip ex_Jump_Type : UInt<1>, flip ex_Imm_Sel : UInt<3>, flip Forward_A : UInt<2>, flip Forward_B : UInt<2>, alu_a_src : UInt<32>, alu_b_src : UInt<32>, ex_aui_pc : UInt<32>, forward_rs2_out : UInt<32>, PC_Src : UInt<1>, branch_addr : UInt<32>}, mem_io : {flip mem_rs2_out : UInt<32>, flip MemWrite_Src : UInt<1>, flip mem_Mem_to_Reg : UInt<3>, flip mem_alu_sum : UInt<32>, flip mem_pc_4 : UInt<32>, flip mem_imm : UInt<32>, flip mem_aui_pc : UInt<32>, mem_writedata : UInt<32>}, wb_io : {flip wb_alu_sum : UInt<32>, flip wb_dataout : UInt<32>, flip wb_pc_4 : UInt<32>, flip wb_imm : UInt<32>, flip wb_aui_pc : UInt<32>, flip wb_Mem_to_Reg : UInt<3>, wb_reg_writedata : UInt<32>}} @[datapath.py:84]

    node _T_133 = eq(io.ex_io.ex_Imm_Sel, UInt<3>(2)) @[datapath.py:103]
    node _T_134 = eq(io.ex_io.ex_Jump_Type, UInt<1>(1)) @[datapath.py:103]
    node _T_135 = and(_T_133, _T_134) @[datapath.py:103]
    node _T_136 = add(io.if_io.if_pc, UInt<3>(4)) @[datapath.py:105]
    io.if_io.if_pc_4 <= _T_136 @[datapath.py:106]
    node _T_137 = dshl(io.ex_io.ex_imm, UInt<1>(1)) @[datapath.py:108]
    node _T_138 = mux(_T_135, io.ex_io.ex_imm, _T_137) @[datapath.py:108]
    node _T_139 = bits(io.ex_io.ex_Branch_Src, 0, 0) @[define.py:161]
    node _T_140 = mux(_T_139, io.ex_io.alu_a_src, io.ex_io.ex_pc) @[datapath.py:109]
    node _T_141 = asUInt(_T_138) @[datapath.py:110]
    node _T_142 = add(_T_140, _T_141) @[datapath.py:110]
    node _T_143 = bits(io.ex_io.ex_Branch_Src, 0, 0) @[define.py:161]
    node _T_144 = mux(_T_143, io.ex_io.alu_a_src, io.ex_io.ex_pc) @[datapath.py:112]
    node _T_145 = add(_T_144, io.ex_io.ex_imm) @[datapath.py:112]
    io.ex_io.ex_aui_pc <= _T_145 @[datapath.py:112]
    io.ex_io.branch_addr <= _T_142 @[datapath.py:113]
    node _T_146 = bits(io.ex_io.ex_Jump_Type, 0, 0) @[define.py:161]
    node _T_147 = mux(_T_146, UInt<1>(1), io.ex_io.ex_alu_conflag) @[datapath.py:116]
    node _T_148 = bits(_T_147, 0, 0) @[define.py:161]
    node _T_149 = bits(io.ex_io.ex_Branch, 0, 0) @[define.py:161]
    node _T_150 = and(_T_148, _T_149) @[datapath.py:117]
    io.ex_io.PC_Src <= _T_150 @[datapath.py:118]
    node _T_151 = eq(io.if_io.PC_Sel, UInt<2>(1)) @[mux.py:72]
    node _T_152 = mux(_T_151, io.if_io.pc_recover, UInt(0)) @[datapath.py:123]
    node _T_153 = eq(io.if_io.PC_Sel, UInt<2>(2)) @[mux.py:72]
    node _T_154 = mux(_T_153, io.if_io.new_addr, _T_152) @[datapath.py:123]
    node _T_155 = eq(io.if_io.PC_Sel, UInt<2>(0)) @[mux.py:72]
    node _T_156 = mux(_T_155, _T_136, _T_154) @[datapath.py:123]
    io.if_io.if_new_pc <= _T_156 @[datapath.py:123]
    node _T_157 = bits(io.id_io.Bubble, 0, 0) @[define.py:161]
    node _T_158 = mux(_T_157, UInt(0), io.id_io.ctrl_in.Reg_Write) @[datapath.py:135]
    io.id_io.ctrl_out.Reg_Write <= _T_158 @[datapath.py:135]
    node _T_159 = bits(io.id_io.Bubble, 0, 0) @[define.py:161]
    node _T_160 = mux(_T_159, UInt(0), io.id_io.ctrl_in.Imm_Sel) @[datapath.py:135]
    io.id_io.ctrl_out.Imm_Sel <= _T_160 @[datapath.py:135]
    node _T_161 = bits(io.id_io.Bubble, 0, 0) @[define.py:161]
    node _T_162 = mux(_T_161, UInt(0), io.id_io.ctrl_in.ALU_Src) @[datapath.py:135]
    io.id_io.ctrl_out.ALU_Src <= _T_162 @[datapath.py:135]
    node _T_163 = bits(io.id_io.Bubble, 0, 0) @[define.py:161]
    node _T_164 = mux(_T_163, UInt(0), io.id_io.ctrl_in.ALUOp) @[datapath.py:135]
    io.id_io.ctrl_out.ALUOp <= _T_164 @[datapath.py:135]
    node _T_165 = bits(io.id_io.Bubble, 0, 0) @[define.py:161]
    node _T_166 = mux(_T_165, UInt(0), io.id_io.ctrl_in.Branch) @[datapath.py:135]
    io.id_io.ctrl_out.Branch <= _T_166 @[datapath.py:135]
    node _T_167 = bits(io.id_io.Bubble, 0, 0) @[define.py:161]
    node _T_168 = mux(_T_167, UInt(0), io.id_io.ctrl_in.Branch_Src) @[datapath.py:135]
    io.id_io.ctrl_out.Branch_Src <= _T_168 @[datapath.py:135]
    node _T_169 = bits(io.id_io.Bubble, 0, 0) @[define.py:161]
    node _T_170 = mux(_T_169, UInt(0), io.id_io.ctrl_in.Mem_Read) @[datapath.py:135]
    io.id_io.ctrl_out.Mem_Read <= _T_170 @[datapath.py:135]
    node _T_171 = bits(io.id_io.Bubble, 0, 0) @[define.py:161]
    node _T_172 = mux(_T_171, UInt(0), io.id_io.ctrl_in.Mem_Write) @[datapath.py:135]
    io.id_io.ctrl_out.Mem_Write <= _T_172 @[datapath.py:135]
    node _T_173 = bits(io.id_io.Bubble, 0, 0) @[define.py:161]
    node _T_174 = mux(_T_173, UInt(0), io.id_io.ctrl_in.Data_Size) @[datapath.py:135]
    io.id_io.ctrl_out.Data_Size <= _T_174 @[datapath.py:135]
    node _T_175 = bits(io.id_io.Bubble, 0, 0) @[define.py:161]
    node _T_176 = mux(_T_175, UInt(0), io.id_io.ctrl_in.Load_Type) @[datapath.py:135]
    io.id_io.ctrl_out.Load_Type <= _T_176 @[datapath.py:135]
    node _T_177 = bits(io.id_io.Bubble, 0, 0) @[define.py:161]
    node _T_178 = mux(_T_177, UInt(0), io.id_io.ctrl_in.Mem_to_Reg) @[datapath.py:135]
    io.id_io.ctrl_out.Mem_to_Reg <= _T_178 @[datapath.py:135]
    node _T_179 = bits(io.id_io.Bubble, 0, 0) @[define.py:161]
    node _T_180 = mux(_T_179, UInt(0), io.id_io.ctrl_in.Jump_Type) @[datapath.py:135]
    io.id_io.ctrl_out.Jump_Type <= _T_180 @[datapath.py:135]
    node _T_181 = eq(io.mem_io.mem_Mem_to_Reg, UInt<3>(4)) @[mux.py:72]
    node _T_182 = mux(_T_181, io.mem_io.mem_aui_pc, UInt<3>(0)) @[datapath.py:146]
    node _T_183 = eq(io.mem_io.mem_Mem_to_Reg, UInt<3>(3)) @[mux.py:72]
    node _T_184 = mux(_T_183, io.mem_io.mem_imm, _T_182) @[datapath.py:146]
    node _T_185 = eq(io.mem_io.mem_Mem_to_Reg, UInt<3>(2)) @[mux.py:72]
    node _T_186 = mux(_T_185, io.mem_io.mem_pc_4, _T_184) @[datapath.py:146]
    node _T_187 = eq(io.mem_io.mem_Mem_to_Reg, UInt<3>(0)) @[mux.py:72]
    node _T_188 = mux(_T_187, io.mem_io.mem_alu_sum, _T_186) @[datapath.py:146]
    node _T_189 = eq(io.ex_io.Forward_A, UInt<2>(2)) @[mux.py:72]
    node _T_190 = mux(_T_189, _T_188, io.ex_io.ex_rs1_out) @[datapath.py:152]
    node _T_191 = eq(io.ex_io.Forward_A, UInt<2>(1)) @[mux.py:72]
    node _T_192 = mux(_T_191, io.wb_io.wb_reg_writedata, _T_190) @[datapath.py:152]
    node _T_193 = eq(io.ex_io.Forward_A, UInt<2>(0)) @[mux.py:72]
    node _T_194 = mux(_T_193, io.ex_io.ex_rs1_out, _T_192) @[datapath.py:152]
    io.ex_io.alu_a_src <= _T_194 @[datapath.py:152]
    node _T_195 = eq(io.ex_io.Forward_B, UInt<2>(2)) @[mux.py:72]
    node _T_196 = mux(_T_195, _T_188, io.ex_io.ex_rs2_out) @[datapath.py:158]
    node _T_197 = eq(io.ex_io.Forward_B, UInt<2>(1)) @[mux.py:72]
    node _T_198 = mux(_T_197, io.wb_io.wb_reg_writedata, _T_196) @[datapath.py:158]
    node _T_199 = eq(io.ex_io.Forward_B, UInt<2>(0)) @[mux.py:72]
    node _T_200 = mux(_T_199, io.ex_io.ex_rs2_out, _T_198) @[datapath.py:158]
    node _T_201 = bits(io.ex_io.ex_ALU_Src, 0, 0) @[define.py:161]
    node _T_202 = mux(_T_201, io.ex_io.ex_imm, _T_200) @[datapath.py:162]
    io.ex_io.alu_b_src <= _T_202 @[datapath.py:162]
    io.ex_io.forward_rs2_out <= _T_200 @[datapath.py:163]
    node _T_203 = bits(io.mem_io.MemWrite_Src, 0, 0) @[define.py:161]
    node _T_204 = mux(_T_203, io.wb_io.wb_reg_writedata, io.mem_io.mem_rs2_out) @[datapath.py:169]
    io.mem_io.mem_writedata <= _T_204 @[datapath.py:169]
    node _T_205 = eq(io.wb_io.wb_Mem_to_Reg, UInt<3>(4)) @[mux.py:72]
    node _T_206 = mux(_T_205, io.wb_io.wb_aui_pc, io.wb_io.wb_alu_sum) @[datapath.py:180]
    node _T_207 = eq(io.wb_io.wb_Mem_to_Reg, UInt<3>(3)) @[mux.py:72]
    node _T_208 = mux(_T_207, io.wb_io.wb_imm, _T_206) @[datapath.py:180]
    node _T_209 = eq(io.wb_io.wb_Mem_to_Reg, UInt<3>(2)) @[mux.py:72]
    node _T_210 = mux(_T_209, io.wb_io.wb_pc_4, _T_208) @[datapath.py:180]
    node _T_211 = eq(io.wb_io.wb_Mem_to_Reg, UInt<3>(1)) @[mux.py:72]
    node _T_212 = mux(_T_211, io.wb_io.wb_dataout, _T_210) @[datapath.py:180]
    node _T_213 = eq(io.wb_io.wb_Mem_to_Reg, UInt<3>(0)) @[mux.py:72]
    node _T_214 = mux(_T_213, io.wb_io.wb_alu_sum, _T_212) @[datapath.py:180]
    io.wb_io.wb_reg_writedata <= _T_214 @[datapath.py:180]


  module IF_ID_Register : @[if_id_register.py:28]
    input clock : Clock @[rawmodule.py:100]
    input reset : UInt<1> @[rawmodule.py:101]
    output io : {flip if_pc : UInt<32>, flip if_pc_4 : UInt<32>, flip if_inst : UInt<32>, id_pc : UInt<32>, id_pc_4 : UInt<32>, id_rs1 : UInt<5>, id_rs2 : UInt<5>, id_inst : UInt<32>, flip IF_ID_Write : UInt<1>, flip IF_ID_Flush : UInt<1>} @[if_id_register.py:11]

    reg pc : UInt<32>, clock with: (reset => (reset, UInt(0))) @[if_id_register.py:31]
    reg pc_4 : UInt<32>, clock with: (reset => (reset, UInt(0))) @[if_id_register.py:32]
    reg inst : UInt<32>, clock with: (reset => (reset, UInt(0))) @[if_id_register.py:33]
    node _T_232 = bits(io.IF_ID_Flush, 0, 0) @[define.py:161]
    node _T_233 = bits(io.IF_ID_Write, 0, 0) @[define.py:161]
    node _T_234 = mux(_T_233, io.if_pc, pc) @[if_id_register.py:36]
    node _T_235 = mux(_T_232, UInt(0), _T_234) @[if_id_register.py:36]
    pc <= _T_235 @[if_id_register.py:36]
    node _T_236 = bits(io.IF_ID_Flush, 0, 0) @[define.py:161]
    node _T_237 = bits(io.IF_ID_Write, 0, 0) @[define.py:161]
    node _T_238 = mux(_T_237, io.if_pc_4, pc_4) @[if_id_register.py:38]
    node _T_239 = mux(_T_236, UInt(0), _T_238) @[if_id_register.py:38]
    pc_4 <= _T_239 @[if_id_register.py:38]
    node _T_240 = bits(io.IF_ID_Flush, 0, 0) @[define.py:161]
    node _T_241 = bits(io.IF_ID_Write, 0, 0) @[define.py:161]
    node _T_242 = mux(_T_241, io.if_inst, inst) @[if_id_register.py:40]
    node _T_243 = mux(_T_240, UInt(0), _T_242) @[if_id_register.py:40]
    inst <= _T_243 @[if_id_register.py:40]
    io.id_pc <= pc @[if_id_register.py:42]
    io.id_pc_4 <= pc_4 @[if_id_register.py:43]
    io.id_inst <= inst @[if_id_register.py:44]
    node _T_244 = bits(inst, 19, 15) @[if_id_register.py:45]
    io.id_rs1 <= _T_244 @[if_id_register.py:45]
    node _T_245 = bits(inst, 24, 20) @[if_id_register.py:46]
    io.id_rs2 <= _T_245 @[if_id_register.py:46]


  module RegFile : @[regfile.py:24]
    input clock : Clock @[rawmodule.py:100]
    input reset : UInt<1> @[rawmodule.py:101]
    output io : {flip rs1 : UInt<5>, flip rs2 : UInt<5>, flip rd : UInt<5>, flip wdata : UInt<32>, rs1_out : UInt<32>, rs2_out : UInt<32>, flip Reg_Write : UInt<1>} @[regfile.py:11]

    cmem regfile : UInt<32>[32] @[regfile.py:27]
    node _T_258 = bits(io.Reg_Write, 0, 0) @[define.py:161]
    node _T_259 = eq(io.rs1, io.rd) @[regfile.py:30]
    node _T_260 = and(_T_258, _T_259) @[regfile.py:30]
    node _T_261 = bits(io.Reg_Write, 0, 0) @[define.py:161]
    node _T_262 = eq(io.rs2, io.rd) @[regfile.py:31]
    node _T_263 = and(_T_261, _T_262) @[regfile.py:31]
    read mport _T_264 = regfile[io.rs1], clock @[memory.py:52]
    node _T_265 = mux(_T_260, io.wdata, _T_264) @[regfile.py:33]
    io.rs1_out <= _T_265 @[regfile.py:33]
    read mport _T_266 = regfile[io.rs2], clock @[memory.py:52]
    node _T_267 = mux(_T_263, io.wdata, _T_266) @[regfile.py:34]
    io.rs2_out <= _T_267 @[regfile.py:34]
    node _T_268 = bits(io.Reg_Write, 0, 0) @[define.py:161]
    node _T_269 = eq(io.rd, UInt(0)) @[regfile.py:36]
    node _T_270 = mux(_T_269, UInt(0), io.wdata) @[regfile.py:36]
    read mport _T_271 = regfile[io.rd], clock @[memory.py:52]
    node _T_272 = mux(_T_268, _T_270, _T_271) @[regfile.py:37]
    write mport _T_273 = regfile[io.rd], clock @[regfile.py:37]
    _T_273 <= _T_272 @[regfile.py:37]


  module ImmGen : @[immgen.py:20]
    input clock : Clock @[rawmodule.py:100]
    input reset : UInt<1> @[rawmodule.py:101]
    output io : {flip inst : UInt<32>, imm : UInt<32>, flip Imm_Sel : UInt<3>} @[immgen.py:11]

    node _T_281 = asSInt(UInt<32>(0)) @[immgen.py:23]
    node _T_282 = bits(io.inst, 31, 20) @[immgen.py:24]
    node _T_283 = asSInt(_T_282) @[immgen.py:24]
    node _T_284 = bits(io.inst, 31, 25) @[immgen.py:25]
    node _T_285 = bits(io.inst, 11, 7) @[immgen.py:25]
    node _T_286 = cat(_T_284, _T_285) @[immgen.py:25]
    node _T_287 = asSInt(_T_286) @[immgen.py:25]
    node _T_288 = bits(io.inst, 31, 31) @[immgen.py:26]
    node _T_289 = bits(io.inst, 7, 7) @[immgen.py:26]
    node _T_290 = bits(io.inst, 30, 25) @[immgen.py:26]
    node _T_291 = bits(io.inst, 11, 8) @[immgen.py:26]
    node _T_292 = cat(_T_288, _T_289) @[immgen.py:26]
    node _T_293 = cat(_T_292, _T_290) @[immgen.py:26]
    node _T_294 = cat(_T_293, _T_291) @[immgen.py:26]
    node _T_295 = cat(_T_294, UInt<1>(0)) @[immgen.py:26]
    node _T_296 = asSInt(_T_295) @[immgen.py:26]
    node _T_297 = bits(io.inst, 31, 12) @[immgen.py:27]
    node _T_298 = cat(_T_297, UInt<12>(0)) @[immgen.py:27]
    node _T_299 = asSInt(_T_298) @[immgen.py:27]
    node _T_300 = bits(io.inst, 31, 31) @[immgen.py:28]
    node _T_301 = bits(io.inst, 19, 12) @[immgen.py:28]
    node _T_302 = bits(io.inst, 20, 20) @[immgen.py:28]
    node _T_303 = bits(io.inst, 30, 21) @[immgen.py:28]
    node _T_304 = cat(_T_300, _T_301) @[immgen.py:28]
    node _T_305 = cat(_T_304, _T_302) @[immgen.py:28]
    node _T_306 = cat(_T_305, _T_303) @[immgen.py:28]
    node _T_307 = cat(_T_306, UInt<1>(0)) @[immgen.py:28]
    node _T_308 = asSInt(_T_307) @[immgen.py:28]
    node _T_309 = eq(io.Imm_Sel, UInt<3>(6)) @[mux.py:72]
    node _T_310 = mux(_T_309, _T_308, SInt<32>(0)) @[immgen.py:36]
    node _T_311 = eq(io.Imm_Sel, UInt<3>(5)) @[mux.py:72]
    node _T_312 = mux(_T_311, _T_299, _T_310) @[immgen.py:36]
    node _T_313 = eq(io.Imm_Sel, UInt<3>(4)) @[mux.py:72]
    node _T_314 = mux(_T_313, _T_296, _T_312) @[immgen.py:36]
    node _T_315 = eq(io.Imm_Sel, UInt<3>(3)) @[mux.py:72]
    node _T_316 = mux(_T_315, _T_287, _T_314) @[immgen.py:36]
    node _T_317 = eq(io.Imm_Sel, UInt<3>(2)) @[mux.py:72]
    node _T_318 = mux(_T_317, _T_283, _T_316) @[immgen.py:36]
    node _T_319 = eq(io.Imm_Sel, UInt<3>(1)) @[mux.py:72]
    node _T_320 = mux(_T_319, _T_281, _T_318) @[immgen.py:36]
    node _T_321 = asUInt(_T_320) @[immgen.py:36]
    io.imm <= _T_321 @[immgen.py:36]


  module Control : @[control.py:92]
    input clock : Clock @[rawmodule.py:100]
    input reset : UInt<1> @[rawmodule.py:101]
    output io : {flip inst : UInt<32>, ctrl : {Reg_Write : UInt<1>, Imm_Sel : UInt<3>, ALU_Src : UInt<1>, ALUOp : UInt<5>, Branch : UInt<1>, Branch_Src : UInt<1>, Mem_Read : UInt<1>, Mem_Write : UInt<1>, Data_Size : UInt<2>, Load_Type : UInt<1>, Mem_to_Reg : UInt<3>, Jump_Type : UInt<1>}} @[control.py:85]

    node _T_341 = and(io.inst, UInt<32>("h0fe00707f")) @[listlookup.py:52]
    node _T_342 = eq(_T_341, UInt<6>("h033")) @[listlookup.py:52]
    node _T_343 = and(io.inst, UInt<32>("h0fe00707f")) @[listlookup.py:52]
    node _T_344 = eq(_T_343, UInt<31>("h040000033")) @[listlookup.py:52]
    node _T_345 = and(io.inst, UInt<32>("h0fe00707f")) @[listlookup.py:52]
    node _T_346 = eq(_T_345, UInt<15>("h07033")) @[listlookup.py:52]
    node _T_347 = and(io.inst, UInt<32>("h0fe00707f")) @[listlookup.py:52]
    node _T_348 = eq(_T_347, UInt<15>("h06033")) @[listlookup.py:52]
    node _T_349 = and(io.inst, UInt<32>("h0fe00707f")) @[listlookup.py:52]
    node _T_350 = eq(_T_349, UInt<15>("h04033")) @[listlookup.py:52]
    node _T_351 = and(io.inst, UInt<15>("h0707f")) @[listlookup.py:52]
    node _T_352 = eq(_T_351, UInt<5>("h013")) @[listlookup.py:52]
    node _T_353 = and(io.inst, UInt<15>("h0707f")) @[listlookup.py:52]
    node _T_354 = eq(_T_353, UInt<15>("h07013")) @[listlookup.py:52]
    node _T_355 = and(io.inst, UInt<15>("h0707f")) @[listlookup.py:52]
    node _T_356 = eq(_T_355, UInt<15>("h06013")) @[listlookup.py:52]
    node _T_357 = and(io.inst, UInt<15>("h0707f")) @[listlookup.py:52]
    node _T_358 = eq(_T_357, UInt<15>("h04013")) @[listlookup.py:52]
    node _T_359 = and(io.inst, UInt<32>("h0fe00707f")) @[listlookup.py:52]
    node _T_360 = eq(_T_359, UInt<13>("h01033")) @[listlookup.py:52]
    node _T_361 = and(io.inst, UInt<32>("h0fe00707f")) @[listlookup.py:52]
    node _T_362 = eq(_T_361, UInt<15>("h05033")) @[listlookup.py:52]
    node _T_363 = and(io.inst, UInt<32>("h0fe00707f")) @[listlookup.py:52]
    node _T_364 = eq(_T_363, UInt<31>("h040005033")) @[listlookup.py:52]
    node _T_365 = and(io.inst, UInt<32>("h0fe00707f")) @[listlookup.py:52]
    node _T_366 = eq(_T_365, UInt<13>("h01013")) @[listlookup.py:52]
    node _T_367 = and(io.inst, UInt<32>("h0fe00707f")) @[listlookup.py:52]
    node _T_368 = eq(_T_367, UInt<15>("h05013")) @[listlookup.py:52]
    node _T_369 = and(io.inst, UInt<32>("h0fe00707f")) @[listlookup.py:52]
    node _T_370 = eq(_T_369, UInt<31>("h040005013")) @[listlookup.py:52]
    node _T_371 = and(io.inst, UInt<32>("h0fe00707f")) @[listlookup.py:52]
    node _T_372 = eq(_T_371, UInt<14>("h02033")) @[listlookup.py:52]
    node _T_373 = and(io.inst, UInt<32>("h0fe00707f")) @[listlookup.py:52]
    node _T_374 = eq(_T_373, UInt<14>("h03033")) @[listlookup.py:52]
    node _T_375 = and(io.inst, UInt<15>("h0707f")) @[listlookup.py:52]
    node _T_376 = eq(_T_375, UInt<14>("h02013")) @[listlookup.py:52]
    node _T_377 = and(io.inst, UInt<15>("h0707f")) @[listlookup.py:52]
    node _T_378 = eq(_T_377, UInt<14>("h03013")) @[listlookup.py:52]
    node _T_379 = and(io.inst, UInt<15>("h0707f")) @[listlookup.py:52]
    node _T_380 = eq(_T_379, UInt<14>("h02003")) @[listlookup.py:52]
    node _T_381 = and(io.inst, UInt<15>("h0707f")) @[listlookup.py:52]
    node _T_382 = eq(_T_381, UInt<13>("h01003")) @[listlookup.py:52]
    node _T_383 = and(io.inst, UInt<15>("h0707f")) @[listlookup.py:52]
    node _T_384 = eq(_T_383, UInt<2>("h03")) @[listlookup.py:52]
    node _T_385 = and(io.inst, UInt<15>("h0707f")) @[listlookup.py:52]
    node _T_386 = eq(_T_385, UInt<15>("h05003")) @[listlookup.py:52]
    node _T_387 = and(io.inst, UInt<15>("h0707f")) @[listlookup.py:52]
    node _T_388 = eq(_T_387, UInt<15>("h04003")) @[listlookup.py:52]
    node _T_389 = and(io.inst, UInt<15>("h0707f")) @[listlookup.py:52]
    node _T_390 = eq(_T_389, UInt<14>("h02023")) @[listlookup.py:52]
    node _T_391 = and(io.inst, UInt<15>("h0707f")) @[listlookup.py:52]
    node _T_392 = eq(_T_391, UInt<13>("h01023")) @[listlookup.py:52]
    node _T_393 = and(io.inst, UInt<15>("h0707f")) @[listlookup.py:52]
    node _T_394 = eq(_T_393, UInt<6>("h023")) @[listlookup.py:52]
    node _T_395 = and(io.inst, UInt<15>("h0707f")) @[listlookup.py:52]
    node _T_396 = eq(_T_395, UInt<7>("h063")) @[listlookup.py:52]
    node _T_397 = and(io.inst, UInt<15>("h0707f")) @[listlookup.py:52]
    node _T_398 = eq(_T_397, UInt<13>("h01063")) @[listlookup.py:52]
    node _T_399 = and(io.inst, UInt<15>("h0707f")) @[listlookup.py:52]
    node _T_400 = eq(_T_399, UInt<15>("h04063")) @[listlookup.py:52]
    node _T_401 = and(io.inst, UInt<15>("h0707f")) @[listlookup.py:52]
    node _T_402 = eq(_T_401, UInt<15>("h05063")) @[listlookup.py:52]
    node _T_403 = and(io.inst, UInt<15>("h0707f")) @[listlookup.py:52]
    node _T_404 = eq(_T_403, UInt<15>("h06063")) @[listlookup.py:52]
    node _T_405 = and(io.inst, UInt<15>("h0707f")) @[listlookup.py:52]
    node _T_406 = eq(_T_405, UInt<15>("h07063")) @[listlookup.py:52]
    node _T_407 = and(io.inst, UInt<7>("h07f")) @[listlookup.py:52]
    node _T_408 = eq(_T_407, UInt<7>("h06f")) @[listlookup.py:52]
    node _T_409 = and(io.inst, UInt<15>("h0707f")) @[listlookup.py:52]
    node _T_410 = eq(_T_409, UInt<7>("h067")) @[listlookup.py:52]
    node _T_411 = and(io.inst, UInt<7>("h07f")) @[listlookup.py:52]
    node _T_412 = eq(_T_411, UInt<6>("h037")) @[listlookup.py:52]
    node _T_413 = and(io.inst, UInt<7>("h07f")) @[listlookup.py:52]
    node _T_414 = eq(_T_413, UInt<5>("h017")) @[listlookup.py:52]
    node _T_415 = and(io.inst, UInt<32>("h0ffffffff")) @[listlookup.py:52]
    node _T_416 = eq(_T_415, UInt<5>("h013")) @[listlookup.py:52]
    node _T_417 = mux(_T_416, UInt<1>(0), UInt<1>(0)) @[control.py:95]
    node _T_418 = mux(_T_414, UInt<1>(1), _T_417) @[control.py:95]
    node _T_419 = mux(_T_412, UInt<1>(1), _T_418) @[control.py:95]
    node _T_420 = mux(_T_410, UInt<1>(1), _T_419) @[control.py:95]
    node _T_421 = mux(_T_408, UInt<1>(1), _T_420) @[control.py:95]
    node _T_422 = mux(_T_406, UInt<1>(0), _T_421) @[control.py:95]
    node _T_423 = mux(_T_404, UInt<1>(0), _T_422) @[control.py:95]
    node _T_424 = mux(_T_402, UInt<1>(0), _T_423) @[control.py:95]
    node _T_425 = mux(_T_400, UInt<1>(0), _T_424) @[control.py:95]
    node _T_426 = mux(_T_398, UInt<1>(0), _T_425) @[control.py:95]
    node _T_427 = mux(_T_396, UInt<1>(0), _T_426) @[control.py:95]
    node _T_428 = mux(_T_394, UInt<1>(0), _T_427) @[control.py:95]
    node _T_429 = mux(_T_392, UInt<1>(0), _T_428) @[control.py:95]
    node _T_430 = mux(_T_390, UInt<1>(0), _T_429) @[control.py:95]
    node _T_431 = mux(_T_388, UInt<1>(1), _T_430) @[control.py:95]
    node _T_432 = mux(_T_386, UInt<1>(1), _T_431) @[control.py:95]
    node _T_433 = mux(_T_384, UInt<1>(1), _T_432) @[control.py:95]
    node _T_434 = mux(_T_382, UInt<1>(1), _T_433) @[control.py:95]
    node _T_435 = mux(_T_380, UInt<1>(1), _T_434) @[control.py:95]
    node _T_436 = mux(_T_378, UInt<1>(1), _T_435) @[control.py:95]
    node _T_437 = mux(_T_376, UInt<1>(1), _T_436) @[control.py:95]
    node _T_438 = mux(_T_374, UInt<1>(1), _T_437) @[control.py:95]
    node _T_439 = mux(_T_372, UInt<1>(1), _T_438) @[control.py:95]
    node _T_440 = mux(_T_370, UInt<1>(1), _T_439) @[control.py:95]
    node _T_441 = mux(_T_368, UInt<1>(1), _T_440) @[control.py:95]
    node _T_442 = mux(_T_366, UInt<1>(1), _T_441) @[control.py:95]
    node _T_443 = mux(_T_364, UInt<1>(1), _T_442) @[control.py:95]
    node _T_444 = mux(_T_362, UInt<1>(1), _T_443) @[control.py:95]
    node _T_445 = mux(_T_360, UInt<1>(1), _T_444) @[control.py:95]
    node _T_446 = mux(_T_358, UInt<1>(1), _T_445) @[control.py:95]
    node _T_447 = mux(_T_356, UInt<1>(1), _T_446) @[control.py:95]
    node _T_448 = mux(_T_354, UInt<1>(1), _T_447) @[control.py:95]
    node _T_449 = mux(_T_352, UInt<1>(1), _T_448) @[control.py:95]
    node _T_450 = mux(_T_350, UInt<1>(1), _T_449) @[control.py:95]
    node _T_451 = mux(_T_348, UInt<1>(1), _T_450) @[control.py:95]
    node _T_452 = mux(_T_346, UInt<1>(1), _T_451) @[control.py:95]
    node _T_453 = mux(_T_344, UInt<1>(1), _T_452) @[control.py:95]
    node _T_454 = mux(_T_342, UInt<1>(1), _T_453) @[control.py:95]
    node _T_455 = mux(_T_416, UInt<3>(0), UInt<3>(0)) @[control.py:95]
    node _T_456 = mux(_T_414, UInt<3>(5), _T_455) @[control.py:95]
    node _T_457 = mux(_T_412, UInt<3>(5), _T_456) @[control.py:95]
    node _T_458 = mux(_T_410, UInt<3>(2), _T_457) @[control.py:95]
    node _T_459 = mux(_T_408, UInt<3>(6), _T_458) @[control.py:95]
    node _T_460 = mux(_T_406, UInt<3>(4), _T_459) @[control.py:95]
    node _T_461 = mux(_T_404, UInt<3>(4), _T_460) @[control.py:95]
    node _T_462 = mux(_T_402, UInt<3>(4), _T_461) @[control.py:95]
    node _T_463 = mux(_T_400, UInt<3>(4), _T_462) @[control.py:95]
    node _T_464 = mux(_T_398, UInt<3>(4), _T_463) @[control.py:95]
    node _T_465 = mux(_T_396, UInt<3>(4), _T_464) @[control.py:95]
    node _T_466 = mux(_T_394, UInt<3>(3), _T_465) @[control.py:95]
    node _T_467 = mux(_T_392, UInt<3>(3), _T_466) @[control.py:95]
    node _T_468 = mux(_T_390, UInt<3>(3), _T_467) @[control.py:95]
    node _T_469 = mux(_T_388, UInt<3>(2), _T_468) @[control.py:95]
    node _T_470 = mux(_T_386, UInt<3>(2), _T_469) @[control.py:95]
    node _T_471 = mux(_T_384, UInt<3>(2), _T_470) @[control.py:95]
    node _T_472 = mux(_T_382, UInt<3>(2), _T_471) @[control.py:95]
    node _T_473 = mux(_T_380, UInt<3>(2), _T_472) @[control.py:95]
    node _T_474 = mux(_T_378, UInt<3>(2), _T_473) @[control.py:95]
    node _T_475 = mux(_T_376, UInt<3>(2), _T_474) @[control.py:95]
    node _T_476 = mux(_T_374, UInt<3>(1), _T_475) @[control.py:95]
    node _T_477 = mux(_T_372, UInt<3>(1), _T_476) @[control.py:95]
    node _T_478 = mux(_T_370, UInt<3>(2), _T_477) @[control.py:95]
    node _T_479 = mux(_T_368, UInt<3>(2), _T_478) @[control.py:95]
    node _T_480 = mux(_T_366, UInt<3>(2), _T_479) @[control.py:95]
    node _T_481 = mux(_T_364, UInt<3>(1), _T_480) @[control.py:95]
    node _T_482 = mux(_T_362, UInt<3>(1), _T_481) @[control.py:95]
    node _T_483 = mux(_T_360, UInt<3>(1), _T_482) @[control.py:95]
    node _T_484 = mux(_T_358, UInt<3>(2), _T_483) @[control.py:95]
    node _T_485 = mux(_T_356, UInt<3>(2), _T_484) @[control.py:95]
    node _T_486 = mux(_T_354, UInt<3>(2), _T_485) @[control.py:95]
    node _T_487 = mux(_T_352, UInt<3>(2), _T_486) @[control.py:95]
    node _T_488 = mux(_T_350, UInt<3>(1), _T_487) @[control.py:95]
    node _T_489 = mux(_T_348, UInt<3>(1), _T_488) @[control.py:95]
    node _T_490 = mux(_T_346, UInt<3>(1), _T_489) @[control.py:95]
    node _T_491 = mux(_T_344, UInt<3>(1), _T_490) @[control.py:95]
    node _T_492 = mux(_T_342, UInt<3>(1), _T_491) @[control.py:95]
    node _T_493 = mux(_T_416, UInt<1>(0), UInt<1>(0)) @[control.py:95]
    node _T_494 = mux(_T_414, UInt<1>(0), _T_493) @[control.py:95]
    node _T_495 = mux(_T_412, UInt<1>(0), _T_494) @[control.py:95]
    node _T_496 = mux(_T_410, UInt<1>(0), _T_495) @[control.py:95]
    node _T_497 = mux(_T_408, UInt<1>(0), _T_496) @[control.py:95]
    node _T_498 = mux(_T_406, UInt<1>(0), _T_497) @[control.py:95]
    node _T_499 = mux(_T_404, UInt<1>(0), _T_498) @[control.py:95]
    node _T_500 = mux(_T_402, UInt<1>(0), _T_499) @[control.py:95]
    node _T_501 = mux(_T_400, UInt<1>(0), _T_500) @[control.py:95]
    node _T_502 = mux(_T_398, UInt<1>(0), _T_501) @[control.py:95]
    node _T_503 = mux(_T_396, UInt<1>(0), _T_502) @[control.py:95]
    node _T_504 = mux(_T_394, UInt<1>(1), _T_503) @[control.py:95]
    node _T_505 = mux(_T_392, UInt<1>(1), _T_504) @[control.py:95]
    node _T_506 = mux(_T_390, UInt<1>(1), _T_505) @[control.py:95]
    node _T_507 = mux(_T_388, UInt<1>(1), _T_506) @[control.py:95]
    node _T_508 = mux(_T_386, UInt<1>(1), _T_507) @[control.py:95]
    node _T_509 = mux(_T_384, UInt<1>(1), _T_508) @[control.py:95]
    node _T_510 = mux(_T_382, UInt<1>(1), _T_509) @[control.py:95]
    node _T_511 = mux(_T_380, UInt<1>(1), _T_510) @[control.py:95]
    node _T_512 = mux(_T_378, UInt<1>(1), _T_511) @[control.py:95]
    node _T_513 = mux(_T_376, UInt<1>(1), _T_512) @[control.py:95]
    node _T_514 = mux(_T_374, UInt<1>(0), _T_513) @[control.py:95]
    node _T_515 = mux(_T_372, UInt<1>(0), _T_514) @[control.py:95]
    node _T_516 = mux(_T_370, UInt<1>(1), _T_515) @[control.py:95]
    node _T_517 = mux(_T_368, UInt<1>(1), _T_516) @[control.py:95]
    node _T_518 = mux(_T_366, UInt<1>(1), _T_517) @[control.py:95]
    node _T_519 = mux(_T_364, UInt<1>(0), _T_518) @[control.py:95]
    node _T_520 = mux(_T_362, UInt<1>(0), _T_519) @[control.py:95]
    node _T_521 = mux(_T_360, UInt<1>(0), _T_520) @[control.py:95]
    node _T_522 = mux(_T_358, UInt<1>(1), _T_521) @[control.py:95]
    node _T_523 = mux(_T_356, UInt<1>(1), _T_522) @[control.py:95]
    node _T_524 = mux(_T_354, UInt<1>(1), _T_523) @[control.py:95]
    node _T_525 = mux(_T_352, UInt<1>(1), _T_524) @[control.py:95]
    node _T_526 = mux(_T_350, UInt<1>(0), _T_525) @[control.py:95]
    node _T_527 = mux(_T_348, UInt<1>(0), _T_526) @[control.py:95]
    node _T_528 = mux(_T_346, UInt<1>(0), _T_527) @[control.py:95]
    node _T_529 = mux(_T_344, UInt<1>(0), _T_528) @[control.py:95]
    node _T_530 = mux(_T_342, UInt<1>(0), _T_529) @[control.py:95]
    node _T_531 = mux(_T_416, UInt<5>(16), UInt<5>(16)) @[control.py:95]
    node _T_532 = mux(_T_414, UInt<5>(0), _T_531) @[control.py:95]
    node _T_533 = mux(_T_412, UInt<5>(0), _T_532) @[control.py:95]
    node _T_534 = mux(_T_410, UInt<5>(0), _T_533) @[control.py:95]
    node _T_535 = mux(_T_408, UInt<5>(0), _T_534) @[control.py:95]
    node _T_536 = mux(_T_406, UInt<5>(15), _T_535) @[control.py:95]
    node _T_537 = mux(_T_404, UInt<5>(14), _T_536) @[control.py:95]
    node _T_538 = mux(_T_402, UInt<5>(13), _T_537) @[control.py:95]
    node _T_539 = mux(_T_400, UInt<5>(12), _T_538) @[control.py:95]
    node _T_540 = mux(_T_398, UInt<5>(11), _T_539) @[control.py:95]
    node _T_541 = mux(_T_396, UInt<5>(10), _T_540) @[control.py:95]
    node _T_542 = mux(_T_394, UInt<5>(0), _T_541) @[control.py:95]
    node _T_543 = mux(_T_392, UInt<5>(0), _T_542) @[control.py:95]
    node _T_544 = mux(_T_390, UInt<5>(0), _T_543) @[control.py:95]
    node _T_545 = mux(_T_388, UInt<5>(0), _T_544) @[control.py:95]
    node _T_546 = mux(_T_386, UInt<5>(0), _T_545) @[control.py:95]
    node _T_547 = mux(_T_384, UInt<5>(0), _T_546) @[control.py:95]
    node _T_548 = mux(_T_382, UInt<5>(0), _T_547) @[control.py:95]
    node _T_549 = mux(_T_380, UInt<5>(0), _T_548) @[control.py:95]
    node _T_550 = mux(_T_378, UInt<5>(9), _T_549) @[control.py:95]
    node _T_551 = mux(_T_376, UInt<5>(8), _T_550) @[control.py:95]
    node _T_552 = mux(_T_374, UInt<5>(9), _T_551) @[control.py:95]
    node _T_553 = mux(_T_372, UInt<5>(8), _T_552) @[control.py:95]
    node _T_554 = mux(_T_370, UInt<5>(7), _T_553) @[control.py:95]
    node _T_555 = mux(_T_368, UInt<5>(6), _T_554) @[control.py:95]
    node _T_556 = mux(_T_366, UInt<5>(5), _T_555) @[control.py:95]
    node _T_557 = mux(_T_364, UInt<5>(7), _T_556) @[control.py:95]
    node _T_558 = mux(_T_362, UInt<5>(6), _T_557) @[control.py:95]
    node _T_559 = mux(_T_360, UInt<5>(5), _T_558) @[control.py:95]
    node _T_560 = mux(_T_358, UInt<5>(4), _T_559) @[control.py:95]
    node _T_561 = mux(_T_356, UInt<5>(3), _T_560) @[control.py:95]
    node _T_562 = mux(_T_354, UInt<5>(2), _T_561) @[control.py:95]
    node _T_563 = mux(_T_352, UInt<5>(0), _T_562) @[control.py:95]
    node _T_564 = mux(_T_350, UInt<5>(4), _T_563) @[control.py:95]
    node _T_565 = mux(_T_348, UInt<5>(3), _T_564) @[control.py:95]
    node _T_566 = mux(_T_346, UInt<5>(2), _T_565) @[control.py:95]
    node _T_567 = mux(_T_344, UInt<5>(1), _T_566) @[control.py:95]
    node _T_568 = mux(_T_342, UInt<5>(0), _T_567) @[control.py:95]
    node _T_569 = mux(_T_416, UInt<1>(0), UInt<1>(0)) @[control.py:95]
    node _T_570 = mux(_T_414, UInt<1>(0), _T_569) @[control.py:95]
    node _T_571 = mux(_T_412, UInt<1>(0), _T_570) @[control.py:95]
    node _T_572 = mux(_T_410, UInt<1>(1), _T_571) @[control.py:95]
    node _T_573 = mux(_T_408, UInt<1>(1), _T_572) @[control.py:95]
    node _T_574 = mux(_T_406, UInt<1>(1), _T_573) @[control.py:95]
    node _T_575 = mux(_T_404, UInt<1>(1), _T_574) @[control.py:95]
    node _T_576 = mux(_T_402, UInt<1>(1), _T_575) @[control.py:95]
    node _T_577 = mux(_T_400, UInt<1>(1), _T_576) @[control.py:95]
    node _T_578 = mux(_T_398, UInt<1>(1), _T_577) @[control.py:95]
    node _T_579 = mux(_T_396, UInt<1>(1), _T_578) @[control.py:95]
    node _T_580 = mux(_T_394, UInt<1>(0), _T_579) @[control.py:95]
    node _T_581 = mux(_T_392, UInt<1>(0), _T_580) @[control.py:95]
    node _T_582 = mux(_T_390, UInt<1>(0), _T_581) @[control.py:95]
    node _T_583 = mux(_T_388, UInt<1>(0), _T_582) @[control.py:95]
    node _T_584 = mux(_T_386, UInt<1>(0), _T_583) @[control.py:95]
    node _T_585 = mux(_T_384, UInt<1>(0), _T_584) @[control.py:95]
    node _T_586 = mux(_T_382, UInt<1>(0), _T_585) @[control.py:95]
    node _T_587 = mux(_T_380, UInt<1>(0), _T_586) @[control.py:95]
    node _T_588 = mux(_T_378, UInt<1>(0), _T_587) @[control.py:95]
    node _T_589 = mux(_T_376, UInt<1>(0), _T_588) @[control.py:95]
    node _T_590 = mux(_T_374, UInt<1>(0), _T_589) @[control.py:95]
    node _T_591 = mux(_T_372, UInt<1>(0), _T_590) @[control.py:95]
    node _T_592 = mux(_T_370, UInt<1>(0), _T_591) @[control.py:95]
    node _T_593 = mux(_T_368, UInt<1>(0), _T_592) @[control.py:95]
    node _T_594 = mux(_T_366, UInt<1>(0), _T_593) @[control.py:95]
    node _T_595 = mux(_T_364, UInt<1>(0), _T_594) @[control.py:95]
    node _T_596 = mux(_T_362, UInt<1>(0), _T_595) @[control.py:95]
    node _T_597 = mux(_T_360, UInt<1>(0), _T_596) @[control.py:95]
    node _T_598 = mux(_T_358, UInt<1>(0), _T_597) @[control.py:95]
    node _T_599 = mux(_T_356, UInt<1>(0), _T_598) @[control.py:95]
    node _T_600 = mux(_T_354, UInt<1>(0), _T_599) @[control.py:95]
    node _T_601 = mux(_T_352, UInt<1>(0), _T_600) @[control.py:95]
    node _T_602 = mux(_T_350, UInt<1>(0), _T_601) @[control.py:95]
    node _T_603 = mux(_T_348, UInt<1>(0), _T_602) @[control.py:95]
    node _T_604 = mux(_T_346, UInt<1>(0), _T_603) @[control.py:95]
    node _T_605 = mux(_T_344, UInt<1>(0), _T_604) @[control.py:95]
    node _T_606 = mux(_T_342, UInt<1>(0), _T_605) @[control.py:95]
    node _T_607 = mux(_T_416, UInt<1>(0), UInt<1>(0)) @[control.py:95]
    node _T_608 = mux(_T_414, UInt<1>(0), _T_607) @[control.py:95]
    node _T_609 = mux(_T_412, UInt<1>(0), _T_608) @[control.py:95]
    node _T_610 = mux(_T_410, UInt<1>(1), _T_609) @[control.py:95]
    node _T_611 = mux(_T_408, UInt<1>(0), _T_610) @[control.py:95]
    node _T_612 = mux(_T_406, UInt<1>(0), _T_611) @[control.py:95]
    node _T_613 = mux(_T_404, UInt<1>(0), _T_612) @[control.py:95]
    node _T_614 = mux(_T_402, UInt<1>(0), _T_613) @[control.py:95]
    node _T_615 = mux(_T_400, UInt<1>(0), _T_614) @[control.py:95]
    node _T_616 = mux(_T_398, UInt<1>(0), _T_615) @[control.py:95]
    node _T_617 = mux(_T_396, UInt<1>(0), _T_616) @[control.py:95]
    node _T_618 = mux(_T_394, UInt<1>(0), _T_617) @[control.py:95]
    node _T_619 = mux(_T_392, UInt<1>(0), _T_618) @[control.py:95]
    node _T_620 = mux(_T_390, UInt<1>(0), _T_619) @[control.py:95]
    node _T_621 = mux(_T_388, UInt<1>(0), _T_620) @[control.py:95]
    node _T_622 = mux(_T_386, UInt<1>(0), _T_621) @[control.py:95]
    node _T_623 = mux(_T_384, UInt<1>(0), _T_622) @[control.py:95]
    node _T_624 = mux(_T_382, UInt<1>(0), _T_623) @[control.py:95]
    node _T_625 = mux(_T_380, UInt<1>(0), _T_624) @[control.py:95]
    node _T_626 = mux(_T_378, UInt<1>(0), _T_625) @[control.py:95]
    node _T_627 = mux(_T_376, UInt<1>(0), _T_626) @[control.py:95]
    node _T_628 = mux(_T_374, UInt<1>(0), _T_627) @[control.py:95]
    node _T_629 = mux(_T_372, UInt<1>(0), _T_628) @[control.py:95]
    node _T_630 = mux(_T_370, UInt<1>(0), _T_629) @[control.py:95]
    node _T_631 = mux(_T_368, UInt<1>(0), _T_630) @[control.py:95]
    node _T_632 = mux(_T_366, UInt<1>(0), _T_631) @[control.py:95]
    node _T_633 = mux(_T_364, UInt<1>(0), _T_632) @[control.py:95]
    node _T_634 = mux(_T_362, UInt<1>(0), _T_633) @[control.py:95]
    node _T_635 = mux(_T_360, UInt<1>(0), _T_634) @[control.py:95]
    node _T_636 = mux(_T_358, UInt<1>(0), _T_635) @[control.py:95]
    node _T_637 = mux(_T_356, UInt<1>(0), _T_636) @[control.py:95]
    node _T_638 = mux(_T_354, UInt<1>(0), _T_637) @[control.py:95]
    node _T_639 = mux(_T_352, UInt<1>(0), _T_638) @[control.py:95]
    node _T_640 = mux(_T_350, UInt<1>(0), _T_639) @[control.py:95]
    node _T_641 = mux(_T_348, UInt<1>(0), _T_640) @[control.py:95]
    node _T_642 = mux(_T_346, UInt<1>(0), _T_641) @[control.py:95]
    node _T_643 = mux(_T_344, UInt<1>(0), _T_642) @[control.py:95]
    node _T_644 = mux(_T_342, UInt<1>(0), _T_643) @[control.py:95]
    node _T_645 = mux(_T_416, UInt<1>(0), UInt<1>(0)) @[control.py:95]
    node _T_646 = mux(_T_414, UInt<1>(0), _T_645) @[control.py:95]
    node _T_647 = mux(_T_412, UInt<1>(0), _T_646) @[control.py:95]
    node _T_648 = mux(_T_410, UInt<1>(0), _T_647) @[control.py:95]
    node _T_649 = mux(_T_408, UInt<1>(0), _T_648) @[control.py:95]
    node _T_650 = mux(_T_406, UInt<1>(0), _T_649) @[control.py:95]
    node _T_651 = mux(_T_404, UInt<1>(0), _T_650) @[control.py:95]
    node _T_652 = mux(_T_402, UInt<1>(0), _T_651) @[control.py:95]
    node _T_653 = mux(_T_400, UInt<1>(0), _T_652) @[control.py:95]
    node _T_654 = mux(_T_398, UInt<1>(0), _T_653) @[control.py:95]
    node _T_655 = mux(_T_396, UInt<1>(0), _T_654) @[control.py:95]
    node _T_656 = mux(_T_394, UInt<1>(0), _T_655) @[control.py:95]
    node _T_657 = mux(_T_392, UInt<1>(0), _T_656) @[control.py:95]
    node _T_658 = mux(_T_390, UInt<1>(0), _T_657) @[control.py:95]
    node _T_659 = mux(_T_388, UInt<1>(1), _T_658) @[control.py:95]
    node _T_660 = mux(_T_386, UInt<1>(1), _T_659) @[control.py:95]
    node _T_661 = mux(_T_384, UInt<1>(1), _T_660) @[control.py:95]
    node _T_662 = mux(_T_382, UInt<1>(1), _T_661) @[control.py:95]
    node _T_663 = mux(_T_380, UInt<1>(1), _T_662) @[control.py:95]
    node _T_664 = mux(_T_378, UInt<1>(0), _T_663) @[control.py:95]
    node _T_665 = mux(_T_376, UInt<1>(0), _T_664) @[control.py:95]
    node _T_666 = mux(_T_374, UInt<1>(0), _T_665) @[control.py:95]
    node _T_667 = mux(_T_372, UInt<1>(0), _T_666) @[control.py:95]
    node _T_668 = mux(_T_370, UInt<1>(0), _T_667) @[control.py:95]
    node _T_669 = mux(_T_368, UInt<1>(0), _T_668) @[control.py:95]
    node _T_670 = mux(_T_366, UInt<1>(0), _T_669) @[control.py:95]
    node _T_671 = mux(_T_364, UInt<1>(0), _T_670) @[control.py:95]
    node _T_672 = mux(_T_362, UInt<1>(0), _T_671) @[control.py:95]
    node _T_673 = mux(_T_360, UInt<1>(0), _T_672) @[control.py:95]
    node _T_674 = mux(_T_358, UInt<1>(0), _T_673) @[control.py:95]
    node _T_675 = mux(_T_356, UInt<1>(0), _T_674) @[control.py:95]
    node _T_676 = mux(_T_354, UInt<1>(0), _T_675) @[control.py:95]
    node _T_677 = mux(_T_352, UInt<1>(0), _T_676) @[control.py:95]
    node _T_678 = mux(_T_350, UInt<1>(0), _T_677) @[control.py:95]
    node _T_679 = mux(_T_348, UInt<1>(0), _T_678) @[control.py:95]
    node _T_680 = mux(_T_346, UInt<1>(0), _T_679) @[control.py:95]
    node _T_681 = mux(_T_344, UInt<1>(0), _T_680) @[control.py:95]
    node _T_682 = mux(_T_342, UInt<1>(0), _T_681) @[control.py:95]
    node _T_683 = mux(_T_416, UInt<1>(0), UInt<1>(0)) @[control.py:95]
    node _T_684 = mux(_T_414, UInt<1>(0), _T_683) @[control.py:95]
    node _T_685 = mux(_T_412, UInt<1>(0), _T_684) @[control.py:95]
    node _T_686 = mux(_T_410, UInt<1>(0), _T_685) @[control.py:95]
    node _T_687 = mux(_T_408, UInt<1>(0), _T_686) @[control.py:95]
    node _T_688 = mux(_T_406, UInt<1>(0), _T_687) @[control.py:95]
    node _T_689 = mux(_T_404, UInt<1>(0), _T_688) @[control.py:95]
    node _T_690 = mux(_T_402, UInt<1>(0), _T_689) @[control.py:95]
    node _T_691 = mux(_T_400, UInt<1>(0), _T_690) @[control.py:95]
    node _T_692 = mux(_T_398, UInt<1>(0), _T_691) @[control.py:95]
    node _T_693 = mux(_T_396, UInt<1>(0), _T_692) @[control.py:95]
    node _T_694 = mux(_T_394, UInt<1>(1), _T_693) @[control.py:95]
    node _T_695 = mux(_T_392, UInt<1>(1), _T_694) @[control.py:95]
    node _T_696 = mux(_T_390, UInt<1>(1), _T_695) @[control.py:95]
    node _T_697 = mux(_T_388, UInt<1>(0), _T_696) @[control.py:95]
    node _T_698 = mux(_T_386, UInt<1>(0), _T_697) @[control.py:95]
    node _T_699 = mux(_T_384, UInt<1>(0), _T_698) @[control.py:95]
    node _T_700 = mux(_T_382, UInt<1>(0), _T_699) @[control.py:95]
    node _T_701 = mux(_T_380, UInt<1>(0), _T_700) @[control.py:95]
    node _T_702 = mux(_T_378, UInt<1>(0), _T_701) @[control.py:95]
    node _T_703 = mux(_T_376, UInt<1>(0), _T_702) @[control.py:95]
    node _T_704 = mux(_T_374, UInt<1>(0), _T_703) @[control.py:95]
    node _T_705 = mux(_T_372, UInt<1>(0), _T_704) @[control.py:95]
    node _T_706 = mux(_T_370, UInt<1>(0), _T_705) @[control.py:95]
    node _T_707 = mux(_T_368, UInt<1>(0), _T_706) @[control.py:95]
    node _T_708 = mux(_T_366, UInt<1>(0), _T_707) @[control.py:95]
    node _T_709 = mux(_T_364, UInt<1>(0), _T_708) @[control.py:95]
    node _T_710 = mux(_T_362, UInt<1>(0), _T_709) @[control.py:95]
    node _T_711 = mux(_T_360, UInt<1>(0), _T_710) @[control.py:95]
    node _T_712 = mux(_T_358, UInt<1>(0), _T_711) @[control.py:95]
    node _T_713 = mux(_T_356, UInt<1>(0), _T_712) @[control.py:95]
    node _T_714 = mux(_T_354, UInt<1>(0), _T_713) @[control.py:95]
    node _T_715 = mux(_T_352, UInt<1>(0), _T_714) @[control.py:95]
    node _T_716 = mux(_T_350, UInt<1>(0), _T_715) @[control.py:95]
    node _T_717 = mux(_T_348, UInt<1>(0), _T_716) @[control.py:95]
    node _T_718 = mux(_T_346, UInt<1>(0), _T_717) @[control.py:95]
    node _T_719 = mux(_T_344, UInt<1>(0), _T_718) @[control.py:95]
    node _T_720 = mux(_T_342, UInt<1>(0), _T_719) @[control.py:95]
    node _T_721 = mux(_T_416, UInt<2>(0), UInt<2>(0)) @[control.py:95]
    node _T_722 = mux(_T_414, UInt<2>(0), _T_721) @[control.py:95]
    node _T_723 = mux(_T_412, UInt<2>(0), _T_722) @[control.py:95]
    node _T_724 = mux(_T_410, UInt<2>(0), _T_723) @[control.py:95]
    node _T_725 = mux(_T_408, UInt<2>(0), _T_724) @[control.py:95]
    node _T_726 = mux(_T_406, UInt<2>(0), _T_725) @[control.py:95]
    node _T_727 = mux(_T_404, UInt<2>(0), _T_726) @[control.py:95]
    node _T_728 = mux(_T_402, UInt<2>(0), _T_727) @[control.py:95]
    node _T_729 = mux(_T_400, UInt<2>(0), _T_728) @[control.py:95]
    node _T_730 = mux(_T_398, UInt<2>(0), _T_729) @[control.py:95]
    node _T_731 = mux(_T_396, UInt<2>(0), _T_730) @[control.py:95]
    node _T_732 = mux(_T_394, UInt<2>(2), _T_731) @[control.py:95]
    node _T_733 = mux(_T_392, UInt<2>(1), _T_732) @[control.py:95]
    node _T_734 = mux(_T_390, UInt<2>(0), _T_733) @[control.py:95]
    node _T_735 = mux(_T_388, UInt<2>(2), _T_734) @[control.py:95]
    node _T_736 = mux(_T_386, UInt<2>(1), _T_735) @[control.py:95]
    node _T_737 = mux(_T_384, UInt<2>(2), _T_736) @[control.py:95]
    node _T_738 = mux(_T_382, UInt<2>(1), _T_737) @[control.py:95]
    node _T_739 = mux(_T_380, UInt<2>(0), _T_738) @[control.py:95]
    node _T_740 = mux(_T_378, UInt<2>(0), _T_739) @[control.py:95]
    node _T_741 = mux(_T_376, UInt<2>(0), _T_740) @[control.py:95]
    node _T_742 = mux(_T_374, UInt<2>(0), _T_741) @[control.py:95]
    node _T_743 = mux(_T_372, UInt<2>(0), _T_742) @[control.py:95]
    node _T_744 = mux(_T_370, UInt<2>(0), _T_743) @[control.py:95]
    node _T_745 = mux(_T_368, UInt<2>(0), _T_744) @[control.py:95]
    node _T_746 = mux(_T_366, UInt<2>(0), _T_745) @[control.py:95]
    node _T_747 = mux(_T_364, UInt<2>(0), _T_746) @[control.py:95]
    node _T_748 = mux(_T_362, UInt<2>(0), _T_747) @[control.py:95]
    node _T_749 = mux(_T_360, UInt<2>(0), _T_748) @[control.py:95]
    node _T_750 = mux(_T_358, UInt<2>(0), _T_749) @[control.py:95]
    node _T_751 = mux(_T_356, UInt<2>(0), _T_750) @[control.py:95]
    node _T_752 = mux(_T_354, UInt<2>(0), _T_751) @[control.py:95]
    node _T_753 = mux(_T_352, UInt<2>(0), _T_752) @[control.py:95]
    node _T_754 = mux(_T_350, UInt<2>(0), _T_753) @[control.py:95]
    node _T_755 = mux(_T_348, UInt<2>(0), _T_754) @[control.py:95]
    node _T_756 = mux(_T_346, UInt<2>(0), _T_755) @[control.py:95]
    node _T_757 = mux(_T_344, UInt<2>(0), _T_756) @[control.py:95]
    node _T_758 = mux(_T_342, UInt<2>(0), _T_757) @[control.py:95]
    node _T_759 = mux(_T_416, UInt<1>(0), UInt<1>(0)) @[control.py:95]
    node _T_760 = mux(_T_414, UInt<1>(0), _T_759) @[control.py:95]
    node _T_761 = mux(_T_412, UInt<1>(0), _T_760) @[control.py:95]
    node _T_762 = mux(_T_410, UInt<1>(0), _T_761) @[control.py:95]
    node _T_763 = mux(_T_408, UInt<1>(0), _T_762) @[control.py:95]
    node _T_764 = mux(_T_406, UInt<1>(0), _T_763) @[control.py:95]
    node _T_765 = mux(_T_404, UInt<1>(0), _T_764) @[control.py:95]
    node _T_766 = mux(_T_402, UInt<1>(0), _T_765) @[control.py:95]
    node _T_767 = mux(_T_400, UInt<1>(0), _T_766) @[control.py:95]
    node _T_768 = mux(_T_398, UInt<1>(0), _T_767) @[control.py:95]
    node _T_769 = mux(_T_396, UInt<1>(0), _T_768) @[control.py:95]
    node _T_770 = mux(_T_394, UInt<1>(0), _T_769) @[control.py:95]
    node _T_771 = mux(_T_392, UInt<1>(0), _T_770) @[control.py:95]
    node _T_772 = mux(_T_390, UInt<1>(0), _T_771) @[control.py:95]
    node _T_773 = mux(_T_388, UInt<1>(1), _T_772) @[control.py:95]
    node _T_774 = mux(_T_386, UInt<1>(1), _T_773) @[control.py:95]
    node _T_775 = mux(_T_384, UInt<1>(0), _T_774) @[control.py:95]
    node _T_776 = mux(_T_382, UInt<1>(0), _T_775) @[control.py:95]
    node _T_777 = mux(_T_380, UInt<1>(0), _T_776) @[control.py:95]
    node _T_778 = mux(_T_378, UInt<1>(0), _T_777) @[control.py:95]
    node _T_779 = mux(_T_376, UInt<1>(0), _T_778) @[control.py:95]
    node _T_780 = mux(_T_374, UInt<1>(0), _T_779) @[control.py:95]
    node _T_781 = mux(_T_372, UInt<1>(0), _T_780) @[control.py:95]
    node _T_782 = mux(_T_370, UInt<1>(0), _T_781) @[control.py:95]
    node _T_783 = mux(_T_368, UInt<1>(0), _T_782) @[control.py:95]
    node _T_784 = mux(_T_366, UInt<1>(0), _T_783) @[control.py:95]
    node _T_785 = mux(_T_364, UInt<1>(0), _T_784) @[control.py:95]
    node _T_786 = mux(_T_362, UInt<1>(0), _T_785) @[control.py:95]
    node _T_787 = mux(_T_360, UInt<1>(0), _T_786) @[control.py:95]
    node _T_788 = mux(_T_358, UInt<1>(0), _T_787) @[control.py:95]
    node _T_789 = mux(_T_356, UInt<1>(0), _T_788) @[control.py:95]
    node _T_790 = mux(_T_354, UInt<1>(0), _T_789) @[control.py:95]
    node _T_791 = mux(_T_352, UInt<1>(0), _T_790) @[control.py:95]
    node _T_792 = mux(_T_350, UInt<1>(0), _T_791) @[control.py:95]
    node _T_793 = mux(_T_348, UInt<1>(0), _T_792) @[control.py:95]
    node _T_794 = mux(_T_346, UInt<1>(0), _T_793) @[control.py:95]
    node _T_795 = mux(_T_344, UInt<1>(0), _T_794) @[control.py:95]
    node _T_796 = mux(_T_342, UInt<1>(0), _T_795) @[control.py:95]
    node _T_797 = mux(_T_416, UInt<3>(0), UInt<3>(0)) @[control.py:95]
    node _T_798 = mux(_T_414, UInt<3>(4), _T_797) @[control.py:95]
    node _T_799 = mux(_T_412, UInt<3>(3), _T_798) @[control.py:95]
    node _T_800 = mux(_T_410, UInt<3>(2), _T_799) @[control.py:95]
    node _T_801 = mux(_T_408, UInt<3>(2), _T_800) @[control.py:95]
    node _T_802 = mux(_T_406, UInt<3>(0), _T_801) @[control.py:95]
    node _T_803 = mux(_T_404, UInt<3>(0), _T_802) @[control.py:95]
    node _T_804 = mux(_T_402, UInt<3>(0), _T_803) @[control.py:95]
    node _T_805 = mux(_T_400, UInt<3>(0), _T_804) @[control.py:95]
    node _T_806 = mux(_T_398, UInt<3>(0), _T_805) @[control.py:95]
    node _T_807 = mux(_T_396, UInt<3>(0), _T_806) @[control.py:95]
    node _T_808 = mux(_T_394, UInt<3>(0), _T_807) @[control.py:95]
    node _T_809 = mux(_T_392, UInt<3>(0), _T_808) @[control.py:95]
    node _T_810 = mux(_T_390, UInt<3>(0), _T_809) @[control.py:95]
    node _T_811 = mux(_T_388, UInt<3>(1), _T_810) @[control.py:95]
    node _T_812 = mux(_T_386, UInt<3>(1), _T_811) @[control.py:95]
    node _T_813 = mux(_T_384, UInt<3>(1), _T_812) @[control.py:95]
    node _T_814 = mux(_T_382, UInt<3>(1), _T_813) @[control.py:95]
    node _T_815 = mux(_T_380, UInt<3>(1), _T_814) @[control.py:95]
    node _T_816 = mux(_T_378, UInt<3>(0), _T_815) @[control.py:95]
    node _T_817 = mux(_T_376, UInt<3>(0), _T_816) @[control.py:95]
    node _T_818 = mux(_T_374, UInt<3>(0), _T_817) @[control.py:95]
    node _T_819 = mux(_T_372, UInt<3>(0), _T_818) @[control.py:95]
    node _T_820 = mux(_T_370, UInt<3>(0), _T_819) @[control.py:95]
    node _T_821 = mux(_T_368, UInt<3>(0), _T_820) @[control.py:95]
    node _T_822 = mux(_T_366, UInt<3>(0), _T_821) @[control.py:95]
    node _T_823 = mux(_T_364, UInt<3>(0), _T_822) @[control.py:95]
    node _T_824 = mux(_T_362, UInt<3>(0), _T_823) @[control.py:95]
    node _T_825 = mux(_T_360, UInt<3>(0), _T_824) @[control.py:95]
    node _T_826 = mux(_T_358, UInt<3>(0), _T_825) @[control.py:95]
    node _T_827 = mux(_T_356, UInt<3>(0), _T_826) @[control.py:95]
    node _T_828 = mux(_T_354, UInt<3>(0), _T_827) @[control.py:95]
    node _T_829 = mux(_T_352, UInt<3>(0), _T_828) @[control.py:95]
    node _T_830 = mux(_T_350, UInt<3>(0), _T_829) @[control.py:95]
    node _T_831 = mux(_T_348, UInt<3>(0), _T_830) @[control.py:95]
    node _T_832 = mux(_T_346, UInt<3>(0), _T_831) @[control.py:95]
    node _T_833 = mux(_T_344, UInt<3>(0), _T_832) @[control.py:95]
    node _T_834 = mux(_T_342, UInt<3>(0), _T_833) @[control.py:95]
    node _T_835 = mux(_T_416, UInt<1>(0), UInt<1>(0)) @[control.py:95]
    node _T_836 = mux(_T_414, UInt<1>(0), _T_835) @[control.py:95]
    node _T_837 = mux(_T_412, UInt<1>(0), _T_836) @[control.py:95]
    node _T_838 = mux(_T_410, UInt<1>(1), _T_837) @[control.py:95]
    node _T_839 = mux(_T_408, UInt<1>(1), _T_838) @[control.py:95]
    node _T_840 = mux(_T_406, UInt<1>(0), _T_839) @[control.py:95]
    node _T_841 = mux(_T_404, UInt<1>(0), _T_840) @[control.py:95]
    node _T_842 = mux(_T_402, UInt<1>(0), _T_841) @[control.py:95]
    node _T_843 = mux(_T_400, UInt<1>(0), _T_842) @[control.py:95]
    node _T_844 = mux(_T_398, UInt<1>(0), _T_843) @[control.py:95]
    node _T_845 = mux(_T_396, UInt<1>(0), _T_844) @[control.py:95]
    node _T_846 = mux(_T_394, UInt<1>(0), _T_845) @[control.py:95]
    node _T_847 = mux(_T_392, UInt<1>(0), _T_846) @[control.py:95]
    node _T_848 = mux(_T_390, UInt<1>(0), _T_847) @[control.py:95]
    node _T_849 = mux(_T_388, UInt<1>(0), _T_848) @[control.py:95]
    node _T_850 = mux(_T_386, UInt<1>(0), _T_849) @[control.py:95]
    node _T_851 = mux(_T_384, UInt<1>(0), _T_850) @[control.py:95]
    node _T_852 = mux(_T_382, UInt<1>(0), _T_851) @[control.py:95]
    node _T_853 = mux(_T_380, UInt<1>(0), _T_852) @[control.py:95]
    node _T_854 = mux(_T_378, UInt<1>(0), _T_853) @[control.py:95]
    node _T_855 = mux(_T_376, UInt<1>(0), _T_854) @[control.py:95]
    node _T_856 = mux(_T_374, UInt<1>(0), _T_855) @[control.py:95]
    node _T_857 = mux(_T_372, UInt<1>(0), _T_856) @[control.py:95]
    node _T_858 = mux(_T_370, UInt<1>(0), _T_857) @[control.py:95]
    node _T_859 = mux(_T_368, UInt<1>(0), _T_858) @[control.py:95]
    node _T_860 = mux(_T_366, UInt<1>(0), _T_859) @[control.py:95]
    node _T_861 = mux(_T_364, UInt<1>(0), _T_860) @[control.py:95]
    node _T_862 = mux(_T_362, UInt<1>(0), _T_861) @[control.py:95]
    node _T_863 = mux(_T_360, UInt<1>(0), _T_862) @[control.py:95]
    node _T_864 = mux(_T_358, UInt<1>(0), _T_863) @[control.py:95]
    node _T_865 = mux(_T_356, UInt<1>(0), _T_864) @[control.py:95]
    node _T_866 = mux(_T_354, UInt<1>(0), _T_865) @[control.py:95]
    node _T_867 = mux(_T_352, UInt<1>(0), _T_866) @[control.py:95]
    node _T_868 = mux(_T_350, UInt<1>(0), _T_867) @[control.py:95]
    node _T_869 = mux(_T_348, UInt<1>(0), _T_868) @[control.py:95]
    node _T_870 = mux(_T_346, UInt<1>(0), _T_869) @[control.py:95]
    node _T_871 = mux(_T_344, UInt<1>(0), _T_870) @[control.py:95]
    node _T_872 = mux(_T_342, UInt<1>(0), _T_871) @[control.py:95]
    io.ctrl.Imm_Sel <= _T_492 @[control.py:98]
    io.ctrl.ALU_Src <= _T_530 @[control.py:101]
    io.ctrl.ALUOp <= _T_568 @[control.py:102]
    io.ctrl.Branch <= _T_606 @[control.py:103]
    io.ctrl.Branch_Src <= _T_644 @[control.py:104]
    io.ctrl.Jump_Type <= _T_872 @[control.py:105]
    io.ctrl.Mem_Read <= _T_682 @[control.py:108]
    io.ctrl.Mem_Write <= _T_720 @[control.py:109]
    io.ctrl.Data_Size <= _T_758 @[control.py:110]
    io.ctrl.Load_Type <= _T_796 @[control.py:111]
    io.ctrl.Reg_Write <= _T_454 @[control.py:114]
    io.ctrl.Mem_to_Reg <= _T_834 @[control.py:115]


  module ID_EX_Register : @[id_ex_register.py:40]
    input clock : Clock @[rawmodule.py:100]
    input reset : UInt<1> @[rawmodule.py:101]
    output io : {flip id_pc : UInt<32>, flip id_pc_4 : UInt<32>, flip id_rs1_out : UInt<32>, flip id_rs2_out : UInt<32>, flip id_imm : UInt<32>, flip id_inst : UInt<32>, flip id_rs1 : UInt<5>, flip id_rs2 : UInt<5>, ex_pc : UInt<32>, ex_pc_4 : UInt<32>, ex_rs1_out : UInt<32>, ex_rs2_out : UInt<32>, ex_rd : UInt<5>, ex_imm : UInt<32>, ex_rs1 : UInt<5>, ex_rs2 : UInt<5>, ex_inst : UInt<32>, flip ID_EX_Flush : UInt<1>, flip id_ctrl_in : {Reg_Write : UInt<1>, Imm_Sel : UInt<3>, ALU_Src : UInt<1>, ALUOp : UInt<5>, Branch : UInt<1>, Branch_Src : UInt<1>, Mem_Read : UInt<1>, Mem_Write : UInt<1>, Data_Size : UInt<2>, Load_Type : UInt<1>, Mem_to_Reg : UInt<3>, Jump_Type : UInt<1>}, ex_ctrl_out : {Reg_Write : UInt<1>, Imm_Sel : UInt<3>, ALU_Src : UInt<1>, ALUOp : UInt<5>, Branch : UInt<1>, Branch_Src : UInt<1>, Mem_Read : UInt<1>, Mem_Write : UInt<1>, Data_Size : UInt<2>, Load_Type : UInt<1>, Mem_to_Reg : UInt<3>, Jump_Type : UInt<1>}} @[id_ex_register.py:12]

    reg pc : UInt<32>, clock with: (reset => (reset, UInt(0))) @[id_ex_register.py:44]
    reg pc_4 : UInt<32>, clock with: (reset => (reset, UInt(0))) @[id_ex_register.py:45]
    reg rs1_out : UInt<32>, clock with: (reset => (reset, UInt(0))) @[id_ex_register.py:46]
    reg rs2_out : UInt<32>, clock with: (reset => (reset, UInt(0))) @[id_ex_register.py:47]
    reg imm : UInt<32>, clock with: (reset => (reset, UInt(0))) @[id_ex_register.py:48]
    reg inst : UInt<32>, clock with: (reset => (reset, UInt(0))) @[id_ex_register.py:49]
    reg rs1 : UInt<5>, clock with: (reset => (reset, UInt(0))) @[id_ex_register.py:50]
    reg rs2 : UInt<5>, clock with: (reset => (reset, UInt(0))) @[id_ex_register.py:51]
    reg alu_src : UInt<1>, clock with: (reset => (reset, UInt(0))) @[id_ex_register.py:52]
    reg aluop : UInt<5>, clock with: (reset => (reset, UInt(0))) @[id_ex_register.py:53]
    reg branch : UInt<1>, clock with: (reset => (reset, UInt(0))) @[id_ex_register.py:54]
    reg branch_src : UInt<1>, clock with: (reset => (reset, UInt(0))) @[id_ex_register.py:55]
    reg jump_type : UInt<1>, clock with: (reset => (reset, UInt(0))) @[id_ex_register.py:56]
    reg mem_read : UInt<1>, clock with: (reset => (reset, UInt(0))) @[id_ex_register.py:57]
    reg mem_write : UInt<1>, clock with: (reset => (reset, UInt(0))) @[id_ex_register.py:58]
    reg data_size : UInt<2>, clock with: (reset => (reset, UInt(0))) @[id_ex_register.py:59]
    reg load_type : UInt<1>, clock with: (reset => (reset, UInt(0))) @[id_ex_register.py:60]
    reg reg_write : UInt<1>, clock with: (reset => (reset, UInt(0))) @[id_ex_register.py:61]
    reg mem_to_reg : UInt<3>, clock with: (reset => (reset, UInt(0))) @[id_ex_register.py:62]
    reg imm_sel : UInt<3>, clock with: (reset => (reset, UInt(0))) @[id_ex_register.py:63]
    node _T_943 = bits(io.ID_EX_Flush, 0, 0) @[define.py:161]
    node _T_944 = mux(_T_943, UInt(0), io.id_pc) @[id_ex_register.py:66]
    pc <= _T_944 @[id_ex_register.py:66]
    node _T_945 = bits(io.ID_EX_Flush, 0, 0) @[define.py:161]
    node _T_946 = mux(_T_945, UInt(0), io.id_pc_4) @[id_ex_register.py:67]
    pc_4 <= _T_946 @[id_ex_register.py:67]
    node _T_947 = bits(io.ID_EX_Flush, 0, 0) @[define.py:161]
    node _T_948 = mux(_T_947, UInt(0), io.id_rs1_out) @[id_ex_register.py:68]
    rs1_out <= _T_948 @[id_ex_register.py:68]
    node _T_949 = bits(io.ID_EX_Flush, 0, 0) @[define.py:161]
    node _T_950 = mux(_T_949, UInt(0), io.id_rs2_out) @[id_ex_register.py:69]
    rs2_out <= _T_950 @[id_ex_register.py:69]
    node _T_951 = bits(io.ID_EX_Flush, 0, 0) @[define.py:161]
    node _T_952 = mux(_T_951, UInt(0), io.id_imm) @[id_ex_register.py:70]
    imm <= _T_952 @[id_ex_register.py:70]
    node _T_953 = bits(io.ID_EX_Flush, 0, 0) @[define.py:161]
    node _T_954 = mux(_T_953, UInt(0), io.id_inst) @[id_ex_register.py:71]
    inst <= _T_954 @[id_ex_register.py:71]
    node _T_955 = bits(io.ID_EX_Flush, 0, 0) @[define.py:161]
    node _T_956 = mux(_T_955, UInt(0), io.id_rs1) @[id_ex_register.py:72]
    rs1 <= _T_956 @[id_ex_register.py:72]
    node _T_957 = bits(io.ID_EX_Flush, 0, 0) @[define.py:161]
    node _T_958 = mux(_T_957, UInt(0), io.id_rs2) @[id_ex_register.py:73]
    rs2 <= _T_958 @[id_ex_register.py:73]
    node _T_959 = bits(io.ID_EX_Flush, 0, 0) @[define.py:161]
    node _T_960 = mux(_T_959, UInt(0), io.id_ctrl_in.ALU_Src) @[id_ex_register.py:74]
    alu_src <= _T_960 @[id_ex_register.py:74]
    node _T_961 = bits(io.ID_EX_Flush, 0, 0) @[define.py:161]
    node _T_962 = mux(_T_961, UInt(0), io.id_ctrl_in.ALUOp) @[id_ex_register.py:75]
    aluop <= _T_962 @[id_ex_register.py:75]
    node _T_963 = bits(io.ID_EX_Flush, 0, 0) @[define.py:161]
    node _T_964 = mux(_T_963, UInt(0), io.id_ctrl_in.Branch) @[id_ex_register.py:76]
    branch <= _T_964 @[id_ex_register.py:76]
    node _T_965 = bits(io.ID_EX_Flush, 0, 0) @[define.py:161]
    node _T_966 = mux(_T_965, UInt(0), io.id_ctrl_in.Branch_Src) @[id_ex_register.py:77]
    branch_src <= _T_966 @[id_ex_register.py:77]
    node _T_967 = bits(io.ID_EX_Flush, 0, 0) @[define.py:161]
    node _T_968 = mux(_T_967, UInt(0), io.id_ctrl_in.Jump_Type) @[id_ex_register.py:78]
    jump_type <= _T_968 @[id_ex_register.py:78]
    node _T_969 = bits(io.ID_EX_Flush, 0, 0) @[define.py:161]
    node _T_970 = mux(_T_969, UInt(0), io.id_ctrl_in.Mem_Read) @[id_ex_register.py:79]
    mem_read <= _T_970 @[id_ex_register.py:79]
    node _T_971 = bits(io.ID_EX_Flush, 0, 0) @[define.py:161]
    node _T_972 = mux(_T_971, UInt(0), io.id_ctrl_in.Mem_Write) @[id_ex_register.py:80]
    mem_write <= _T_972 @[id_ex_register.py:80]
    node _T_973 = bits(io.ID_EX_Flush, 0, 0) @[define.py:161]
    node _T_974 = mux(_T_973, UInt(0), io.id_ctrl_in.Data_Size) @[id_ex_register.py:81]
    data_size <= _T_974 @[id_ex_register.py:81]
    node _T_975 = bits(io.ID_EX_Flush, 0, 0) @[define.py:161]
    node _T_976 = mux(_T_975, UInt(0), io.id_ctrl_in.Load_Type) @[id_ex_register.py:82]
    load_type <= _T_976 @[id_ex_register.py:82]
    node _T_977 = bits(io.ID_EX_Flush, 0, 0) @[define.py:161]
    node _T_978 = mux(_T_977, UInt(0), io.id_ctrl_in.Reg_Write) @[id_ex_register.py:83]
    reg_write <= _T_978 @[id_ex_register.py:83]
    node _T_979 = bits(io.ID_EX_Flush, 0, 0) @[define.py:161]
    node _T_980 = mux(_T_979, UInt(0), io.id_ctrl_in.Mem_to_Reg) @[id_ex_register.py:84]
    mem_to_reg <= _T_980 @[id_ex_register.py:84]
    node _T_981 = bits(io.ID_EX_Flush, 0, 0) @[define.py:161]
    node _T_982 = mux(_T_981, UInt(0), io.id_ctrl_in.Imm_Sel) @[id_ex_register.py:85]
    imm_sel <= _T_982 @[id_ex_register.py:85]
    io.ex_pc <= pc @[id_ex_register.py:87]
    io.ex_pc_4 <= pc_4 @[id_ex_register.py:88]
    io.ex_rs1_out <= rs1_out @[id_ex_register.py:89]
    io.ex_rs2_out <= rs2_out @[id_ex_register.py:90]
    io.ex_rs1 <= rs1 @[id_ex_register.py:91]
    io.ex_rs2 <= rs2 @[id_ex_register.py:92]
    io.ex_imm <= imm @[id_ex_register.py:93]
    io.ex_inst <= inst @[id_ex_register.py:94]
    node _T_983 = bits(inst, 11, 7) @[id_ex_register.py:95]
    io.ex_rd <= _T_983 @[id_ex_register.py:95]
    io.ex_ctrl_out.ALU_Src <= alu_src @[id_ex_register.py:97]
    io.ex_ctrl_out.ALUOp <= aluop @[id_ex_register.py:98]
    io.ex_ctrl_out.Branch <= branch @[id_ex_register.py:99]
    io.ex_ctrl_out.Branch_Src <= branch_src @[id_ex_register.py:100]
    io.ex_ctrl_out.Jump_Type <= jump_type @[id_ex_register.py:101]
    io.ex_ctrl_out.Mem_Read <= mem_read @[id_ex_register.py:102]
    io.ex_ctrl_out.Mem_Write <= mem_write @[id_ex_register.py:103]
    io.ex_ctrl_out.Reg_Write <= reg_write @[id_ex_register.py:104]
    io.ex_ctrl_out.Mem_to_Reg <= mem_to_reg @[id_ex_register.py:105]
    io.ex_ctrl_out.Data_Size <= data_size @[id_ex_register.py:106]
    io.ex_ctrl_out.Load_Type <= load_type @[id_ex_register.py:107]
    io.ex_ctrl_out.Imm_Sel <= imm_sel @[id_ex_register.py:108]


  module Hazard_Detection : @[hazard_detection.py:26]
    input clock : Clock @[rawmodule.py:100]
    input reset : UInt<1> @[rawmodule.py:101]
    output io : {flip rs1 : UInt<5>, flip rs2 : UInt<5>, flip ex_rd : UInt<5>, flip Imm_Sel : UInt<3>, flip ex_Mem_Read : UInt<1>, Bubble : UInt<1>, IF_ID_Write : UInt<1>, PC_Write : UInt<1>} @[hazard_detection.py:11]

    node _T_996 = bits(io.ex_Mem_Read, 0, 0) @[define.py:161]
    node _T_997 = neq(io.Imm_Sel, UInt<3>(5)) @[hazard_detection.py:32]
    node _T_998 = and(_T_996, _T_997) @[hazard_detection.py:32]
    node _T_999 = neq(io.Imm_Sel, UInt<3>(6)) @[hazard_detection.py:32]
    node _T_1000 = and(_T_998, _T_999) @[hazard_detection.py:32]
    node _T_1001 = eq(io.rs1, io.ex_rd) @[hazard_detection.py:32]
    node _T_1002 = and(_T_1000, _T_1001) @[hazard_detection.py:32]
    node _T_1003 = bits(io.ex_Mem_Read, 0, 0) @[define.py:161]
    node _T_1004 = eq(io.Imm_Sel, UInt<3>(1)) @[hazard_detection.py:36]
    node _T_1005 = eq(io.Imm_Sel, UInt<3>(4)) @[hazard_detection.py:36]
    node _T_1006 = or(_T_1004, _T_1005) @[hazard_detection.py:36]
    node _T_1007 = and(_T_1003, _T_1006) @[hazard_detection.py:36]
    node _T_1008 = eq(io.rs2, io.ex_rd) @[hazard_detection.py:36]
    node _T_1009 = and(_T_1007, _T_1008) @[hazard_detection.py:36]
    node _T_1010 = or(_T_1002, _T_1009) @[hazard_detection.py:38]
    node _T_1011 = mux(_T_1010, UInt<1>(1), UInt<1>(0)) @[hazard_detection.py:40]
    io.Bubble <= _T_1011 @[hazard_detection.py:40]
    node _T_1012 = mux(_T_1010, UInt<1>(0), UInt<1>(1)) @[hazard_detection.py:41]
    io.IF_ID_Write <= _T_1012 @[hazard_detection.py:41]
    node _T_1013 = mux(_T_1010, UInt<1>(0), UInt<1>(1)) @[hazard_detection.py:42]
    io.PC_Write <= _T_1013 @[hazard_detection.py:42]


  module ALU : @[alu.py:21]
    input clock : Clock @[rawmodule.py:100]
    input reset : UInt<1> @[rawmodule.py:101]
    output io : {flip src_a : UInt<32>, flip src_b : UInt<32>, flip ALUOp : UInt<5>, sum : UInt<32>, conflag : UInt<1>} @[alu.py:11]

    node _T_1023 = bits(io.src_b, 5, 0) @[alu.py:24]
    node _T_1024 = add(io.src_a, io.src_b) @[alu.py:26]
    node _T_1025 = sub(io.src_a, io.src_b) @[alu.py:27]
    node _T_1026 = and(io.src_a, io.src_b) @[alu.py:28]
    node _T_1027 = or(io.src_a, io.src_b) @[alu.py:29]
    node _T_1028 = xor(io.src_a, io.src_b) @[alu.py:30]
    node _T_1029 = dshl(io.src_a, _T_1023) @[alu.py:31]
    node _T_1030 = dshr(io.src_a, _T_1023) @[alu.py:32]
    node _T_1031 = asSInt(io.src_a) @[alu.py:33]
    node _T_1032 = dshr(_T_1031, _T_1023) @[alu.py:33]
    node _T_1033 = asUInt(_T_1032) @[alu.py:33]
    node _T_1034 = asSInt(io.src_a) @[alu.py:34]
    node _T_1035 = asSInt(io.src_b) @[alu.py:34]
    node _T_1036 = lt(_T_1034, _T_1035) @[alu.py:34]
    node _T_1037 = lt(io.src_a, io.src_b) @[alu.py:35]
    node _T_1038 = eq(io.ALUOp, UInt<5>(9)) @[mux.py:72]
    node _T_1039 = mux(_T_1038, _T_1037, io.src_b) @[alu.py:35]
    node _T_1040 = eq(io.ALUOp, UInt<5>(8)) @[mux.py:72]
    node _T_1041 = mux(_T_1040, _T_1036, _T_1039) @[alu.py:35]
    node _T_1042 = eq(io.ALUOp, UInt<5>(7)) @[mux.py:72]
    node _T_1043 = mux(_T_1042, _T_1033, _T_1041) @[alu.py:35]
    node _T_1044 = eq(io.ALUOp, UInt<5>(6)) @[mux.py:72]
    node _T_1045 = mux(_T_1044, _T_1030, _T_1043) @[alu.py:35]
    node _T_1046 = eq(io.ALUOp, UInt<5>(5)) @[mux.py:72]
    node _T_1047 = mux(_T_1046, _T_1029, _T_1045) @[alu.py:35]
    node _T_1048 = eq(io.ALUOp, UInt<5>(4)) @[mux.py:72]
    node _T_1049 = mux(_T_1048, _T_1028, _T_1047) @[alu.py:35]
    node _T_1050 = eq(io.ALUOp, UInt<5>(3)) @[mux.py:72]
    node _T_1051 = mux(_T_1050, _T_1027, _T_1049) @[alu.py:35]
    node _T_1052 = eq(io.ALUOp, UInt<5>(2)) @[mux.py:72]
    node _T_1053 = mux(_T_1052, _T_1026, _T_1051) @[alu.py:35]
    node _T_1054 = eq(io.ALUOp, UInt<5>(1)) @[mux.py:72]
    node _T_1055 = mux(_T_1054, _T_1025, _T_1053) @[alu.py:35]
    node _T_1056 = eq(io.ALUOp, UInt<5>(0)) @[mux.py:72]
    node _T_1057 = mux(_T_1056, _T_1024, _T_1055) @[alu.py:35]
    io.sum <= _T_1057 @[alu.py:35]
    node _T_1058 = asSInt(io.src_a) @[alu.py:39]
    node _T_1059 = asSInt(io.src_b) @[alu.py:39]
    node _T_1060 = eq(_T_1058, _T_1059) @[alu.py:39]
    node _T_1061 = asSInt(io.src_a) @[alu.py:40]
    node _T_1062 = asSInt(io.src_b) @[alu.py:40]
    node _T_1063 = eq(_T_1061, _T_1062) @[alu.py:40]
    node _T_1064 = asSInt(io.src_a) @[alu.py:41]
    node _T_1065 = asSInt(io.src_b) @[alu.py:41]
    node _T_1066 = lt(_T_1064, _T_1065) @[alu.py:41]
    node _T_1067 = asSInt(io.src_a) @[alu.py:42]
    node _T_1068 = asSInt(io.src_b) @[alu.py:42]
    node _T_1069 = geq(_T_1067, _T_1068) @[alu.py:42]
    node _T_1070 = lt(io.src_a, io.src_b) @[alu.py:43]
    node _T_1071 = geq(io.src_a, io.src_b) @[alu.py:44]
    node _T_1072 = eq(io.ALUOp, UInt<5>(15)) @[mux.py:72]
    node _T_1073 = mux(_T_1072, _T_1071, UInt(0)) @[alu.py:44]
    node _T_1074 = eq(io.ALUOp, UInt<5>(14)) @[mux.py:72]
    node _T_1075 = mux(_T_1074, _T_1070, _T_1073) @[alu.py:44]
    node _T_1076 = eq(io.ALUOp, UInt<5>(13)) @[mux.py:72]
    node _T_1077 = mux(_T_1076, _T_1069, _T_1075) @[alu.py:44]
    node _T_1078 = eq(io.ALUOp, UInt<5>(12)) @[mux.py:72]
    node _T_1079 = mux(_T_1078, _T_1066, _T_1077) @[alu.py:44]
    node _T_1080 = eq(io.ALUOp, UInt<5>(11)) @[mux.py:72]
    node _T_1081 = mux(_T_1080, _T_1063, _T_1079) @[alu.py:44]
    node _T_1082 = eq(io.ALUOp, UInt<5>(10)) @[mux.py:72]
    node _T_1083 = mux(_T_1082, _T_1060, _T_1081) @[alu.py:44]
    io.conflag <= _T_1083 @[alu.py:44]


  module Branch_Predictor : @[branch_predictor.py:30]
    input clock : Clock @[rawmodule.py:100]
    input reset : UInt<1> @[rawmodule.py:101]
    output io : {flip inst : UInt<32>, flip branch_addr : UInt<32>, flip PC_Src : UInt<1>, flip pc : UInt<32>, flip ex_Branch : UInt<1>, flip ex_Jump_Type : UInt<1>, PC_Sel : UInt<2>, new_addr : UInt<32>, pc_recover : UInt<32>, IF_ID_Flush : UInt<1>, ID_EX_Flush : UInt<1>} @[branch_predictor.py:13]

    inst addr_buffer of Addr_Buffer
    addr_buffer.clock <= clock @[rawmodule.py:110]
    addr_buffer.reset <= reset @[rawmodule.py:110]
    reg dynamic_counter_status : UInt<2>, clock with: (reset => (reset, UInt(0))) @[branch_predictor.py:36]
    node _T_1237 = and(io.inst, UInt<32>("h0fe00707f")) @[listlookup.py:52]
    node _T_1238 = eq(_T_1237, UInt<6>("h033")) @[listlookup.py:52]
    node _T_1239 = and(io.inst, UInt<32>("h0fe00707f")) @[listlookup.py:52]
    node _T_1240 = eq(_T_1239, UInt<31>("h040000033")) @[listlookup.py:52]
    node _T_1241 = and(io.inst, UInt<32>("h0fe00707f")) @[listlookup.py:52]
    node _T_1242 = eq(_T_1241, UInt<15>("h07033")) @[listlookup.py:52]
    node _T_1243 = and(io.inst, UInt<32>("h0fe00707f")) @[listlookup.py:52]
    node _T_1244 = eq(_T_1243, UInt<15>("h06033")) @[listlookup.py:52]
    node _T_1245 = and(io.inst, UInt<32>("h0fe00707f")) @[listlookup.py:52]
    node _T_1246 = eq(_T_1245, UInt<15>("h04033")) @[listlookup.py:52]
    node _T_1247 = and(io.inst, UInt<15>("h0707f")) @[listlookup.py:52]
    node _T_1248 = eq(_T_1247, UInt<5>("h013")) @[listlookup.py:52]
    node _T_1249 = and(io.inst, UInt<15>("h0707f")) @[listlookup.py:52]
    node _T_1250 = eq(_T_1249, UInt<15>("h07013")) @[listlookup.py:52]
    node _T_1251 = and(io.inst, UInt<15>("h0707f")) @[listlookup.py:52]
    node _T_1252 = eq(_T_1251, UInt<15>("h06013")) @[listlookup.py:52]
    node _T_1253 = and(io.inst, UInt<15>("h0707f")) @[listlookup.py:52]
    node _T_1254 = eq(_T_1253, UInt<15>("h04013")) @[listlookup.py:52]
    node _T_1255 = and(io.inst, UInt<32>("h0fe00707f")) @[listlookup.py:52]
    node _T_1256 = eq(_T_1255, UInt<13>("h01033")) @[listlookup.py:52]
    node _T_1257 = and(io.inst, UInt<32>("h0fe00707f")) @[listlookup.py:52]
    node _T_1258 = eq(_T_1257, UInt<15>("h05033")) @[listlookup.py:52]
    node _T_1259 = and(io.inst, UInt<32>("h0fe00707f")) @[listlookup.py:52]
    node _T_1260 = eq(_T_1259, UInt<31>("h040005033")) @[listlookup.py:52]
    node _T_1261 = and(io.inst, UInt<32>("h0fe00707f")) @[listlookup.py:52]
    node _T_1262 = eq(_T_1261, UInt<13>("h01013")) @[listlookup.py:52]
    node _T_1263 = and(io.inst, UInt<32>("h0fe00707f")) @[listlookup.py:52]
    node _T_1264 = eq(_T_1263, UInt<15>("h05013")) @[listlookup.py:52]
    node _T_1265 = and(io.inst, UInt<32>("h0fe00707f")) @[listlookup.py:52]
    node _T_1266 = eq(_T_1265, UInt<31>("h040005013")) @[listlookup.py:52]
    node _T_1267 = and(io.inst, UInt<32>("h0fe00707f")) @[listlookup.py:52]
    node _T_1268 = eq(_T_1267, UInt<14>("h02033")) @[listlookup.py:52]
    node _T_1269 = and(io.inst, UInt<32>("h0fe00707f")) @[listlookup.py:52]
    node _T_1270 = eq(_T_1269, UInt<14>("h03033")) @[listlookup.py:52]
    node _T_1271 = and(io.inst, UInt<15>("h0707f")) @[listlookup.py:52]
    node _T_1272 = eq(_T_1271, UInt<14>("h02013")) @[listlookup.py:52]
    node _T_1273 = and(io.inst, UInt<15>("h0707f")) @[listlookup.py:52]
    node _T_1274 = eq(_T_1273, UInt<14>("h03013")) @[listlookup.py:52]
    node _T_1275 = and(io.inst, UInt<15>("h0707f")) @[listlookup.py:52]
    node _T_1276 = eq(_T_1275, UInt<14>("h02003")) @[listlookup.py:52]
    node _T_1277 = and(io.inst, UInt<15>("h0707f")) @[listlookup.py:52]
    node _T_1278 = eq(_T_1277, UInt<13>("h01003")) @[listlookup.py:52]
    node _T_1279 = and(io.inst, UInt<15>("h0707f")) @[listlookup.py:52]
    node _T_1280 = eq(_T_1279, UInt<2>("h03")) @[listlookup.py:52]
    node _T_1281 = and(io.inst, UInt<15>("h0707f")) @[listlookup.py:52]
    node _T_1282 = eq(_T_1281, UInt<15>("h05003")) @[listlookup.py:52]
    node _T_1283 = and(io.inst, UInt<15>("h0707f")) @[listlookup.py:52]
    node _T_1284 = eq(_T_1283, UInt<15>("h04003")) @[listlookup.py:52]
    node _T_1285 = and(io.inst, UInt<15>("h0707f")) @[listlookup.py:52]
    node _T_1286 = eq(_T_1285, UInt<14>("h02023")) @[listlookup.py:52]
    node _T_1287 = and(io.inst, UInt<15>("h0707f")) @[listlookup.py:52]
    node _T_1288 = eq(_T_1287, UInt<13>("h01023")) @[listlookup.py:52]
    node _T_1289 = and(io.inst, UInt<15>("h0707f")) @[listlookup.py:52]
    node _T_1290 = eq(_T_1289, UInt<6>("h023")) @[listlookup.py:52]
    node _T_1291 = and(io.inst, UInt<15>("h0707f")) @[listlookup.py:52]
    node _T_1292 = eq(_T_1291, UInt<7>("h063")) @[listlookup.py:52]
    node _T_1293 = and(io.inst, UInt<15>("h0707f")) @[listlookup.py:52]
    node _T_1294 = eq(_T_1293, UInt<13>("h01063")) @[listlookup.py:52]
    node _T_1295 = and(io.inst, UInt<15>("h0707f")) @[listlookup.py:52]
    node _T_1296 = eq(_T_1295, UInt<15>("h04063")) @[listlookup.py:52]
    node _T_1297 = and(io.inst, UInt<15>("h0707f")) @[listlookup.py:52]
    node _T_1298 = eq(_T_1297, UInt<15>("h05063")) @[listlookup.py:52]
    node _T_1299 = and(io.inst, UInt<15>("h0707f")) @[listlookup.py:52]
    node _T_1300 = eq(_T_1299, UInt<15>("h06063")) @[listlookup.py:52]
    node _T_1301 = and(io.inst, UInt<15>("h0707f")) @[listlookup.py:52]
    node _T_1302 = eq(_T_1301, UInt<15>("h07063")) @[listlookup.py:52]
    node _T_1303 = and(io.inst, UInt<7>("h07f")) @[listlookup.py:52]
    node _T_1304 = eq(_T_1303, UInt<7>("h06f")) @[listlookup.py:52]
    node _T_1305 = and(io.inst, UInt<15>("h0707f")) @[listlookup.py:52]
    node _T_1306 = eq(_T_1305, UInt<7>("h067")) @[listlookup.py:52]
    node _T_1307 = and(io.inst, UInt<7>("h07f")) @[listlookup.py:52]
    node _T_1308 = eq(_T_1307, UInt<6>("h037")) @[listlookup.py:52]
    node _T_1309 = and(io.inst, UInt<7>("h07f")) @[listlookup.py:52]
    node _T_1310 = eq(_T_1309, UInt<5>("h017")) @[listlookup.py:52]
    node _T_1311 = and(io.inst, UInt<32>("h0ffffffff")) @[listlookup.py:52]
    node _T_1312 = eq(_T_1311, UInt<5>("h013")) @[listlookup.py:52]
    node _T_1313 = mux(_T_1312, UInt<1>(0), UInt<1>(0)) @[branch_predictor.py:34]
    node _T_1314 = mux(_T_1310, UInt<1>(1), _T_1313) @[branch_predictor.py:34]
    node _T_1315 = mux(_T_1308, UInt<1>(1), _T_1314) @[branch_predictor.py:34]
    node _T_1316 = mux(_T_1306, UInt<1>(1), _T_1315) @[branch_predictor.py:34]
    node _T_1317 = mux(_T_1304, UInt<1>(1), _T_1316) @[branch_predictor.py:34]
    node _T_1318 = mux(_T_1302, UInt<1>(0), _T_1317) @[branch_predictor.py:34]
    node _T_1319 = mux(_T_1300, UInt<1>(0), _T_1318) @[branch_predictor.py:34]
    node _T_1320 = mux(_T_1298, UInt<1>(0), _T_1319) @[branch_predictor.py:34]
    node _T_1321 = mux(_T_1296, UInt<1>(0), _T_1320) @[branch_predictor.py:34]
    node _T_1322 = mux(_T_1294, UInt<1>(0), _T_1321) @[branch_predictor.py:34]
    node _T_1323 = mux(_T_1292, UInt<1>(0), _T_1322) @[branch_predictor.py:34]
    node _T_1324 = mux(_T_1290, UInt<1>(0), _T_1323) @[branch_predictor.py:34]
    node _T_1325 = mux(_T_1288, UInt<1>(0), _T_1324) @[branch_predictor.py:34]
    node _T_1326 = mux(_T_1286, UInt<1>(0), _T_1325) @[branch_predictor.py:34]
    node _T_1327 = mux(_T_1284, UInt<1>(1), _T_1326) @[branch_predictor.py:34]
    node _T_1328 = mux(_T_1282, UInt<1>(1), _T_1327) @[branch_predictor.py:34]
    node _T_1329 = mux(_T_1280, UInt<1>(1), _T_1328) @[branch_predictor.py:34]
    node _T_1330 = mux(_T_1278, UInt<1>(1), _T_1329) @[branch_predictor.py:34]
    node _T_1331 = mux(_T_1276, UInt<1>(1), _T_1330) @[branch_predictor.py:34]
    node _T_1332 = mux(_T_1274, UInt<1>(1), _T_1331) @[branch_predictor.py:34]
    node _T_1333 = mux(_T_1272, UInt<1>(1), _T_1332) @[branch_predictor.py:34]
    node _T_1334 = mux(_T_1270, UInt<1>(1), _T_1333) @[branch_predictor.py:34]
    node _T_1335 = mux(_T_1268, UInt<1>(1), _T_1334) @[branch_predictor.py:34]
    node _T_1336 = mux(_T_1266, UInt<1>(1), _T_1335) @[branch_predictor.py:34]
    node _T_1337 = mux(_T_1264, UInt<1>(1), _T_1336) @[branch_predictor.py:34]
    node _T_1338 = mux(_T_1262, UInt<1>(1), _T_1337) @[branch_predictor.py:34]
    node _T_1339 = mux(_T_1260, UInt<1>(1), _T_1338) @[branch_predictor.py:34]
    node _T_1340 = mux(_T_1258, UInt<1>(1), _T_1339) @[branch_predictor.py:34]
    node _T_1341 = mux(_T_1256, UInt<1>(1), _T_1340) @[branch_predictor.py:34]
    node _T_1342 = mux(_T_1254, UInt<1>(1), _T_1341) @[branch_predictor.py:34]
    node _T_1343 = mux(_T_1252, UInt<1>(1), _T_1342) @[branch_predictor.py:34]
    node _T_1344 = mux(_T_1250, UInt<1>(1), _T_1343) @[branch_predictor.py:34]
    node _T_1345 = mux(_T_1248, UInt<1>(1), _T_1344) @[branch_predictor.py:34]
    node _T_1346 = mux(_T_1246, UInt<1>(1), _T_1345) @[branch_predictor.py:34]
    node _T_1347 = mux(_T_1244, UInt<1>(1), _T_1346) @[branch_predictor.py:34]
    node _T_1348 = mux(_T_1242, UInt<1>(1), _T_1347) @[branch_predictor.py:34]
    node _T_1349 = mux(_T_1240, UInt<1>(1), _T_1348) @[branch_predictor.py:34]
    node _T_1350 = mux(_T_1238, UInt<1>(1), _T_1349) @[branch_predictor.py:34]
    node _T_1351 = mux(_T_1312, UInt<3>(0), UInt<3>(0)) @[branch_predictor.py:34]
    node _T_1352 = mux(_T_1310, UInt<3>(5), _T_1351) @[branch_predictor.py:34]
    node _T_1353 = mux(_T_1308, UInt<3>(5), _T_1352) @[branch_predictor.py:34]
    node _T_1354 = mux(_T_1306, UInt<3>(2), _T_1353) @[branch_predictor.py:34]
    node _T_1355 = mux(_T_1304, UInt<3>(6), _T_1354) @[branch_predictor.py:34]
    node _T_1356 = mux(_T_1302, UInt<3>(4), _T_1355) @[branch_predictor.py:34]
    node _T_1357 = mux(_T_1300, UInt<3>(4), _T_1356) @[branch_predictor.py:34]
    node _T_1358 = mux(_T_1298, UInt<3>(4), _T_1357) @[branch_predictor.py:34]
    node _T_1359 = mux(_T_1296, UInt<3>(4), _T_1358) @[branch_predictor.py:34]
    node _T_1360 = mux(_T_1294, UInt<3>(4), _T_1359) @[branch_predictor.py:34]
    node _T_1361 = mux(_T_1292, UInt<3>(4), _T_1360) @[branch_predictor.py:34]
    node _T_1362 = mux(_T_1290, UInt<3>(3), _T_1361) @[branch_predictor.py:34]
    node _T_1363 = mux(_T_1288, UInt<3>(3), _T_1362) @[branch_predictor.py:34]
    node _T_1364 = mux(_T_1286, UInt<3>(3), _T_1363) @[branch_predictor.py:34]
    node _T_1365 = mux(_T_1284, UInt<3>(2), _T_1364) @[branch_predictor.py:34]
    node _T_1366 = mux(_T_1282, UInt<3>(2), _T_1365) @[branch_predictor.py:34]
    node _T_1367 = mux(_T_1280, UInt<3>(2), _T_1366) @[branch_predictor.py:34]
    node _T_1368 = mux(_T_1278, UInt<3>(2), _T_1367) @[branch_predictor.py:34]
    node _T_1369 = mux(_T_1276, UInt<3>(2), _T_1368) @[branch_predictor.py:34]
    node _T_1370 = mux(_T_1274, UInt<3>(2), _T_1369) @[branch_predictor.py:34]
    node _T_1371 = mux(_T_1272, UInt<3>(2), _T_1370) @[branch_predictor.py:34]
    node _T_1372 = mux(_T_1270, UInt<3>(1), _T_1371) @[branch_predictor.py:34]
    node _T_1373 = mux(_T_1268, UInt<3>(1), _T_1372) @[branch_predictor.py:34]
    node _T_1374 = mux(_T_1266, UInt<3>(2), _T_1373) @[branch_predictor.py:34]
    node _T_1375 = mux(_T_1264, UInt<3>(2), _T_1374) @[branch_predictor.py:34]
    node _T_1376 = mux(_T_1262, UInt<3>(2), _T_1375) @[branch_predictor.py:34]
    node _T_1377 = mux(_T_1260, UInt<3>(1), _T_1376) @[branch_predictor.py:34]
    node _T_1378 = mux(_T_1258, UInt<3>(1), _T_1377) @[branch_predictor.py:34]
    node _T_1379 = mux(_T_1256, UInt<3>(1), _T_1378) @[branch_predictor.py:34]
    node _T_1380 = mux(_T_1254, UInt<3>(2), _T_1379) @[branch_predictor.py:34]
    node _T_1381 = mux(_T_1252, UInt<3>(2), _T_1380) @[branch_predictor.py:34]
    node _T_1382 = mux(_T_1250, UInt<3>(2), _T_1381) @[branch_predictor.py:34]
    node _T_1383 = mux(_T_1248, UInt<3>(2), _T_1382) @[branch_predictor.py:34]
    node _T_1384 = mux(_T_1246, UInt<3>(1), _T_1383) @[branch_predictor.py:34]
    node _T_1385 = mux(_T_1244, UInt<3>(1), _T_1384) @[branch_predictor.py:34]
    node _T_1386 = mux(_T_1242, UInt<3>(1), _T_1385) @[branch_predictor.py:34]
    node _T_1387 = mux(_T_1240, UInt<3>(1), _T_1386) @[branch_predictor.py:34]
    node _T_1388 = mux(_T_1238, UInt<3>(1), _T_1387) @[branch_predictor.py:34]
    node _T_1389 = mux(_T_1312, UInt<1>(0), UInt<1>(0)) @[branch_predictor.py:34]
    node _T_1390 = mux(_T_1310, UInt<1>(0), _T_1389) @[branch_predictor.py:34]
    node _T_1391 = mux(_T_1308, UInt<1>(0), _T_1390) @[branch_predictor.py:34]
    node _T_1392 = mux(_T_1306, UInt<1>(0), _T_1391) @[branch_predictor.py:34]
    node _T_1393 = mux(_T_1304, UInt<1>(0), _T_1392) @[branch_predictor.py:34]
    node _T_1394 = mux(_T_1302, UInt<1>(0), _T_1393) @[branch_predictor.py:34]
    node _T_1395 = mux(_T_1300, UInt<1>(0), _T_1394) @[branch_predictor.py:34]
    node _T_1396 = mux(_T_1298, UInt<1>(0), _T_1395) @[branch_predictor.py:34]
    node _T_1397 = mux(_T_1296, UInt<1>(0), _T_1396) @[branch_predictor.py:34]
    node _T_1398 = mux(_T_1294, UInt<1>(0), _T_1397) @[branch_predictor.py:34]
    node _T_1399 = mux(_T_1292, UInt<1>(0), _T_1398) @[branch_predictor.py:34]
    node _T_1400 = mux(_T_1290, UInt<1>(1), _T_1399) @[branch_predictor.py:34]
    node _T_1401 = mux(_T_1288, UInt<1>(1), _T_1400) @[branch_predictor.py:34]
    node _T_1402 = mux(_T_1286, UInt<1>(1), _T_1401) @[branch_predictor.py:34]
    node _T_1403 = mux(_T_1284, UInt<1>(1), _T_1402) @[branch_predictor.py:34]
    node _T_1404 = mux(_T_1282, UInt<1>(1), _T_1403) @[branch_predictor.py:34]
    node _T_1405 = mux(_T_1280, UInt<1>(1), _T_1404) @[branch_predictor.py:34]
    node _T_1406 = mux(_T_1278, UInt<1>(1), _T_1405) @[branch_predictor.py:34]
    node _T_1407 = mux(_T_1276, UInt<1>(1), _T_1406) @[branch_predictor.py:34]
    node _T_1408 = mux(_T_1274, UInt<1>(1), _T_1407) @[branch_predictor.py:34]
    node _T_1409 = mux(_T_1272, UInt<1>(1), _T_1408) @[branch_predictor.py:34]
    node _T_1410 = mux(_T_1270, UInt<1>(0), _T_1409) @[branch_predictor.py:34]
    node _T_1411 = mux(_T_1268, UInt<1>(0), _T_1410) @[branch_predictor.py:34]
    node _T_1412 = mux(_T_1266, UInt<1>(1), _T_1411) @[branch_predictor.py:34]
    node _T_1413 = mux(_T_1264, UInt<1>(1), _T_1412) @[branch_predictor.py:34]
    node _T_1414 = mux(_T_1262, UInt<1>(1), _T_1413) @[branch_predictor.py:34]
    node _T_1415 = mux(_T_1260, UInt<1>(0), _T_1414) @[branch_predictor.py:34]
    node _T_1416 = mux(_T_1258, UInt<1>(0), _T_1415) @[branch_predictor.py:34]
    node _T_1417 = mux(_T_1256, UInt<1>(0), _T_1416) @[branch_predictor.py:34]
    node _T_1418 = mux(_T_1254, UInt<1>(1), _T_1417) @[branch_predictor.py:34]
    node _T_1419 = mux(_T_1252, UInt<1>(1), _T_1418) @[branch_predictor.py:34]
    node _T_1420 = mux(_T_1250, UInt<1>(1), _T_1419) @[branch_predictor.py:34]
    node _T_1421 = mux(_T_1248, UInt<1>(1), _T_1420) @[branch_predictor.py:34]
    node _T_1422 = mux(_T_1246, UInt<1>(0), _T_1421) @[branch_predictor.py:34]
    node _T_1423 = mux(_T_1244, UInt<1>(0), _T_1422) @[branch_predictor.py:34]
    node _T_1424 = mux(_T_1242, UInt<1>(0), _T_1423) @[branch_predictor.py:34]
    node _T_1425 = mux(_T_1240, UInt<1>(0), _T_1424) @[branch_predictor.py:34]
    node _T_1426 = mux(_T_1238, UInt<1>(0), _T_1425) @[branch_predictor.py:34]
    node _T_1427 = mux(_T_1312, UInt<5>(16), UInt<5>(16)) @[branch_predictor.py:34]
    node _T_1428 = mux(_T_1310, UInt<5>(0), _T_1427) @[branch_predictor.py:34]
    node _T_1429 = mux(_T_1308, UInt<5>(0), _T_1428) @[branch_predictor.py:34]
    node _T_1430 = mux(_T_1306, UInt<5>(0), _T_1429) @[branch_predictor.py:34]
    node _T_1431 = mux(_T_1304, UInt<5>(0), _T_1430) @[branch_predictor.py:34]
    node _T_1432 = mux(_T_1302, UInt<5>(15), _T_1431) @[branch_predictor.py:34]
    node _T_1433 = mux(_T_1300, UInt<5>(14), _T_1432) @[branch_predictor.py:34]
    node _T_1434 = mux(_T_1298, UInt<5>(13), _T_1433) @[branch_predictor.py:34]
    node _T_1435 = mux(_T_1296, UInt<5>(12), _T_1434) @[branch_predictor.py:34]
    node _T_1436 = mux(_T_1294, UInt<5>(11), _T_1435) @[branch_predictor.py:34]
    node _T_1437 = mux(_T_1292, UInt<5>(10), _T_1436) @[branch_predictor.py:34]
    node _T_1438 = mux(_T_1290, UInt<5>(0), _T_1437) @[branch_predictor.py:34]
    node _T_1439 = mux(_T_1288, UInt<5>(0), _T_1438) @[branch_predictor.py:34]
    node _T_1440 = mux(_T_1286, UInt<5>(0), _T_1439) @[branch_predictor.py:34]
    node _T_1441 = mux(_T_1284, UInt<5>(0), _T_1440) @[branch_predictor.py:34]
    node _T_1442 = mux(_T_1282, UInt<5>(0), _T_1441) @[branch_predictor.py:34]
    node _T_1443 = mux(_T_1280, UInt<5>(0), _T_1442) @[branch_predictor.py:34]
    node _T_1444 = mux(_T_1278, UInt<5>(0), _T_1443) @[branch_predictor.py:34]
    node _T_1445 = mux(_T_1276, UInt<5>(0), _T_1444) @[branch_predictor.py:34]
    node _T_1446 = mux(_T_1274, UInt<5>(9), _T_1445) @[branch_predictor.py:34]
    node _T_1447 = mux(_T_1272, UInt<5>(8), _T_1446) @[branch_predictor.py:34]
    node _T_1448 = mux(_T_1270, UInt<5>(9), _T_1447) @[branch_predictor.py:34]
    node _T_1449 = mux(_T_1268, UInt<5>(8), _T_1448) @[branch_predictor.py:34]
    node _T_1450 = mux(_T_1266, UInt<5>(7), _T_1449) @[branch_predictor.py:34]
    node _T_1451 = mux(_T_1264, UInt<5>(6), _T_1450) @[branch_predictor.py:34]
    node _T_1452 = mux(_T_1262, UInt<5>(5), _T_1451) @[branch_predictor.py:34]
    node _T_1453 = mux(_T_1260, UInt<5>(7), _T_1452) @[branch_predictor.py:34]
    node _T_1454 = mux(_T_1258, UInt<5>(6), _T_1453) @[branch_predictor.py:34]
    node _T_1455 = mux(_T_1256, UInt<5>(5), _T_1454) @[branch_predictor.py:34]
    node _T_1456 = mux(_T_1254, UInt<5>(4), _T_1455) @[branch_predictor.py:34]
    node _T_1457 = mux(_T_1252, UInt<5>(3), _T_1456) @[branch_predictor.py:34]
    node _T_1458 = mux(_T_1250, UInt<5>(2), _T_1457) @[branch_predictor.py:34]
    node _T_1459 = mux(_T_1248, UInt<5>(0), _T_1458) @[branch_predictor.py:34]
    node _T_1460 = mux(_T_1246, UInt<5>(4), _T_1459) @[branch_predictor.py:34]
    node _T_1461 = mux(_T_1244, UInt<5>(3), _T_1460) @[branch_predictor.py:34]
    node _T_1462 = mux(_T_1242, UInt<5>(2), _T_1461) @[branch_predictor.py:34]
    node _T_1463 = mux(_T_1240, UInt<5>(1), _T_1462) @[branch_predictor.py:34]
    node _T_1464 = mux(_T_1238, UInt<5>(0), _T_1463) @[branch_predictor.py:34]
    node _T_1465 = mux(_T_1312, UInt<1>(0), UInt<1>(0)) @[branch_predictor.py:34]
    node _T_1466 = mux(_T_1310, UInt<1>(0), _T_1465) @[branch_predictor.py:34]
    node _T_1467 = mux(_T_1308, UInt<1>(0), _T_1466) @[branch_predictor.py:34]
    node _T_1468 = mux(_T_1306, UInt<1>(1), _T_1467) @[branch_predictor.py:34]
    node _T_1469 = mux(_T_1304, UInt<1>(1), _T_1468) @[branch_predictor.py:34]
    node _T_1470 = mux(_T_1302, UInt<1>(1), _T_1469) @[branch_predictor.py:34]
    node _T_1471 = mux(_T_1300, UInt<1>(1), _T_1470) @[branch_predictor.py:34]
    node _T_1472 = mux(_T_1298, UInt<1>(1), _T_1471) @[branch_predictor.py:34]
    node _T_1473 = mux(_T_1296, UInt<1>(1), _T_1472) @[branch_predictor.py:34]
    node _T_1474 = mux(_T_1294, UInt<1>(1), _T_1473) @[branch_predictor.py:34]
    node _T_1475 = mux(_T_1292, UInt<1>(1), _T_1474) @[branch_predictor.py:34]
    node _T_1476 = mux(_T_1290, UInt<1>(0), _T_1475) @[branch_predictor.py:34]
    node _T_1477 = mux(_T_1288, UInt<1>(0), _T_1476) @[branch_predictor.py:34]
    node _T_1478 = mux(_T_1286, UInt<1>(0), _T_1477) @[branch_predictor.py:34]
    node _T_1479 = mux(_T_1284, UInt<1>(0), _T_1478) @[branch_predictor.py:34]
    node _T_1480 = mux(_T_1282, UInt<1>(0), _T_1479) @[branch_predictor.py:34]
    node _T_1481 = mux(_T_1280, UInt<1>(0), _T_1480) @[branch_predictor.py:34]
    node _T_1482 = mux(_T_1278, UInt<1>(0), _T_1481) @[branch_predictor.py:34]
    node _T_1483 = mux(_T_1276, UInt<1>(0), _T_1482) @[branch_predictor.py:34]
    node _T_1484 = mux(_T_1274, UInt<1>(0), _T_1483) @[branch_predictor.py:34]
    node _T_1485 = mux(_T_1272, UInt<1>(0), _T_1484) @[branch_predictor.py:34]
    node _T_1486 = mux(_T_1270, UInt<1>(0), _T_1485) @[branch_predictor.py:34]
    node _T_1487 = mux(_T_1268, UInt<1>(0), _T_1486) @[branch_predictor.py:34]
    node _T_1488 = mux(_T_1266, UInt<1>(0), _T_1487) @[branch_predictor.py:34]
    node _T_1489 = mux(_T_1264, UInt<1>(0), _T_1488) @[branch_predictor.py:34]
    node _T_1490 = mux(_T_1262, UInt<1>(0), _T_1489) @[branch_predictor.py:34]
    node _T_1491 = mux(_T_1260, UInt<1>(0), _T_1490) @[branch_predictor.py:34]
    node _T_1492 = mux(_T_1258, UInt<1>(0), _T_1491) @[branch_predictor.py:34]
    node _T_1493 = mux(_T_1256, UInt<1>(0), _T_1492) @[branch_predictor.py:34]
    node _T_1494 = mux(_T_1254, UInt<1>(0), _T_1493) @[branch_predictor.py:34]
    node _T_1495 = mux(_T_1252, UInt<1>(0), _T_1494) @[branch_predictor.py:34]
    node _T_1496 = mux(_T_1250, UInt<1>(0), _T_1495) @[branch_predictor.py:34]
    node _T_1497 = mux(_T_1248, UInt<1>(0), _T_1496) @[branch_predictor.py:34]
    node _T_1498 = mux(_T_1246, UInt<1>(0), _T_1497) @[branch_predictor.py:34]
    node _T_1499 = mux(_T_1244, UInt<1>(0), _T_1498) @[branch_predictor.py:34]
    node _T_1500 = mux(_T_1242, UInt<1>(0), _T_1499) @[branch_predictor.py:34]
    node _T_1501 = mux(_T_1240, UInt<1>(0), _T_1500) @[branch_predictor.py:34]
    node _T_1502 = mux(_T_1238, UInt<1>(0), _T_1501) @[branch_predictor.py:34]
    node _T_1503 = mux(_T_1312, UInt<1>(0), UInt<1>(0)) @[branch_predictor.py:34]
    node _T_1504 = mux(_T_1310, UInt<1>(0), _T_1503) @[branch_predictor.py:34]
    node _T_1505 = mux(_T_1308, UInt<1>(0), _T_1504) @[branch_predictor.py:34]
    node _T_1506 = mux(_T_1306, UInt<1>(1), _T_1505) @[branch_predictor.py:34]
    node _T_1507 = mux(_T_1304, UInt<1>(0), _T_1506) @[branch_predictor.py:34]
    node _T_1508 = mux(_T_1302, UInt<1>(0), _T_1507) @[branch_predictor.py:34]
    node _T_1509 = mux(_T_1300, UInt<1>(0), _T_1508) @[branch_predictor.py:34]
    node _T_1510 = mux(_T_1298, UInt<1>(0), _T_1509) @[branch_predictor.py:34]
    node _T_1511 = mux(_T_1296, UInt<1>(0), _T_1510) @[branch_predictor.py:34]
    node _T_1512 = mux(_T_1294, UInt<1>(0), _T_1511) @[branch_predictor.py:34]
    node _T_1513 = mux(_T_1292, UInt<1>(0), _T_1512) @[branch_predictor.py:34]
    node _T_1514 = mux(_T_1290, UInt<1>(0), _T_1513) @[branch_predictor.py:34]
    node _T_1515 = mux(_T_1288, UInt<1>(0), _T_1514) @[branch_predictor.py:34]
    node _T_1516 = mux(_T_1286, UInt<1>(0), _T_1515) @[branch_predictor.py:34]
    node _T_1517 = mux(_T_1284, UInt<1>(0), _T_1516) @[branch_predictor.py:34]
    node _T_1518 = mux(_T_1282, UInt<1>(0), _T_1517) @[branch_predictor.py:34]
    node _T_1519 = mux(_T_1280, UInt<1>(0), _T_1518) @[branch_predictor.py:34]
    node _T_1520 = mux(_T_1278, UInt<1>(0), _T_1519) @[branch_predictor.py:34]
    node _T_1521 = mux(_T_1276, UInt<1>(0), _T_1520) @[branch_predictor.py:34]
    node _T_1522 = mux(_T_1274, UInt<1>(0), _T_1521) @[branch_predictor.py:34]
    node _T_1523 = mux(_T_1272, UInt<1>(0), _T_1522) @[branch_predictor.py:34]
    node _T_1524 = mux(_T_1270, UInt<1>(0), _T_1523) @[branch_predictor.py:34]
    node _T_1525 = mux(_T_1268, UInt<1>(0), _T_1524) @[branch_predictor.py:34]
    node _T_1526 = mux(_T_1266, UInt<1>(0), _T_1525) @[branch_predictor.py:34]
    node _T_1527 = mux(_T_1264, UInt<1>(0), _T_1526) @[branch_predictor.py:34]
    node _T_1528 = mux(_T_1262, UInt<1>(0), _T_1527) @[branch_predictor.py:34]
    node _T_1529 = mux(_T_1260, UInt<1>(0), _T_1528) @[branch_predictor.py:34]
    node _T_1530 = mux(_T_1258, UInt<1>(0), _T_1529) @[branch_predictor.py:34]
    node _T_1531 = mux(_T_1256, UInt<1>(0), _T_1530) @[branch_predictor.py:34]
    node _T_1532 = mux(_T_1254, UInt<1>(0), _T_1531) @[branch_predictor.py:34]
    node _T_1533 = mux(_T_1252, UInt<1>(0), _T_1532) @[branch_predictor.py:34]
    node _T_1534 = mux(_T_1250, UInt<1>(0), _T_1533) @[branch_predictor.py:34]
    node _T_1535 = mux(_T_1248, UInt<1>(0), _T_1534) @[branch_predictor.py:34]
    node _T_1536 = mux(_T_1246, UInt<1>(0), _T_1535) @[branch_predictor.py:34]
    node _T_1537 = mux(_T_1244, UInt<1>(0), _T_1536) @[branch_predictor.py:34]
    node _T_1538 = mux(_T_1242, UInt<1>(0), _T_1537) @[branch_predictor.py:34]
    node _T_1539 = mux(_T_1240, UInt<1>(0), _T_1538) @[branch_predictor.py:34]
    node _T_1540 = mux(_T_1238, UInt<1>(0), _T_1539) @[branch_predictor.py:34]
    node _T_1541 = mux(_T_1312, UInt<1>(0), UInt<1>(0)) @[branch_predictor.py:34]
    node _T_1542 = mux(_T_1310, UInt<1>(0), _T_1541) @[branch_predictor.py:34]
    node _T_1543 = mux(_T_1308, UInt<1>(0), _T_1542) @[branch_predictor.py:34]
    node _T_1544 = mux(_T_1306, UInt<1>(0), _T_1543) @[branch_predictor.py:34]
    node _T_1545 = mux(_T_1304, UInt<1>(0), _T_1544) @[branch_predictor.py:34]
    node _T_1546 = mux(_T_1302, UInt<1>(0), _T_1545) @[branch_predictor.py:34]
    node _T_1547 = mux(_T_1300, UInt<1>(0), _T_1546) @[branch_predictor.py:34]
    node _T_1548 = mux(_T_1298, UInt<1>(0), _T_1547) @[branch_predictor.py:34]
    node _T_1549 = mux(_T_1296, UInt<1>(0), _T_1548) @[branch_predictor.py:34]
    node _T_1550 = mux(_T_1294, UInt<1>(0), _T_1549) @[branch_predictor.py:34]
    node _T_1551 = mux(_T_1292, UInt<1>(0), _T_1550) @[branch_predictor.py:34]
    node _T_1552 = mux(_T_1290, UInt<1>(0), _T_1551) @[branch_predictor.py:34]
    node _T_1553 = mux(_T_1288, UInt<1>(0), _T_1552) @[branch_predictor.py:34]
    node _T_1554 = mux(_T_1286, UInt<1>(0), _T_1553) @[branch_predictor.py:34]
    node _T_1555 = mux(_T_1284, UInt<1>(1), _T_1554) @[branch_predictor.py:34]
    node _T_1556 = mux(_T_1282, UInt<1>(1), _T_1555) @[branch_predictor.py:34]
    node _T_1557 = mux(_T_1280, UInt<1>(1), _T_1556) @[branch_predictor.py:34]
    node _T_1558 = mux(_T_1278, UInt<1>(1), _T_1557) @[branch_predictor.py:34]
    node _T_1559 = mux(_T_1276, UInt<1>(1), _T_1558) @[branch_predictor.py:34]
    node _T_1560 = mux(_T_1274, UInt<1>(0), _T_1559) @[branch_predictor.py:34]
    node _T_1561 = mux(_T_1272, UInt<1>(0), _T_1560) @[branch_predictor.py:34]
    node _T_1562 = mux(_T_1270, UInt<1>(0), _T_1561) @[branch_predictor.py:34]
    node _T_1563 = mux(_T_1268, UInt<1>(0), _T_1562) @[branch_predictor.py:34]
    node _T_1564 = mux(_T_1266, UInt<1>(0), _T_1563) @[branch_predictor.py:34]
    node _T_1565 = mux(_T_1264, UInt<1>(0), _T_1564) @[branch_predictor.py:34]
    node _T_1566 = mux(_T_1262, UInt<1>(0), _T_1565) @[branch_predictor.py:34]
    node _T_1567 = mux(_T_1260, UInt<1>(0), _T_1566) @[branch_predictor.py:34]
    node _T_1568 = mux(_T_1258, UInt<1>(0), _T_1567) @[branch_predictor.py:34]
    node _T_1569 = mux(_T_1256, UInt<1>(0), _T_1568) @[branch_predictor.py:34]
    node _T_1570 = mux(_T_1254, UInt<1>(0), _T_1569) @[branch_predictor.py:34]
    node _T_1571 = mux(_T_1252, UInt<1>(0), _T_1570) @[branch_predictor.py:34]
    node _T_1572 = mux(_T_1250, UInt<1>(0), _T_1571) @[branch_predictor.py:34]
    node _T_1573 = mux(_T_1248, UInt<1>(0), _T_1572) @[branch_predictor.py:34]
    node _T_1574 = mux(_T_1246, UInt<1>(0), _T_1573) @[branch_predictor.py:34]
    node _T_1575 = mux(_T_1244, UInt<1>(0), _T_1574) @[branch_predictor.py:34]
    node _T_1576 = mux(_T_1242, UInt<1>(0), _T_1575) @[branch_predictor.py:34]
    node _T_1577 = mux(_T_1240, UInt<1>(0), _T_1576) @[branch_predictor.py:34]
    node _T_1578 = mux(_T_1238, UInt<1>(0), _T_1577) @[branch_predictor.py:34]
    node _T_1579 = mux(_T_1312, UInt<1>(0), UInt<1>(0)) @[branch_predictor.py:34]
    node _T_1580 = mux(_T_1310, UInt<1>(0), _T_1579) @[branch_predictor.py:34]
    node _T_1581 = mux(_T_1308, UInt<1>(0), _T_1580) @[branch_predictor.py:34]
    node _T_1582 = mux(_T_1306, UInt<1>(0), _T_1581) @[branch_predictor.py:34]
    node _T_1583 = mux(_T_1304, UInt<1>(0), _T_1582) @[branch_predictor.py:34]
    node _T_1584 = mux(_T_1302, UInt<1>(0), _T_1583) @[branch_predictor.py:34]
    node _T_1585 = mux(_T_1300, UInt<1>(0), _T_1584) @[branch_predictor.py:34]
    node _T_1586 = mux(_T_1298, UInt<1>(0), _T_1585) @[branch_predictor.py:34]
    node _T_1587 = mux(_T_1296, UInt<1>(0), _T_1586) @[branch_predictor.py:34]
    node _T_1588 = mux(_T_1294, UInt<1>(0), _T_1587) @[branch_predictor.py:34]
    node _T_1589 = mux(_T_1292, UInt<1>(0), _T_1588) @[branch_predictor.py:34]
    node _T_1590 = mux(_T_1290, UInt<1>(1), _T_1589) @[branch_predictor.py:34]
    node _T_1591 = mux(_T_1288, UInt<1>(1), _T_1590) @[branch_predictor.py:34]
    node _T_1592 = mux(_T_1286, UInt<1>(1), _T_1591) @[branch_predictor.py:34]
    node _T_1593 = mux(_T_1284, UInt<1>(0), _T_1592) @[branch_predictor.py:34]
    node _T_1594 = mux(_T_1282, UInt<1>(0), _T_1593) @[branch_predictor.py:34]
    node _T_1595 = mux(_T_1280, UInt<1>(0), _T_1594) @[branch_predictor.py:34]
    node _T_1596 = mux(_T_1278, UInt<1>(0), _T_1595) @[branch_predictor.py:34]
    node _T_1597 = mux(_T_1276, UInt<1>(0), _T_1596) @[branch_predictor.py:34]
    node _T_1598 = mux(_T_1274, UInt<1>(0), _T_1597) @[branch_predictor.py:34]
    node _T_1599 = mux(_T_1272, UInt<1>(0), _T_1598) @[branch_predictor.py:34]
    node _T_1600 = mux(_T_1270, UInt<1>(0), _T_1599) @[branch_predictor.py:34]
    node _T_1601 = mux(_T_1268, UInt<1>(0), _T_1600) @[branch_predictor.py:34]
    node _T_1602 = mux(_T_1266, UInt<1>(0), _T_1601) @[branch_predictor.py:34]
    node _T_1603 = mux(_T_1264, UInt<1>(0), _T_1602) @[branch_predictor.py:34]
    node _T_1604 = mux(_T_1262, UInt<1>(0), _T_1603) @[branch_predictor.py:34]
    node _T_1605 = mux(_T_1260, UInt<1>(0), _T_1604) @[branch_predictor.py:34]
    node _T_1606 = mux(_T_1258, UInt<1>(0), _T_1605) @[branch_predictor.py:34]
    node _T_1607 = mux(_T_1256, UInt<1>(0), _T_1606) @[branch_predictor.py:34]
    node _T_1608 = mux(_T_1254, UInt<1>(0), _T_1607) @[branch_predictor.py:34]
    node _T_1609 = mux(_T_1252, UInt<1>(0), _T_1608) @[branch_predictor.py:34]
    node _T_1610 = mux(_T_1250, UInt<1>(0), _T_1609) @[branch_predictor.py:34]
    node _T_1611 = mux(_T_1248, UInt<1>(0), _T_1610) @[branch_predictor.py:34]
    node _T_1612 = mux(_T_1246, UInt<1>(0), _T_1611) @[branch_predictor.py:34]
    node _T_1613 = mux(_T_1244, UInt<1>(0), _T_1612) @[branch_predictor.py:34]
    node _T_1614 = mux(_T_1242, UInt<1>(0), _T_1613) @[branch_predictor.py:34]
    node _T_1615 = mux(_T_1240, UInt<1>(0), _T_1614) @[branch_predictor.py:34]
    node _T_1616 = mux(_T_1238, UInt<1>(0), _T_1615) @[branch_predictor.py:34]
    node _T_1617 = mux(_T_1312, UInt<2>(0), UInt<2>(0)) @[branch_predictor.py:34]
    node _T_1618 = mux(_T_1310, UInt<2>(0), _T_1617) @[branch_predictor.py:34]
    node _T_1619 = mux(_T_1308, UInt<2>(0), _T_1618) @[branch_predictor.py:34]
    node _T_1620 = mux(_T_1306, UInt<2>(0), _T_1619) @[branch_predictor.py:34]
    node _T_1621 = mux(_T_1304, UInt<2>(0), _T_1620) @[branch_predictor.py:34]
    node _T_1622 = mux(_T_1302, UInt<2>(0), _T_1621) @[branch_predictor.py:34]
    node _T_1623 = mux(_T_1300, UInt<2>(0), _T_1622) @[branch_predictor.py:34]
    node _T_1624 = mux(_T_1298, UInt<2>(0), _T_1623) @[branch_predictor.py:34]
    node _T_1625 = mux(_T_1296, UInt<2>(0), _T_1624) @[branch_predictor.py:34]
    node _T_1626 = mux(_T_1294, UInt<2>(0), _T_1625) @[branch_predictor.py:34]
    node _T_1627 = mux(_T_1292, UInt<2>(0), _T_1626) @[branch_predictor.py:34]
    node _T_1628 = mux(_T_1290, UInt<2>(2), _T_1627) @[branch_predictor.py:34]
    node _T_1629 = mux(_T_1288, UInt<2>(1), _T_1628) @[branch_predictor.py:34]
    node _T_1630 = mux(_T_1286, UInt<2>(0), _T_1629) @[branch_predictor.py:34]
    node _T_1631 = mux(_T_1284, UInt<2>(2), _T_1630) @[branch_predictor.py:34]
    node _T_1632 = mux(_T_1282, UInt<2>(1), _T_1631) @[branch_predictor.py:34]
    node _T_1633 = mux(_T_1280, UInt<2>(2), _T_1632) @[branch_predictor.py:34]
    node _T_1634 = mux(_T_1278, UInt<2>(1), _T_1633) @[branch_predictor.py:34]
    node _T_1635 = mux(_T_1276, UInt<2>(0), _T_1634) @[branch_predictor.py:34]
    node _T_1636 = mux(_T_1274, UInt<2>(0), _T_1635) @[branch_predictor.py:34]
    node _T_1637 = mux(_T_1272, UInt<2>(0), _T_1636) @[branch_predictor.py:34]
    node _T_1638 = mux(_T_1270, UInt<2>(0), _T_1637) @[branch_predictor.py:34]
    node _T_1639 = mux(_T_1268, UInt<2>(0), _T_1638) @[branch_predictor.py:34]
    node _T_1640 = mux(_T_1266, UInt<2>(0), _T_1639) @[branch_predictor.py:34]
    node _T_1641 = mux(_T_1264, UInt<2>(0), _T_1640) @[branch_predictor.py:34]
    node _T_1642 = mux(_T_1262, UInt<2>(0), _T_1641) @[branch_predictor.py:34]
    node _T_1643 = mux(_T_1260, UInt<2>(0), _T_1642) @[branch_predictor.py:34]
    node _T_1644 = mux(_T_1258, UInt<2>(0), _T_1643) @[branch_predictor.py:34]
    node _T_1645 = mux(_T_1256, UInt<2>(0), _T_1644) @[branch_predictor.py:34]
    node _T_1646 = mux(_T_1254, UInt<2>(0), _T_1645) @[branch_predictor.py:34]
    node _T_1647 = mux(_T_1252, UInt<2>(0), _T_1646) @[branch_predictor.py:34]
    node _T_1648 = mux(_T_1250, UInt<2>(0), _T_1647) @[branch_predictor.py:34]
    node _T_1649 = mux(_T_1248, UInt<2>(0), _T_1648) @[branch_predictor.py:34]
    node _T_1650 = mux(_T_1246, UInt<2>(0), _T_1649) @[branch_predictor.py:34]
    node _T_1651 = mux(_T_1244, UInt<2>(0), _T_1650) @[branch_predictor.py:34]
    node _T_1652 = mux(_T_1242, UInt<2>(0), _T_1651) @[branch_predictor.py:34]
    node _T_1653 = mux(_T_1240, UInt<2>(0), _T_1652) @[branch_predictor.py:34]
    node _T_1654 = mux(_T_1238, UInt<2>(0), _T_1653) @[branch_predictor.py:34]
    node _T_1655 = mux(_T_1312, UInt<1>(0), UInt<1>(0)) @[branch_predictor.py:34]
    node _T_1656 = mux(_T_1310, UInt<1>(0), _T_1655) @[branch_predictor.py:34]
    node _T_1657 = mux(_T_1308, UInt<1>(0), _T_1656) @[branch_predictor.py:34]
    node _T_1658 = mux(_T_1306, UInt<1>(0), _T_1657) @[branch_predictor.py:34]
    node _T_1659 = mux(_T_1304, UInt<1>(0), _T_1658) @[branch_predictor.py:34]
    node _T_1660 = mux(_T_1302, UInt<1>(0), _T_1659) @[branch_predictor.py:34]
    node _T_1661 = mux(_T_1300, UInt<1>(0), _T_1660) @[branch_predictor.py:34]
    node _T_1662 = mux(_T_1298, UInt<1>(0), _T_1661) @[branch_predictor.py:34]
    node _T_1663 = mux(_T_1296, UInt<1>(0), _T_1662) @[branch_predictor.py:34]
    node _T_1664 = mux(_T_1294, UInt<1>(0), _T_1663) @[branch_predictor.py:34]
    node _T_1665 = mux(_T_1292, UInt<1>(0), _T_1664) @[branch_predictor.py:34]
    node _T_1666 = mux(_T_1290, UInt<1>(0), _T_1665) @[branch_predictor.py:34]
    node _T_1667 = mux(_T_1288, UInt<1>(0), _T_1666) @[branch_predictor.py:34]
    node _T_1668 = mux(_T_1286, UInt<1>(0), _T_1667) @[branch_predictor.py:34]
    node _T_1669 = mux(_T_1284, UInt<1>(1), _T_1668) @[branch_predictor.py:34]
    node _T_1670 = mux(_T_1282, UInt<1>(1), _T_1669) @[branch_predictor.py:34]
    node _T_1671 = mux(_T_1280, UInt<1>(0), _T_1670) @[branch_predictor.py:34]
    node _T_1672 = mux(_T_1278, UInt<1>(0), _T_1671) @[branch_predictor.py:34]
    node _T_1673 = mux(_T_1276, UInt<1>(0), _T_1672) @[branch_predictor.py:34]
    node _T_1674 = mux(_T_1274, UInt<1>(0), _T_1673) @[branch_predictor.py:34]
    node _T_1675 = mux(_T_1272, UInt<1>(0), _T_1674) @[branch_predictor.py:34]
    node _T_1676 = mux(_T_1270, UInt<1>(0), _T_1675) @[branch_predictor.py:34]
    node _T_1677 = mux(_T_1268, UInt<1>(0), _T_1676) @[branch_predictor.py:34]
    node _T_1678 = mux(_T_1266, UInt<1>(0), _T_1677) @[branch_predictor.py:34]
    node _T_1679 = mux(_T_1264, UInt<1>(0), _T_1678) @[branch_predictor.py:34]
    node _T_1680 = mux(_T_1262, UInt<1>(0), _T_1679) @[branch_predictor.py:34]
    node _T_1681 = mux(_T_1260, UInt<1>(0), _T_1680) @[branch_predictor.py:34]
    node _T_1682 = mux(_T_1258, UInt<1>(0), _T_1681) @[branch_predictor.py:34]
    node _T_1683 = mux(_T_1256, UInt<1>(0), _T_1682) @[branch_predictor.py:34]
    node _T_1684 = mux(_T_1254, UInt<1>(0), _T_1683) @[branch_predictor.py:34]
    node _T_1685 = mux(_T_1252, UInt<1>(0), _T_1684) @[branch_predictor.py:34]
    node _T_1686 = mux(_T_1250, UInt<1>(0), _T_1685) @[branch_predictor.py:34]
    node _T_1687 = mux(_T_1248, UInt<1>(0), _T_1686) @[branch_predictor.py:34]
    node _T_1688 = mux(_T_1246, UInt<1>(0), _T_1687) @[branch_predictor.py:34]
    node _T_1689 = mux(_T_1244, UInt<1>(0), _T_1688) @[branch_predictor.py:34]
    node _T_1690 = mux(_T_1242, UInt<1>(0), _T_1689) @[branch_predictor.py:34]
    node _T_1691 = mux(_T_1240, UInt<1>(0), _T_1690) @[branch_predictor.py:34]
    node _T_1692 = mux(_T_1238, UInt<1>(0), _T_1691) @[branch_predictor.py:34]
    node _T_1693 = mux(_T_1312, UInt<3>(0), UInt<3>(0)) @[branch_predictor.py:34]
    node _T_1694 = mux(_T_1310, UInt<3>(4), _T_1693) @[branch_predictor.py:34]
    node _T_1695 = mux(_T_1308, UInt<3>(3), _T_1694) @[branch_predictor.py:34]
    node _T_1696 = mux(_T_1306, UInt<3>(2), _T_1695) @[branch_predictor.py:34]
    node _T_1697 = mux(_T_1304, UInt<3>(2), _T_1696) @[branch_predictor.py:34]
    node _T_1698 = mux(_T_1302, UInt<3>(0), _T_1697) @[branch_predictor.py:34]
    node _T_1699 = mux(_T_1300, UInt<3>(0), _T_1698) @[branch_predictor.py:34]
    node _T_1700 = mux(_T_1298, UInt<3>(0), _T_1699) @[branch_predictor.py:34]
    node _T_1701 = mux(_T_1296, UInt<3>(0), _T_1700) @[branch_predictor.py:34]
    node _T_1702 = mux(_T_1294, UInt<3>(0), _T_1701) @[branch_predictor.py:34]
    node _T_1703 = mux(_T_1292, UInt<3>(0), _T_1702) @[branch_predictor.py:34]
    node _T_1704 = mux(_T_1290, UInt<3>(0), _T_1703) @[branch_predictor.py:34]
    node _T_1705 = mux(_T_1288, UInt<3>(0), _T_1704) @[branch_predictor.py:34]
    node _T_1706 = mux(_T_1286, UInt<3>(0), _T_1705) @[branch_predictor.py:34]
    node _T_1707 = mux(_T_1284, UInt<3>(1), _T_1706) @[branch_predictor.py:34]
    node _T_1708 = mux(_T_1282, UInt<3>(1), _T_1707) @[branch_predictor.py:34]
    node _T_1709 = mux(_T_1280, UInt<3>(1), _T_1708) @[branch_predictor.py:34]
    node _T_1710 = mux(_T_1278, UInt<3>(1), _T_1709) @[branch_predictor.py:34]
    node _T_1711 = mux(_T_1276, UInt<3>(1), _T_1710) @[branch_predictor.py:34]
    node _T_1712 = mux(_T_1274, UInt<3>(0), _T_1711) @[branch_predictor.py:34]
    node _T_1713 = mux(_T_1272, UInt<3>(0), _T_1712) @[branch_predictor.py:34]
    node _T_1714 = mux(_T_1270, UInt<3>(0), _T_1713) @[branch_predictor.py:34]
    node _T_1715 = mux(_T_1268, UInt<3>(0), _T_1714) @[branch_predictor.py:34]
    node _T_1716 = mux(_T_1266, UInt<3>(0), _T_1715) @[branch_predictor.py:34]
    node _T_1717 = mux(_T_1264, UInt<3>(0), _T_1716) @[branch_predictor.py:34]
    node _T_1718 = mux(_T_1262, UInt<3>(0), _T_1717) @[branch_predictor.py:34]
    node _T_1719 = mux(_T_1260, UInt<3>(0), _T_1718) @[branch_predictor.py:34]
    node _T_1720 = mux(_T_1258, UInt<3>(0), _T_1719) @[branch_predictor.py:34]
    node _T_1721 = mux(_T_1256, UInt<3>(0), _T_1720) @[branch_predictor.py:34]
    node _T_1722 = mux(_T_1254, UInt<3>(0), _T_1721) @[branch_predictor.py:34]
    node _T_1723 = mux(_T_1252, UInt<3>(0), _T_1722) @[branch_predictor.py:34]
    node _T_1724 = mux(_T_1250, UInt<3>(0), _T_1723) @[branch_predictor.py:34]
    node _T_1725 = mux(_T_1248, UInt<3>(0), _T_1724) @[branch_predictor.py:34]
    node _T_1726 = mux(_T_1246, UInt<3>(0), _T_1725) @[branch_predictor.py:34]
    node _T_1727 = mux(_T_1244, UInt<3>(0), _T_1726) @[branch_predictor.py:34]
    node _T_1728 = mux(_T_1242, UInt<3>(0), _T_1727) @[branch_predictor.py:34]
    node _T_1729 = mux(_T_1240, UInt<3>(0), _T_1728) @[branch_predictor.py:34]
    node _T_1730 = mux(_T_1238, UInt<3>(0), _T_1729) @[branch_predictor.py:34]
    node _T_1731 = mux(_T_1312, UInt<1>(0), UInt<1>(0)) @[branch_predictor.py:34]
    node _T_1732 = mux(_T_1310, UInt<1>(0), _T_1731) @[branch_predictor.py:34]
    node _T_1733 = mux(_T_1308, UInt<1>(0), _T_1732) @[branch_predictor.py:34]
    node _T_1734 = mux(_T_1306, UInt<1>(1), _T_1733) @[branch_predictor.py:34]
    node _T_1735 = mux(_T_1304, UInt<1>(1), _T_1734) @[branch_predictor.py:34]
    node _T_1736 = mux(_T_1302, UInt<1>(0), _T_1735) @[branch_predictor.py:34]
    node _T_1737 = mux(_T_1300, UInt<1>(0), _T_1736) @[branch_predictor.py:34]
    node _T_1738 = mux(_T_1298, UInt<1>(0), _T_1737) @[branch_predictor.py:34]
    node _T_1739 = mux(_T_1296, UInt<1>(0), _T_1738) @[branch_predictor.py:34]
    node _T_1740 = mux(_T_1294, UInt<1>(0), _T_1739) @[branch_predictor.py:34]
    node _T_1741 = mux(_T_1292, UInt<1>(0), _T_1740) @[branch_predictor.py:34]
    node _T_1742 = mux(_T_1290, UInt<1>(0), _T_1741) @[branch_predictor.py:34]
    node _T_1743 = mux(_T_1288, UInt<1>(0), _T_1742) @[branch_predictor.py:34]
    node _T_1744 = mux(_T_1286, UInt<1>(0), _T_1743) @[branch_predictor.py:34]
    node _T_1745 = mux(_T_1284, UInt<1>(0), _T_1744) @[branch_predictor.py:34]
    node _T_1746 = mux(_T_1282, UInt<1>(0), _T_1745) @[branch_predictor.py:34]
    node _T_1747 = mux(_T_1280, UInt<1>(0), _T_1746) @[branch_predictor.py:34]
    node _T_1748 = mux(_T_1278, UInt<1>(0), _T_1747) @[branch_predictor.py:34]
    node _T_1749 = mux(_T_1276, UInt<1>(0), _T_1748) @[branch_predictor.py:34]
    node _T_1750 = mux(_T_1274, UInt<1>(0), _T_1749) @[branch_predictor.py:34]
    node _T_1751 = mux(_T_1272, UInt<1>(0), _T_1750) @[branch_predictor.py:34]
    node _T_1752 = mux(_T_1270, UInt<1>(0), _T_1751) @[branch_predictor.py:34]
    node _T_1753 = mux(_T_1268, UInt<1>(0), _T_1752) @[branch_predictor.py:34]
    node _T_1754 = mux(_T_1266, UInt<1>(0), _T_1753) @[branch_predictor.py:34]
    node _T_1755 = mux(_T_1264, UInt<1>(0), _T_1754) @[branch_predictor.py:34]
    node _T_1756 = mux(_T_1262, UInt<1>(0), _T_1755) @[branch_predictor.py:34]
    node _T_1757 = mux(_T_1260, UInt<1>(0), _T_1756) @[branch_predictor.py:34]
    node _T_1758 = mux(_T_1258, UInt<1>(0), _T_1757) @[branch_predictor.py:34]
    node _T_1759 = mux(_T_1256, UInt<1>(0), _T_1758) @[branch_predictor.py:34]
    node _T_1760 = mux(_T_1254, UInt<1>(0), _T_1759) @[branch_predictor.py:34]
    node _T_1761 = mux(_T_1252, UInt<1>(0), _T_1760) @[branch_predictor.py:34]
    node _T_1762 = mux(_T_1250, UInt<1>(0), _T_1761) @[branch_predictor.py:34]
    node _T_1763 = mux(_T_1248, UInt<1>(0), _T_1762) @[branch_predictor.py:34]
    node _T_1764 = mux(_T_1246, UInt<1>(0), _T_1763) @[branch_predictor.py:34]
    node _T_1765 = mux(_T_1244, UInt<1>(0), _T_1764) @[branch_predictor.py:34]
    node _T_1766 = mux(_T_1242, UInt<1>(0), _T_1765) @[branch_predictor.py:34]
    node _T_1767 = mux(_T_1240, UInt<1>(0), _T_1766) @[branch_predictor.py:34]
    node _T_1768 = mux(_T_1238, UInt<1>(0), _T_1767) @[branch_predictor.py:34]
    node _T_1770 = add(io.pc, UInt<3>(4)) @[branch_predictor.py:37]
    node _T_1771 = bits(_T_1502, 0, 0) @[define.py:161]
    node _T_1772 = eq(UInt<1>(1), _T_1768) @[branch_predictor.py:40]
    node _T_1773 = and(_T_1771, _T_1772) @[branch_predictor.py:40]
    node _T_1774 = bits(_T_1502, 0, 0) @[define.py:161]
    node _T_1775 = eq(UInt<1>(0), _T_1768) @[branch_predictor.py:41]
    node _T_1776 = and(_T_1774, _T_1775) @[branch_predictor.py:41]
    node _T_1777 = bits(io.ex_Branch, 0, 0) @[define.py:161]
    node _T_1778 = eq(io.ex_Jump_Type, UInt<1>(1)) @[branch_predictor.py:42]
    node _T_1779 = and(_T_1777, _T_1778) @[branch_predictor.py:42]
    node _T_1780 = bits(io.ex_Branch, 0, 0) @[define.py:161]
    node _T_1781 = eq(io.ex_Jump_Type, UInt<1>(0)) @[branch_predictor.py:43]
    node _T_1782 = and(_T_1780, _T_1781) @[branch_predictor.py:43]
    node _T_1783 = eq(dynamic_counter_status, UInt<2>(2)) @[branch_predictor.py:45]
    node _T_1784 = eq(dynamic_counter_status, UInt<2>(3)) @[branch_predictor.py:46]
    node _T_1785 = or(_T_1783, _T_1784) @[branch_predictor.py:46]
    node _T_1786 = and(_T_1776, _T_1785) @[branch_predictor.py:46]
    addr_buffer.io.record <= _T_1786 @[branch_predictor.py:48]
    addr_buffer.io.addr_input <= _T_1770 @[branch_predictor.py:49]
    node _T_1787 = mux(_T_1779, io.branch_addr, UInt(0)) @[branch_predictor.py:52]
    node _T_1788 = mux(_T_1779, UInt<2>(2), UInt<2>(0)) @[branch_predictor.py:53]
    node _T_1789 = bits(io.PC_Src, 0, 0) @[define.py:161]
    node _T_1790 = eq(dynamic_counter_status, UInt<2>(2)) @[mux.py:72]
    node _T_1791 = mux(_T_1790, UInt<2>(2), dynamic_counter_status) @[branch_predictor.py:61]
    node _T_1792 = eq(dynamic_counter_status, UInt<2>(3)) @[mux.py:72]
    node _T_1793 = mux(_T_1792, UInt<2>(2), _T_1791) @[branch_predictor.py:61]
    node _T_1794 = eq(dynamic_counter_status, UInt<2>(1)) @[mux.py:72]
    node _T_1795 = mux(_T_1794, UInt<2>(3), _T_1793) @[branch_predictor.py:61]
    node _T_1796 = eq(dynamic_counter_status, UInt<2>(0)) @[mux.py:72]
    node _T_1797 = mux(_T_1796, UInt<2>(1), _T_1795) @[branch_predictor.py:61]
    node _T_1798 = eq(dynamic_counter_status, UInt<2>(2)) @[mux.py:72]
    node _T_1799 = mux(_T_1798, UInt<2>(3), dynamic_counter_status) @[branch_predictor.py:66]
    node _T_1800 = eq(dynamic_counter_status, UInt<2>(3)) @[mux.py:72]
    node _T_1801 = mux(_T_1800, UInt<2>(1), _T_1799) @[branch_predictor.py:66]
    node _T_1802 = eq(dynamic_counter_status, UInt<2>(1)) @[mux.py:72]
    node _T_1803 = mux(_T_1802, UInt<2>(0), _T_1801) @[branch_predictor.py:66]
    node _T_1804 = eq(dynamic_counter_status, UInt<2>(0)) @[mux.py:72]
    node _T_1805 = mux(_T_1804, UInt<2>(0), _T_1803) @[branch_predictor.py:66]
    node _T_1806 = mux(_T_1789, _T_1797, _T_1805) @[branch_predictor.py:66]
    node _T_1807 = mux(_T_1782, _T_1806, dynamic_counter_status) @[branch_predictor.py:67]
    dynamic_counter_status <= _T_1807 @[branch_predictor.py:69]
    node _T_1808 = eq(UInt<2>(3), _T_1807) @[branch_predictor.py:71]
    node _T_1809 = eq(UInt<2>(1), _T_1807) @[branch_predictor.py:71]
    node _T_1810 = or(_T_1808, _T_1809) @[branch_predictor.py:71]
    node _T_1811 = and(_T_1782, _T_1810) @[branch_predictor.py:71]
    node _T_1812 = eq(UInt<2>(3), _T_1807) @[branch_predictor.py:73]
    node _T_1813 = eq(dynamic_counter_status, UInt<2>(2)) @[branch_predictor.py:73]
    node _T_1814 = and(_T_1812, _T_1813) @[branch_predictor.py:73]
    node _T_1815 = eq(UInt<2>(1), _T_1807) @[branch_predictor.py:74]
    node _T_1816 = eq(dynamic_counter_status, UInt<2>(3)) @[branch_predictor.py:74]
    node _T_1817 = and(_T_1815, _T_1816) @[branch_predictor.py:74]
    node _T_1818 = or(_T_1814, _T_1817) @[branch_predictor.py:74]
    node _T_1819 = and(_T_1811, _T_1818) @[branch_predictor.py:74]
    node _T_1820 = or(_T_1779, _T_1811) @[branch_predictor.py:76]
    addr_buffer.io.flush <= _T_1820 @[branch_predictor.py:78]
    node _T_1821 = eq(dynamic_counter_status, UInt<2>(2)) @[mux.py:72]
    node _T_1822 = mux(_T_1821, UInt<2>(2), UInt<2>(0)) @[branch_predictor.py:84]
    node _T_1823 = eq(dynamic_counter_status, UInt<2>(3)) @[mux.py:72]
    node _T_1824 = mux(_T_1823, UInt<2>(2), _T_1822) @[branch_predictor.py:84]
    node _T_1825 = eq(dynamic_counter_status, UInt<2>(1)) @[mux.py:72]
    node _T_1826 = mux(_T_1825, UInt<2>(0), _T_1824) @[branch_predictor.py:84]
    node _T_1827 = eq(dynamic_counter_status, UInt<2>(0)) @[mux.py:72]
    node _T_1828 = mux(_T_1827, UInt<2>(0), _T_1826) @[branch_predictor.py:84]
    node _T_1829 = asSInt(io.pc) @[branch_predictor.py:87]
    node _T_1830 = bits(io.inst, 31, 31) @[branch_predictor.py:87]
    node _T_1831 = bits(io.inst, 7, 7) @[branch_predictor.py:87]
    node _T_1832 = bits(io.inst, 30, 25) @[branch_predictor.py:87]
    node _T_1833 = bits(io.inst, 11, 8) @[branch_predictor.py:88]
    node _T_1834 = cat(_T_1830, _T_1831) @[branch_predictor.py:88]
    node _T_1835 = cat(_T_1834, _T_1832) @[branch_predictor.py:88]
    node _T_1836 = cat(_T_1835, _T_1833) @[branch_predictor.py:88]
    node _T_1837 = cat(_T_1836, UInt<2>(0)) @[branch_predictor.py:88]
    node _T_1838 = asSInt(_T_1837) @[branch_predictor.py:88]
    node _T_1839 = add(_T_1829, _T_1838) @[branch_predictor.py:88]
    node _T_1840 = asUInt(_T_1839) @[branch_predictor.py:88]
    node _T_1841 = mux(_T_1819, UInt<2>(1), UInt<2>(2)) @[branch_predictor.py:90]
    node _T_1842 = mux(_T_1811, _T_1841, UInt<2>(0)) @[branch_predictor.py:90]
    node _T_1843 = and(_T_1782, _T_1811) @[branch_predictor.py:94]
    node _T_1844 = mux(_T_1776, _T_1828, UInt<2>(0)) @[branch_predictor.py:95]
    node _T_1845 = mux(_T_1843, _T_1842, _T_1844) @[branch_predictor.py:95]
    node _T_1846 = mux(_T_1779, _T_1788, _T_1845) @[branch_predictor.py:95]
    io.PC_Sel <= _T_1846 @[branch_predictor.py:95]
    node _T_1847 = mux(_T_1776, _T_1840, UInt(0)) @[branch_predictor.py:99]
    node _T_1848 = mux(_T_1782, io.branch_addr, _T_1847) @[branch_predictor.py:99]
    node _T_1849 = mux(_T_1779, io.branch_addr, _T_1848) @[branch_predictor.py:99]
    io.new_addr <= _T_1849 @[branch_predictor.py:99]
    io.pc_recover <= addr_buffer.io.front @[branch_predictor.py:101]
    node _T_1850 = mux(_T_1820, UInt<1>(1), UInt<1>(0)) @[branch_predictor.py:104]
    io.IF_ID_Flush <= _T_1850 @[branch_predictor.py:104]
    node _T_1851 = mux(_T_1820, UInt<1>(1), UInt<1>(0)) @[branch_predictor.py:105]
    io.ID_EX_Flush <= _T_1851 @[branch_predictor.py:105]


  module DataCache : @[datacache.py:24]
    input clock : Clock @[rawmodule.py:100]
    input reset : UInt<1> @[rawmodule.py:101]
    output io : {flip addr : UInt<32>, flip write_data : UInt<32>, flip Mem_Read : UInt<1>, flip Mem_Write : UInt<1>, flip Data_Size : UInt<2>, flip Load_Type : UInt<1>, data_out : UInt<32>} @[datacache.py:11]

    cmem cache : UInt<32>[32] @[datacache.py:27]
    node _T_1865 = div(io.addr, UInt<3>(4)) @[datacache.py:28]
    node _T_1866 = bits(io.write_data, 15, 0) @[datacache.py:32]
    node _T_1867 = cat(UInt<16>(0), _T_1866) @[datacache.py:32]
    node _T_1868 = bits(io.write_data, 7, 0) @[datacache.py:33]
    node _T_1869 = cat(UInt<24>(0), _T_1868) @[datacache.py:33]
    node _T_1870 = eq(io.Data_Size, UInt<2>(2)) @[mux.py:72]
    node _T_1871 = mux(_T_1870, _T_1869, io.write_data) @[datacache.py:33]
    node _T_1872 = eq(io.Data_Size, UInt<2>(1)) @[mux.py:72]
    node _T_1873 = mux(_T_1872, _T_1867, _T_1871) @[datacache.py:33]
    node _T_1874 = eq(io.Data_Size, UInt<2>(0)) @[mux.py:72]
    node _T_1875 = mux(_T_1874, io.write_data, _T_1873) @[datacache.py:33]
    node _T_1876 = cat(io.Data_Size, io.Load_Type) @[datacache.py:36]
    read mport _T_1877 = cache[_T_1865], clock @[memory.py:52]
    read mport _T_1878 = cache[_T_1865], clock @[memory.py:52]
    read mport _T_1879 = cache[_T_1865], clock @[memory.py:52]
    node _T_1880 = bits(_T_1879, 15, 0) @[datacache.py:38]
    read mport _T_1881 = cache[_T_1865], clock @[memory.py:52]
    node _T_1882 = bits(_T_1881, 15, 0) @[datacache.py:39]
    node _T_1883 = asSInt(_T_1882) @[datacache.py:39]
    node _T_1884 = dshl(_T_1883, UInt<5>(16)) @[datacache.py:39]
    node _T_1885 = dshr(_T_1884, UInt<5>(16)) @[datacache.py:39]
    node _T_1886 = asUInt(_T_1885) @[datacache.py:39]
    read mport _T_1887 = cache[_T_1865], clock @[memory.py:52]
    node _T_1888 = bits(_T_1887, 7, 0) @[datacache.py:40]
    read mport _T_1889 = cache[_T_1865], clock @[memory.py:52]
    node _T_1890 = bits(_T_1889, 7, 0) @[datacache.py:41]
    node _T_1891 = asSInt(_T_1890) @[datacache.py:41]
    node _T_1892 = dshl(_T_1891, UInt<5>(24)) @[datacache.py:41]
    node _T_1893 = dshr(_T_1892, UInt<5>(24)) @[datacache.py:41]
    node _T_1894 = asUInt(_T_1893) @[datacache.py:41]
    node _T_1895 = eq(UInt<3>(4), _T_1876) @[mux.py:72]
    node _T_1896 = mux(_T_1895, _T_1894, _T_1877) @[datacache.py:41]
    node _T_1897 = eq(UInt<3>(5), _T_1876) @[mux.py:72]
    node _T_1898 = mux(_T_1897, _T_1888, _T_1896) @[datacache.py:41]
    node _T_1899 = eq(UInt<3>(2), _T_1876) @[mux.py:72]
    node _T_1900 = mux(_T_1899, _T_1886, _T_1898) @[datacache.py:41]
    node _T_1901 = eq(UInt<3>(3), _T_1876) @[mux.py:72]
    node _T_1902 = mux(_T_1901, _T_1880, _T_1900) @[datacache.py:41]
    node _T_1903 = eq(UInt<3>(1), _T_1876) @[mux.py:72]
    node _T_1904 = mux(_T_1903, _T_1878, _T_1902) @[datacache.py:41]
    write mport _T_1905 = cache[_T_1865], clock @[memory.py:52]
    node _T_1906 = bits(io.Mem_Write, 0, 0) @[define.py:161]
    read mport _T_1907 = cache[_T_1865], clock @[memory.py:52]
    node _T_1908 = mux(_T_1906, _T_1875, _T_1907) @[datacache.py:44]
    _T_1905 <= _T_1908 @[datacache.py:44]
    node _T_1909 = bits(io.Mem_Read, 0, 0) @[define.py:161]
    node _T_1910 = mux(_T_1909, _T_1904, UInt(0)) @[datacache.py:45]
    io.data_out <= _T_1910 @[datacache.py:45]


  module EX_MEM_Register : @[ex_mem_register.py:46]
    input clock : Clock @[rawmodule.py:100]
    input reset : UInt<1> @[rawmodule.py:101]
    output io : {flip ex_alu_sum : UInt<32>, flip ex_rs2_out : UInt<32>, flip ex_rd : UInt<5>, flip ex_pc_4 : UInt<32>, flip ex_imm : UInt<32>, flip ex_aui_pc : UInt<32>, flip ex_rs2 : UInt<32>, flip ex_Mem_Read : UInt<1>, flip ex_Mem_Write : UInt<1>, flip ex_Data_Size : UInt<2>, flip ex_Load_Type : UInt<1>, flip ex_Reg_Write : UInt<1>, flip ex_Mem_to_Reg : UInt<3>, mem_Mem_Read : UInt<1>, mem_Mem_Write : UInt<1>, mem_Data_Size : UInt<2>, mem_Load_Type : UInt<1>, mem_Reg_Write : UInt<1>, mem_Mem_to_Reg : UInt<3>, mem_alu_sum : UInt<32>, mem_rs2_out : UInt<32>, mem_rd : UInt<5>, mem_pc_4 : UInt<32>, mem_imm : UInt<32>, mem_aui_pc : UInt<32>, mem_rs2 : UInt<32>} @[ex_mem_register.py:11]

    reg alu_sum : UInt<32>, clock with: (reset => (reset, UInt(0))) @[ex_mem_register.py:49]
    reg rs2_out : UInt<32>, clock with: (reset => (reset, UInt(0))) @[ex_mem_register.py:50]
    reg rd : UInt<5>, clock with: (reset => (reset, UInt(0))) @[ex_mem_register.py:51]
    reg pc_4 : UInt<32>, clock with: (reset => (reset, UInt(0))) @[ex_mem_register.py:52]
    reg imm : UInt<32>, clock with: (reset => (reset, UInt(0))) @[ex_mem_register.py:53]
    reg aui_pc : UInt<32>, clock with: (reset => (reset, UInt(0))) @[ex_mem_register.py:54]
    reg rs2 : UInt<5>, clock with: (reset => (reset, UInt(0))) @[ex_mem_register.py:55]
    reg mem_read : UInt<1>, clock with: (reset => (reset, UInt(0))) @[ex_mem_register.py:57]
    reg mem_write : UInt<1>, clock with: (reset => (reset, UInt(0))) @[ex_mem_register.py:58]
    reg data_size : UInt<2>, clock with: (reset => (reset, UInt(0))) @[ex_mem_register.py:59]
    reg load_type : UInt<1>, clock with: (reset => (reset, UInt(0))) @[ex_mem_register.py:60]
    reg reg_write : UInt<1>, clock with: (reset => (reset, UInt(0))) @[ex_mem_register.py:61]
    reg mem_to_reg : UInt<3>, clock with: (reset => (reset, UInt(0))) @[ex_mem_register.py:62]
    alu_sum <= io.ex_alu_sum @[ex_mem_register.py:64]
    rs2_out <= io.ex_rs2_out @[ex_mem_register.py:65]
    rd <= io.ex_rd @[ex_mem_register.py:66]
    pc_4 <= io.ex_pc_4 @[ex_mem_register.py:67]
    imm <= io.ex_imm @[ex_mem_register.py:68]
    aui_pc <= io.ex_aui_pc @[ex_mem_register.py:69]
    rs2 <= io.ex_rs2 @[ex_mem_register.py:70]
    mem_read <= io.ex_Mem_Read @[ex_mem_register.py:71]
    mem_write <= io.ex_Mem_Write @[ex_mem_register.py:72]
    data_size <= io.ex_Data_Size @[ex_mem_register.py:73]
    load_type <= io.ex_Load_Type @[ex_mem_register.py:74]
    reg_write <= io.ex_Reg_Write @[ex_mem_register.py:75]
    mem_to_reg <= io.ex_Mem_to_Reg @[ex_mem_register.py:76]
    io.mem_alu_sum <= alu_sum @[ex_mem_register.py:78]
    io.mem_rs2_out <= rs2_out @[ex_mem_register.py:79]
    io.mem_rd <= rd @[ex_mem_register.py:80]
    io.mem_pc_4 <= pc_4 @[ex_mem_register.py:81]
    io.mem_imm <= imm @[ex_mem_register.py:82]
    io.mem_aui_pc <= aui_pc @[ex_mem_register.py:83]
    io.mem_rs2 <= rs2 @[ex_mem_register.py:84]
    io.mem_Mem_Read <= mem_read @[ex_mem_register.py:85]
    io.mem_Mem_Write <= mem_write @[ex_mem_register.py:86]
    io.mem_Data_Size <= data_size @[ex_mem_register.py:87]
    io.mem_Load_Type <= load_type @[ex_mem_register.py:88]
    io.mem_Reg_Write <= reg_write @[ex_mem_register.py:89]
    io.mem_Mem_to_Reg <= mem_to_reg @[ex_mem_register.py:90]


  module Forward : @[forward.py:28]
    input clock : Clock @[rawmodule.py:100]
    input reset : UInt<1> @[rawmodule.py:101]
    output io : {flip ex_mem_Reg_Write : UInt<1>, flip ex_mem_rd : UInt<5>, flip ex_mem_Mem_Write : UInt<1>, flip ex_mem_rs2 : UInt<5>, flip mem_wb_Reg_Write : UInt<1>, flip mem_wb_rd : UInt<5>, flip id_ex_rs1 : UInt<5>, flip id_ex_rs2 : UInt<5>, Forward_A : UInt<2>, Forward_B : UInt<2>, MemWrite_Src : UInt<1>} @[forward.py:11]

    node _T_1969 = bits(io.ex_mem_Reg_Write, 0, 0) @[define.py:161]
    node _T_1970 = neq(io.ex_mem_rd, UInt(0)) @[forward.py:31]
    node _T_1971 = and(_T_1969, _T_1970) @[forward.py:31]
    node _T_1972 = eq(io.ex_mem_rd, io.id_ex_rs1) @[forward.py:32]
    node _T_1973 = and(_T_1971, _T_1972) @[forward.py:32]
    node _T_1974 = bits(io.mem_wb_Reg_Write, 0, 0) @[define.py:161]
    node _T_1975 = neq(io.mem_wb_rd, UInt(0)) @[forward.py:34]
    node _T_1976 = and(_T_1974, _T_1975) @[forward.py:34]
    node _T_1977 = not(_T_1973) @[forward.py:34]
    node _T_1978 = and(_T_1976, _T_1977) @[forward.py:34]
    node _T_1979 = eq(io.mem_wb_rd, io.id_ex_rs1) @[forward.py:34]
    node _T_1980 = and(_T_1978, _T_1979) @[forward.py:34]
    node _T_1981 = bits(io.ex_mem_Reg_Write, 0, 0) @[define.py:161]
    node _T_1982 = neq(io.ex_mem_rd, UInt(0)) @[forward.py:36]
    node _T_1983 = and(_T_1981, _T_1982) @[forward.py:36]
    node _T_1984 = eq(io.ex_mem_rd, io.id_ex_rs2) @[forward.py:37]
    node _T_1985 = and(_T_1983, _T_1984) @[forward.py:37]
    node _T_1986 = bits(io.mem_wb_Reg_Write, 0, 0) @[define.py:161]
    node _T_1987 = neq(io.mem_wb_rd, UInt(0)) @[forward.py:39]
    node _T_1988 = and(_T_1986, _T_1987) @[forward.py:39]
    node _T_1989 = not(_T_1985) @[forward.py:39]
    node _T_1990 = and(_T_1988, _T_1989) @[forward.py:39]
    node _T_1991 = eq(io.mem_wb_rd, io.id_ex_rs2) @[forward.py:39]
    node _T_1992 = and(_T_1990, _T_1991) @[forward.py:39]
    node _T_1993 = cat(_T_1973, _T_1980) @[forward.py:41]
    io.Forward_A <= _T_1993 @[forward.py:41]
    node _T_1994 = cat(_T_1985, _T_1992) @[forward.py:42]
    io.Forward_B <= _T_1994 @[forward.py:42]
    node _T_1995 = bits(io.mem_wb_Reg_Write, 0, 0) @[define.py:161]
    node _T_1996 = bits(io.ex_mem_Mem_Write, 0, 0) @[define.py:161]
    node _T_1997 = and(_T_1995, _T_1996) @[forward.py:45]
    node _T_1998 = eq(io.ex_mem_rs2, io.mem_wb_rd) @[forward.py:46]
    node _T_1999 = and(_T_1997, _T_1998) @[forward.py:46]
    node _T_2000 = mux(_T_1999, UInt<1>(1), UInt<1>(0)) @[forward.py:48]
    io.MemWrite_Src <= _T_2000 @[forward.py:48]


  module MEM_WB_Register : @[mem_wb_register.py:35]
    input clock : Clock @[rawmodule.py:100]
    input reset : UInt<1> @[rawmodule.py:101]
    output io : {flip mem_dataout : UInt<32>, flip mem_alu_sum : UInt<32>, flip mem_rd : UInt<5>, flip mem_pc_4 : UInt<32>, flip mem_imm : UInt<32>, flip mem_aui_pc : UInt<32>, flip mem_Mem_to_Reg : UInt<3>, flip mem_Reg_Write : UInt<1>, wb_Mem_to_Reg : UInt<3>, wb_Reg_Write : UInt<1>, wb_dataout : UInt<32>, wb_alu_sum : UInt<32>, wb_rd : UInt<5>, wb_pc_4 : UInt<32>, wb_imm : UInt<32>, wb_aui_pc : UInt<32>} @[mem_wb_register.py:11]

    reg dataout : UInt<32>, clock with: (reset => (reset, UInt(0))) @[mem_wb_register.py:38]
    reg alu_sum : UInt<32>, clock with: (reset => (reset, UInt(0))) @[mem_wb_register.py:39]
    reg rd : UInt<5>, clock with: (reset => (reset, UInt(0))) @[mem_wb_register.py:40]
    reg pc_4 : UInt<32>, clock with: (reset => (reset, UInt(0))) @[mem_wb_register.py:41]
    reg imm : UInt<32>, clock with: (reset => (reset, UInt(0))) @[mem_wb_register.py:42]
    reg aui_pc : UInt<32>, clock with: (reset => (reset, UInt(0))) @[mem_wb_register.py:43]
    reg mem_to_reg : UInt<3>, clock with: (reset => (reset, UInt(0))) @[mem_wb_register.py:44]
    reg reg_write : UInt<1>, clock with: (reset => (reset, UInt(0))) @[mem_wb_register.py:45]
    dataout <= io.mem_dataout @[mem_wb_register.py:47]
    alu_sum <= io.mem_alu_sum @[mem_wb_register.py:48]
    rd <= io.mem_rd @[mem_wb_register.py:49]
    pc_4 <= io.mem_pc_4 @[mem_wb_register.py:50]
    imm <= io.mem_imm @[mem_wb_register.py:51]
    aui_pc <= io.mem_aui_pc @[mem_wb_register.py:52]
    mem_to_reg <= io.mem_Mem_to_Reg @[mem_wb_register.py:53]
    reg_write <= io.mem_Reg_Write @[mem_wb_register.py:54]
    io.wb_Mem_to_Reg <= mem_to_reg @[mem_wb_register.py:56]
    io.wb_Reg_Write <= reg_write @[mem_wb_register.py:57]
    io.wb_dataout <= dataout @[mem_wb_register.py:58]
    io.wb_alu_sum <= alu_sum @[mem_wb_register.py:59]
    io.wb_rd <= rd @[mem_wb_register.py:60]
    io.wb_pc_4 <= pc_4 @[mem_wb_register.py:61]
    io.wb_imm <= imm @[mem_wb_register.py:62]
    io.wb_aui_pc <= aui_pc @[mem_wb_register.py:63]


  module Tile : @[tile.py:52]
    input clock : Clock @[rawmodule.py:100]
    input reset : UInt<1> @[rawmodule.py:101]
    output io : {if_pc_out : UInt<32>, if_next_pc : UInt<32>, id_rs1 : UInt<5>, id_rs2 : UInt<5>, id_rs1_out : UInt<32>, id_rs2_out : UInt<32>, ex_rs1_out : UInt<32>, ex_rs2_out : UInt<32>, ex_alu_sum : UInt<32>, ex_alu_conflag : UInt<1>, ex_rd : UInt<5>, mem_rd : UInt<5>, mem_alu_sum : UInt<32>, mem_writedata : UInt<32>, mem_dataout : UInt<32>, wb_rd : UInt<5>, wb_registerwrite : UInt<32>, Forward_A : UInt<2>, Forward_B : UInt<2>, MemWrite_Src : UInt<1>} @[tile.py:26]

    inst pc of PC
    pc.clock <= clock @[rawmodule.py:110]
    pc.reset <= reset @[rawmodule.py:110]
    inst instcache of InstCache
    instcache.clock <= clock @[rawmodule.py:110]
    instcache.reset <= reset @[rawmodule.py:110]
    inst datapath of Datapath
    datapath.clock <= clock @[rawmodule.py:110]
    datapath.reset <= reset @[rawmodule.py:110]
    inst if_id_register of IF_ID_Register
    if_id_register.clock <= clock @[rawmodule.py:110]
    if_id_register.reset <= reset @[rawmodule.py:110]
    inst regfile of RegFile
    regfile.clock <= clock @[rawmodule.py:110]
    regfile.reset <= reset @[rawmodule.py:110]
    inst immgen of ImmGen
    immgen.clock <= clock @[rawmodule.py:110]
    immgen.reset <= reset @[rawmodule.py:110]
    inst control of Control
    control.clock <= clock @[rawmodule.py:110]
    control.reset <= reset @[rawmodule.py:110]
    inst id_ex_register of ID_EX_Register
    id_ex_register.clock <= clock @[rawmodule.py:110]
    id_ex_register.reset <= reset @[rawmodule.py:110]
    inst hazard_detection of Hazard_Detection
    hazard_detection.clock <= clock @[rawmodule.py:110]
    hazard_detection.reset <= reset @[rawmodule.py:110]
    inst alu of ALU
    alu.clock <= clock @[rawmodule.py:110]
    alu.reset <= reset @[rawmodule.py:110]
    inst branch_predictor of Branch_Predictor
    branch_predictor.clock <= clock @[rawmodule.py:110]
    branch_predictor.reset <= reset @[rawmodule.py:110]
    inst datacache of DataCache
    datacache.clock <= clock @[rawmodule.py:110]
    datacache.reset <= reset @[rawmodule.py:110]
    inst ex_mem_register of EX_MEM_Register
    ex_mem_register.clock <= clock @[rawmodule.py:110]
    ex_mem_register.reset <= reset @[rawmodule.py:110]
    inst forward of Forward
    forward.clock <= clock @[rawmodule.py:110]
    forward.reset <= reset @[rawmodule.py:110]
    inst mem_wb_register of MEM_WB_Register
    mem_wb_register.clock <= clock @[rawmodule.py:110]
    mem_wb_register.reset <= reset @[rawmodule.py:110]
    datapath.io.if_io.if_pc <= pc.io.pc_out @[tile.py:77]
    datapath.io.if_io.new_addr <= branch_predictor.io.new_addr @[tile.py:78]
    datapath.io.if_io.PC_Sel <= branch_predictor.io.PC_Sel @[tile.py:79]
    datapath.io.if_io.pc_recover <= branch_predictor.io.pc_recover @[tile.py:80]
    pc.io.next_pc <= datapath.io.if_io.if_new_pc @[tile.py:85]
    node _T_2029 = bits(hazard_detection.io.PC_Write, 0, 0) @[define.py:161]
    pc.io.PC_Write <= _T_2029 @[tile.py:86]
    instcache.io.addr <= pc.io.pc_out @[tile.py:91]
    io.if_pc_out <= pc.io.pc_out @[tile.py:94]
    io.if_next_pc <= datapath.io.if_io.if_new_pc @[tile.py:95]
    if_id_register.io.if_pc <= pc.io.pc_out @[tile.py:101]
    if_id_register.io.if_pc_4 <= datapath.io.if_io.if_pc_4 @[tile.py:102]
    if_id_register.io.if_inst <= instcache.io.inst @[tile.py:103]
    if_id_register.io.IF_ID_Flush <= branch_predictor.io.IF_ID_Flush @[tile.py:104]
    if_id_register.io.IF_ID_Write <= hazard_detection.io.IF_ID_Write @[tile.py:105]
    regfile.io.rs1 <= if_id_register.io.id_rs1 @[tile.py:110]
    regfile.io.rs2 <= if_id_register.io.id_rs2 @[tile.py:111]
    regfile.io.rd <= mem_wb_register.io.wb_rd @[tile.py:112]
    regfile.io.wdata <= datapath.io.wb_io.wb_reg_writedata @[tile.py:113]
    regfile.io.Reg_Write <= mem_wb_register.io.wb_Reg_Write @[tile.py:114]
    immgen.io.inst <= if_id_register.io.id_inst @[tile.py:119]
    immgen.io.Imm_Sel <= control.io.ctrl.Imm_Sel @[tile.py:120]
    control.io.inst <= if_id_register.io.id_inst @[tile.py:125]
    hazard_detection.io.rs1 <= if_id_register.io.id_rs1 @[tile.py:130]
    hazard_detection.io.rs2 <= if_id_register.io.id_rs2 @[tile.py:131]
    hazard_detection.io.ex_rd <= id_ex_register.io.ex_rd @[tile.py:132]
    hazard_detection.io.Imm_Sel <= control.io.ctrl.Imm_Sel @[tile.py:133]
    hazard_detection.io.ex_Mem_Read <= id_ex_register.io.ex_ctrl_out.Mem_Read @[tile.py:134]
    datapath.io.id_io.ctrl_in.Reg_Write <= control.io.ctrl.Reg_Write @[tile.py:144]
    datapath.io.id_io.ctrl_in.Imm_Sel <= control.io.ctrl.Imm_Sel @[tile.py:144]
    datapath.io.id_io.ctrl_in.ALU_Src <= control.io.ctrl.ALU_Src @[tile.py:144]
    datapath.io.id_io.ctrl_in.ALUOp <= control.io.ctrl.ALUOp @[tile.py:144]
    datapath.io.id_io.ctrl_in.Branch <= control.io.ctrl.Branch @[tile.py:144]
    datapath.io.id_io.ctrl_in.Branch_Src <= control.io.ctrl.Branch_Src @[tile.py:144]
    datapath.io.id_io.ctrl_in.Mem_Read <= control.io.ctrl.Mem_Read @[tile.py:144]
    datapath.io.id_io.ctrl_in.Mem_Write <= control.io.ctrl.Mem_Write @[tile.py:144]
    datapath.io.id_io.ctrl_in.Data_Size <= control.io.ctrl.Data_Size @[tile.py:144]
    datapath.io.id_io.ctrl_in.Load_Type <= control.io.ctrl.Load_Type @[tile.py:144]
    datapath.io.id_io.ctrl_in.Mem_to_Reg <= control.io.ctrl.Mem_to_Reg @[tile.py:144]
    datapath.io.id_io.ctrl_in.Jump_Type <= control.io.ctrl.Jump_Type @[tile.py:144]
    datapath.io.id_io.Bubble <= hazard_detection.io.Bubble @[tile.py:145]
    id_ex_register.io.id_pc <= if_id_register.io.id_pc @[tile.py:150]
    id_ex_register.io.id_pc_4 <= if_id_register.io.id_pc_4 @[tile.py:151]
    id_ex_register.io.id_rs1_out <= regfile.io.rs1_out @[tile.py:152]
    id_ex_register.io.id_rs2_out <= regfile.io.rs2_out @[tile.py:153]
    id_ex_register.io.id_imm <= immgen.io.imm @[tile.py:154]
    id_ex_register.io.id_inst <= if_id_register.io.id_inst @[tile.py:155]
    id_ex_register.io.id_rs1 <= if_id_register.io.id_rs1 @[tile.py:156]
    id_ex_register.io.id_rs2 <= if_id_register.io.id_rs2 @[tile.py:157]
    id_ex_register.io.ID_EX_Flush <= branch_predictor.io.ID_EX_Flush @[tile.py:158]
    id_ex_register.io.id_ctrl_in.Reg_Write <= datapath.io.id_io.ctrl_out.Reg_Write @[tile.py:163]
    id_ex_register.io.id_ctrl_in.Imm_Sel <= datapath.io.id_io.ctrl_out.Imm_Sel @[tile.py:163]
    id_ex_register.io.id_ctrl_in.ALU_Src <= datapath.io.id_io.ctrl_out.ALU_Src @[tile.py:163]
    id_ex_register.io.id_ctrl_in.ALUOp <= datapath.io.id_io.ctrl_out.ALUOp @[tile.py:163]
    id_ex_register.io.id_ctrl_in.Branch <= datapath.io.id_io.ctrl_out.Branch @[tile.py:163]
    id_ex_register.io.id_ctrl_in.Branch_Src <= datapath.io.id_io.ctrl_out.Branch_Src @[tile.py:163]
    id_ex_register.io.id_ctrl_in.Mem_Read <= datapath.io.id_io.ctrl_out.Mem_Read @[tile.py:163]
    id_ex_register.io.id_ctrl_in.Mem_Write <= datapath.io.id_io.ctrl_out.Mem_Write @[tile.py:163]
    id_ex_register.io.id_ctrl_in.Data_Size <= datapath.io.id_io.ctrl_out.Data_Size @[tile.py:163]
    id_ex_register.io.id_ctrl_in.Load_Type <= datapath.io.id_io.ctrl_out.Load_Type @[tile.py:163]
    id_ex_register.io.id_ctrl_in.Mem_to_Reg <= datapath.io.id_io.ctrl_out.Mem_to_Reg @[tile.py:163]
    id_ex_register.io.id_ctrl_in.Jump_Type <= datapath.io.id_io.ctrl_out.Jump_Type @[tile.py:163]
    io.id_rs1 <= if_id_register.io.id_rs1 @[tile.py:166]
    io.id_rs2 <= if_id_register.io.id_rs2 @[tile.py:167]
    io.id_rs1_out <= regfile.io.rs1_out @[tile.py:168]
    io.id_rs2_out <= regfile.io.rs2_out @[tile.py:169]
    datapath.io.ex_io.ex_pc <= id_ex_register.io.ex_pc @[tile.py:175]
    datapath.io.ex_io.ex_imm <= id_ex_register.io.ex_imm @[tile.py:176]
    datapath.io.ex_io.ex_rs1_out <= id_ex_register.io.ex_rs1_out @[tile.py:177]
    datapath.io.ex_io.ex_Branch_Src <= id_ex_register.io.ex_ctrl_out.Branch_Src @[tile.py:178]
    datapath.io.ex_io.ex_Branch <= id_ex_register.io.ex_ctrl_out.Branch @[tile.py:180]
    datapath.io.ex_io.ex_alu_conflag <= alu.io.conflag @[tile.py:181]
    datapath.io.ex_io.ex_Jump_Type <= id_ex_register.io.ex_ctrl_out.Jump_Type @[tile.py:182]
    datapath.io.ex_io.ex_Imm_Sel <= id_ex_register.io.ex_ctrl_out.Imm_Sel @[tile.py:183]
    datapath.io.mem_io.mem_alu_sum <= ex_mem_register.io.mem_alu_sum @[tile.py:185]
    datapath.io.mem_io.mem_pc_4 <= ex_mem_register.io.mem_pc_4 @[tile.py:186]
    datapath.io.mem_io.mem_imm <= ex_mem_register.io.mem_imm @[tile.py:187]
    datapath.io.mem_io.mem_aui_pc <= ex_mem_register.io.mem_aui_pc @[tile.py:188]
    datapath.io.mem_io.mem_Mem_to_Reg <= ex_mem_register.io.mem_Mem_to_Reg @[tile.py:189]
    datapath.io.ex_io.Forward_A <= forward.io.Forward_A @[tile.py:191]
    datapath.io.ex_io.Forward_B <= forward.io.Forward_B @[tile.py:192]
    datapath.io.ex_io.ex_rs2_out <= id_ex_register.io.ex_rs2_out @[tile.py:194]
    datapath.io.ex_io.ex_ALU_Src <= id_ex_register.io.ex_ctrl_out.ALU_Src @[tile.py:195]
    alu.io.src_a <= datapath.io.ex_io.alu_a_src @[tile.py:200]
    alu.io.src_b <= datapath.io.ex_io.alu_b_src @[tile.py:201]
    alu.io.ALUOp <= id_ex_register.io.ex_ctrl_out.ALUOp @[tile.py:202]
    io.ex_rs1_out <= id_ex_register.io.ex_rs1_out @[tile.py:205]
    io.ex_rs2_out <= id_ex_register.io.ex_rs2_out @[tile.py:206]
    io.ex_alu_sum <= alu.io.sum @[tile.py:207]
    io.ex_alu_conflag <= alu.io.conflag @[tile.py:208]
    io.ex_rd <= id_ex_register.io.ex_rd @[tile.py:209]
    ex_mem_register.io.ex_alu_sum <= alu.io.sum @[tile.py:215]
    ex_mem_register.io.ex_rs2_out <= datapath.io.ex_io.forward_rs2_out @[tile.py:216]
    ex_mem_register.io.ex_rd <= id_ex_register.io.ex_rd @[tile.py:217]
    ex_mem_register.io.ex_pc_4 <= id_ex_register.io.ex_pc_4 @[tile.py:218]
    ex_mem_register.io.ex_imm <= id_ex_register.io.ex_imm @[tile.py:219]
    ex_mem_register.io.ex_aui_pc <= datapath.io.ex_io.ex_aui_pc @[tile.py:220]
    ex_mem_register.io.ex_rs2 <= id_ex_register.io.ex_rs2 @[tile.py:221]
    ex_mem_register.io.ex_Mem_Read <= id_ex_register.io.ex_ctrl_out.Mem_Read @[tile.py:222]
    ex_mem_register.io.ex_Mem_Write <= id_ex_register.io.ex_ctrl_out.Mem_Write @[tile.py:223]
    ex_mem_register.io.ex_Data_Size <= id_ex_register.io.ex_ctrl_out.Data_Size @[tile.py:224]
    ex_mem_register.io.ex_Load_Type <= id_ex_register.io.ex_ctrl_out.Load_Type @[tile.py:225]
    ex_mem_register.io.ex_Reg_Write <= id_ex_register.io.ex_ctrl_out.Reg_Write @[tile.py:226]
    ex_mem_register.io.ex_Mem_to_Reg <= id_ex_register.io.ex_ctrl_out.Mem_to_Reg @[tile.py:227]
    datapath.io.mem_io.mem_rs2_out <= ex_mem_register.io.mem_rs2_out @[tile.py:232]
    datapath.io.mem_io.MemWrite_Src <= forward.io.MemWrite_Src @[tile.py:233]
    datacache.io.addr <= ex_mem_register.io.mem_alu_sum @[tile.py:238]
    datacache.io.write_data <= datapath.io.mem_io.mem_writedata @[tile.py:239]
    datacache.io.Mem_Read <= ex_mem_register.io.mem_Mem_Read @[tile.py:240]
    datacache.io.Mem_Write <= ex_mem_register.io.mem_Mem_Write @[tile.py:241]
    datacache.io.Data_Size <= ex_mem_register.io.mem_Data_Size @[tile.py:242]
    datacache.io.Load_Type <= ex_mem_register.io.mem_Load_Type @[tile.py:243]
    io.mem_rd <= ex_mem_register.io.mem_rd @[tile.py:246]
    io.mem_alu_sum <= ex_mem_register.io.mem_alu_sum @[tile.py:247]
    io.mem_writedata <= datapath.io.mem_io.mem_writedata @[tile.py:248]
    io.mem_dataout <= datacache.io.data_out @[tile.py:249]
    mem_wb_register.io.mem_Reg_Write <= ex_mem_register.io.mem_Reg_Write @[tile.py:255]
    mem_wb_register.io.mem_Mem_to_Reg <= ex_mem_register.io.mem_Mem_to_Reg @[tile.py:256]
    mem_wb_register.io.mem_dataout <= datacache.io.data_out @[tile.py:257]
    mem_wb_register.io.mem_alu_sum <= ex_mem_register.io.mem_alu_sum @[tile.py:258]
    mem_wb_register.io.mem_rd <= ex_mem_register.io.mem_rd @[tile.py:259]
    mem_wb_register.io.mem_pc_4 <= ex_mem_register.io.mem_pc_4 @[tile.py:260]
    mem_wb_register.io.mem_imm <= ex_mem_register.io.mem_imm @[tile.py:261]
    mem_wb_register.io.mem_aui_pc <= ex_mem_register.io.mem_aui_pc @[tile.py:262]
    datapath.io.wb_io.wb_alu_sum <= mem_wb_register.io.wb_alu_sum @[tile.py:267]
    datapath.io.wb_io.wb_dataout <= mem_wb_register.io.wb_dataout @[tile.py:268]
    datapath.io.wb_io.wb_pc_4 <= mem_wb_register.io.wb_pc_4 @[tile.py:269]
    datapath.io.wb_io.wb_imm <= mem_wb_register.io.wb_imm @[tile.py:270]
    datapath.io.wb_io.wb_aui_pc <= mem_wb_register.io.wb_aui_pc @[tile.py:271]
    datapath.io.wb_io.wb_Mem_to_Reg <= mem_wb_register.io.wb_Mem_to_Reg @[tile.py:272]
    io.wb_rd <= mem_wb_register.io.wb_rd @[tile.py:275]
    io.wb_registerwrite <= datapath.io.wb_io.wb_reg_writedata @[tile.py:276]
    forward.io.ex_mem_Reg_Write <= ex_mem_register.io.mem_Reg_Write @[tile.py:282]
    forward.io.ex_mem_rd <= ex_mem_register.io.mem_rd @[tile.py:283]
    forward.io.mem_wb_Reg_Write <= mem_wb_register.io.wb_Reg_Write @[tile.py:284]
    forward.io.mem_wb_rd <= mem_wb_register.io.wb_rd @[tile.py:285]
    forward.io.id_ex_rs1 <= id_ex_register.io.ex_rs1 @[tile.py:286]
    forward.io.id_ex_rs2 <= id_ex_register.io.ex_rs2 @[tile.py:287]
    forward.io.ex_mem_rs2 <= ex_mem_register.io.mem_rs2 @[tile.py:288]
    forward.io.ex_mem_Mem_Write <= ex_mem_register.io.mem_Mem_Write @[tile.py:289]
    branch_predictor.io.inst <= instcache.io.inst @[tile.py:294]
    branch_predictor.io.branch_addr <= datapath.io.ex_io.branch_addr @[tile.py:295]
    branch_predictor.io.PC_Src <= datapath.io.ex_io.PC_Src @[tile.py:296]
    branch_predictor.io.pc <= pc.io.pc_out @[tile.py:297]
    branch_predictor.io.ex_Branch <= id_ex_register.io.ex_ctrl_out.Branch @[tile.py:298]
    branch_predictor.io.ex_Jump_Type <= id_ex_register.io.ex_ctrl_out.Jump_Type @[tile.py:299]
    io.Forward_A <= forward.io.Forward_A @[tile.py:302]
    io.Forward_B <= forward.io.Forward_B @[tile.py:303]
    io.MemWrite_Src <= forward.io.MemWrite_Src @[tile.py:304]


