circuit RegFile : @[regfile.py:24]
  module RegFile : @[regfile.py:24]
    input clock : Clock @[rawmodule.py:100]
    input reset : UInt<1> @[rawmodule.py:101]
    output io : {flip rs1 : UInt<5>, flip rs2 : UInt<5>, flip rd : UInt<5>, flip wdata : UInt<32>, rs1_out : UInt<32>, rs2_out : UInt<32>, flip Reg_Write : UInt<1>} @[regfile.py:11]

    cmem regfile : UInt<32>[32] @[regfile.py:27]
    node _T_12 = bits(io.Reg_Write, 0, 0) @[define.py:153]
    node _T_13 = eq(io.rs1, io.rd) @[regfile.py:30]
    node _T_14 = and(_T_12, _T_13) @[regfile.py:30]
    node _T_15 = bits(io.Reg_Write, 0, 0) @[define.py:153]
    node _T_16 = eq(io.rs2, io.rd) @[regfile.py:31]
    node _T_17 = and(_T_15, _T_16) @[regfile.py:31]
    read mport _T_18 = regfile[io.rs1], clock @[memory.py:52]
    node _T_19 = mux(_T_14, io.wdata, _T_18) @[regfile.py:33]
    io.rs1_out <= _T_19 @[regfile.py:33]
    read mport _T_20 = regfile[io.rs2], clock @[memory.py:52]
    node _T_21 = mux(_T_17, io.wdata, _T_20) @[regfile.py:34]
    io.rs2_out <= _T_21 @[regfile.py:34]
    node _T_22 = bits(io.Reg_Write, 0, 0) @[define.py:153]
    node _T_23 = eq(io.rd, UInt(0)) @[regfile.py:36]
    node _T_24 = mux(_T_23, UInt(0), io.wdata) @[regfile.py:36]
    read mport _T_25 = regfile[io.rd], clock @[memory.py:52]
    node _T_26 = mux(_T_22, _T_24, _T_25) @[regfile.py:37]
    write mport _T_27 = regfile[io.rd], clock @[regfile.py:37]
    _T_27 <= _T_26 @[regfile.py:37]


