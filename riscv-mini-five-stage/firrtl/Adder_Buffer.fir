circuit Addr_Buffer : @[addr_buffer.py:21]
  module Addr_Buffer : @[addr_buffer.py:21]
    input clock : Clock @[rawmodule.py:100]
    input reset : UInt<1> @[rawmodule.py:101]
    output io : {flip addr_input : UInt<32>, flip flush : UInt<1>, flip record : UInt<1>, front : UInt<32>} @[addr_buffer.py:11]

    cmem buffer : UInt<32>[3] @[addr_buffer.py:24]
    cmem counter : UInt<2>[3] @[addr_buffer.py:25]
    cmem is_used : UInt<1>[3] @[rawdata.py:698]
    read mport _T_11 = counter[UInt(0)], clock @[memory.py:52]
    read mport _T_12 = counter[UInt<1>(1)], clock @[memory.py:52]
    node _T_13 = gt(_T_11, _T_12) @[addr_buffer.py:28]
    read mport _T_14 = counter[UInt(0)], clock @[memory.py:52]
    read mport _T_15 = counter[UInt<2>(2)], clock @[memory.py:52]
    node _T_16 = gt(_T_14, _T_15) @[addr_buffer.py:29]
    read mport _T_17 = buffer[UInt(0)], clock @[memory.py:52]
    read mport _T_18 = buffer[UInt<2>(2)], clock @[memory.py:52]
    node _T_19 = mux(_T_16, _T_17, _T_18) @[addr_buffer.py:29]
    read mport _T_20 = counter[UInt<1>(1)], clock @[memory.py:52]
    read mport _T_21 = counter[UInt<2>(2)], clock @[memory.py:52]
    node _T_22 = gt(_T_20, _T_21) @[addr_buffer.py:30]
    read mport _T_23 = buffer[UInt<1>(1)], clock @[memory.py:52]
    read mport _T_24 = buffer[UInt<2>(2)], clock @[memory.py:52]
    node _T_25 = mux(_T_22, _T_23, _T_24) @[addr_buffer.py:30]
    node _T_26 = mux(_T_13, _T_19, _T_25) @[addr_buffer.py:30]
    io.front <= _T_26 @[addr_buffer.py:30]
    read mport _T_27 = is_used[UInt(0)], clock @[memory.py:52]
    node _T_28 = eq(UInt(0), _T_27) @[addr_buffer.py:32]
    read mport _T_29 = is_used[UInt<1>(1)], clock @[memory.py:52]
    node _T_30 = eq(UInt(0), _T_29) @[addr_buffer.py:32]
    node _T_31 = mux(_T_30, UInt<1>(1), UInt<2>(2)) @[addr_buffer.py:32]
    node _T_32 = mux(_T_28, UInt(0), _T_31) @[addr_buffer.py:32]
    node _T_33 = bits(io.record, 0, 0) @[define.py:161]
    node _T_34 = eq(UInt(0), _T_32) @[addr_buffer.py:37]
    read mport _T_35 = is_used[UInt(0)], clock @[memory.py:52]
    node _T_36 = mux(_T_34, UInt<1>(1), _T_35) @[addr_buffer.py:37]
    read mport _T_37 = is_used[UInt(0)], clock @[memory.py:52]
    node _T_38 = mux(_T_33, _T_36, _T_37) @[addr_buffer.py:38]
    node _T_39 = bits(io.record, 0, 0) @[define.py:161]
    node _T_40 = eq(UInt<1>(1), _T_32) @[addr_buffer.py:37]
    read mport _T_41 = is_used[UInt<1>(1)], clock @[memory.py:52]
    node _T_42 = mux(_T_40, UInt<1>(1), _T_41) @[addr_buffer.py:37]
    read mport _T_43 = is_used[UInt<1>(1)], clock @[memory.py:52]
    node _T_44 = mux(_T_39, _T_42, _T_43) @[addr_buffer.py:38]
    node _T_45 = bits(io.record, 0, 0) @[define.py:161]
    node _T_46 = eq(UInt<2>(2), _T_32) @[addr_buffer.py:37]
    read mport _T_47 = is_used[UInt<2>(2)], clock @[memory.py:52]
    node _T_48 = mux(_T_46, UInt<1>(1), _T_47) @[addr_buffer.py:37]
    read mport _T_49 = is_used[UInt<2>(2)], clock @[memory.py:52]
    node _T_50 = mux(_T_45, _T_48, _T_49) @[addr_buffer.py:38]
    write mport _T_51 = is_used[UInt(0)], clock @[memory.py:52]
    node _T_52 = bits(io.flush, 0, 0) @[define.py:161]
    read mport _T_53 = counter[UInt(0)], clock @[memory.py:52]
    node _T_54 = eq(UInt<2>(2), _T_53) @[addr_buffer.py:41]
    node _T_55 = mux(_T_54, UInt<1>(0), _T_38) @[addr_buffer.py:42]
    node _T_56 = mux(_T_52, UInt<1>(0), _T_55) @[addr_buffer.py:42]
    _T_51 <= _T_56 @[addr_buffer.py:42]
    write mport _T_57 = is_used[UInt<1>(1)], clock @[memory.py:52]
    node _T_58 = bits(io.flush, 0, 0) @[define.py:161]
    read mport _T_59 = counter[UInt<1>(1)], clock @[memory.py:52]
    node _T_60 = eq(UInt<2>(2), _T_59) @[addr_buffer.py:41]
    node _T_61 = mux(_T_60, UInt<1>(0), _T_44) @[addr_buffer.py:42]
    node _T_62 = mux(_T_58, UInt<1>(0), _T_61) @[addr_buffer.py:42]
    _T_57 <= _T_62 @[addr_buffer.py:42]
    write mport _T_63 = is_used[UInt<2>(2)], clock @[memory.py:52]
    node _T_64 = bits(io.flush, 0, 0) @[define.py:161]
    read mport _T_65 = counter[UInt<2>(2)], clock @[memory.py:52]
    node _T_66 = eq(UInt<2>(2), _T_65) @[addr_buffer.py:41]
    node _T_67 = mux(_T_66, UInt<1>(0), _T_50) @[addr_buffer.py:42]
    node _T_68 = mux(_T_64, UInt<1>(0), _T_67) @[addr_buffer.py:42]
    _T_63 <= _T_68 @[addr_buffer.py:42]
    write mport _T_69 = counter[UInt(0)], clock @[memory.py:52]
    node _T_70 = bits(io.flush, 0, 0) @[define.py:161]
    read mport _T_71 = counter[UInt(0)], clock @[memory.py:52]
    node _T_72 = eq(UInt<2>(2), _T_71) @[addr_buffer.py:46]
    read mport _T_73 = is_used[UInt(0)], clock @[memory.py:52]
    read mport _T_74 = counter[UInt(0)], clock @[memory.py:52]
    node _T_75 = add(_T_74, UInt<1>(1)) @[addr_buffer.py:47]
    read mport _T_76 = counter[UInt(0)], clock @[memory.py:52]
    node _T_77 = mux(_T_73, _T_75, _T_76) @[addr_buffer.py:47]
    node _T_78 = mux(_T_72, UInt(0), _T_77) @[addr_buffer.py:47]
    node _T_79 = mux(_T_70, UInt(0), _T_78) @[addr_buffer.py:47]
    _T_69 <= _T_79 @[addr_buffer.py:47]
    write mport _T_80 = counter[UInt<1>(1)], clock @[memory.py:52]
    node _T_81 = bits(io.flush, 0, 0) @[define.py:161]
    read mport _T_82 = counter[UInt<1>(1)], clock @[memory.py:52]
    node _T_83 = eq(UInt<2>(2), _T_82) @[addr_buffer.py:46]
    read mport _T_84 = is_used[UInt<1>(1)], clock @[memory.py:52]
    read mport _T_85 = counter[UInt<1>(1)], clock @[memory.py:52]
    node _T_86 = add(_T_85, UInt<1>(1)) @[addr_buffer.py:47]
    read mport _T_87 = counter[UInt<1>(1)], clock @[memory.py:52]
    node _T_88 = mux(_T_84, _T_86, _T_87) @[addr_buffer.py:47]
    node _T_89 = mux(_T_83, UInt(0), _T_88) @[addr_buffer.py:47]
    node _T_90 = mux(_T_81, UInt(0), _T_89) @[addr_buffer.py:47]
    _T_80 <= _T_90 @[addr_buffer.py:47]
    write mport _T_91 = counter[UInt<2>(2)], clock @[memory.py:52]
    node _T_92 = bits(io.flush, 0, 0) @[define.py:161]
    read mport _T_93 = counter[UInt<2>(2)], clock @[memory.py:52]
    node _T_94 = eq(UInt<2>(2), _T_93) @[addr_buffer.py:46]
    read mport _T_95 = is_used[UInt<2>(2)], clock @[memory.py:52]
    read mport _T_96 = counter[UInt<2>(2)], clock @[memory.py:52]
    node _T_97 = add(_T_96, UInt<1>(1)) @[addr_buffer.py:47]
    read mport _T_98 = counter[UInt<2>(2)], clock @[memory.py:52]
    node _T_99 = mux(_T_95, _T_97, _T_98) @[addr_buffer.py:47]
    node _T_100 = mux(_T_94, UInt(0), _T_99) @[addr_buffer.py:47]
    node _T_101 = mux(_T_92, UInt(0), _T_100) @[addr_buffer.py:47]
    _T_91 <= _T_101 @[addr_buffer.py:47]
    write mport _T_102 = buffer[UInt(0)], clock @[memory.py:52]
    node _T_103 = bits(io.flush, 0, 0) @[define.py:161]
    read mport _T_104 = counter[UInt(0)], clock @[memory.py:52]
    node _T_105 = eq(UInt<2>(2), _T_104) @[addr_buffer.py:51]
    node _T_106 = bits(io.record, 0, 0) @[define.py:161]
    node _T_107 = eq(UInt(0), _T_32) @[addr_buffer.py:53]
    read mport _T_108 = buffer[UInt(0)], clock @[memory.py:52]
    node _T_109 = mux(_T_107, io.addr_input, _T_108) @[addr_buffer.py:53]
    read mport _T_110 = buffer[UInt(0)], clock @[memory.py:52]
    node _T_111 = mux(_T_106, _T_109, _T_110) @[addr_buffer.py:54]
    node _T_112 = mux(_T_105, UInt(0), _T_111) @[addr_buffer.py:54]
    node _T_113 = mux(_T_103, UInt(0), _T_112) @[addr_buffer.py:54]
    _T_102 <= _T_113 @[addr_buffer.py:54]
    write mport _T_114 = buffer[UInt<1>(1)], clock @[memory.py:52]
    node _T_115 = bits(io.flush, 0, 0) @[define.py:161]
    read mport _T_116 = counter[UInt<1>(1)], clock @[memory.py:52]
    node _T_117 = eq(UInt<2>(2), _T_116) @[addr_buffer.py:51]
    node _T_118 = bits(io.record, 0, 0) @[define.py:161]
    node _T_119 = eq(UInt<1>(1), _T_32) @[addr_buffer.py:53]
    read mport _T_120 = buffer[UInt<1>(1)], clock @[memory.py:52]
    node _T_121 = mux(_T_119, io.addr_input, _T_120) @[addr_buffer.py:53]
    read mport _T_122 = buffer[UInt<1>(1)], clock @[memory.py:52]
    node _T_123 = mux(_T_118, _T_121, _T_122) @[addr_buffer.py:54]
    node _T_124 = mux(_T_117, UInt(0), _T_123) @[addr_buffer.py:54]
    node _T_125 = mux(_T_115, UInt(0), _T_124) @[addr_buffer.py:54]
    _T_114 <= _T_125 @[addr_buffer.py:54]
    write mport _T_126 = buffer[UInt<2>(2)], clock @[memory.py:52]
    node _T_127 = bits(io.flush, 0, 0) @[define.py:161]
    read mport _T_128 = counter[UInt<2>(2)], clock @[memory.py:52]
    node _T_129 = eq(UInt<2>(2), _T_128) @[addr_buffer.py:51]
    node _T_130 = bits(io.record, 0, 0) @[define.py:161]
    node _T_131 = eq(UInt<2>(2), _T_32) @[addr_buffer.py:53]
    read mport _T_132 = buffer[UInt<2>(2)], clock @[memory.py:52]
    node _T_133 = mux(_T_131, io.addr_input, _T_132) @[addr_buffer.py:53]
    read mport _T_134 = buffer[UInt<2>(2)], clock @[memory.py:52]
    node _T_135 = mux(_T_130, _T_133, _T_134) @[addr_buffer.py:54]
    node _T_136 = mux(_T_129, UInt(0), _T_135) @[addr_buffer.py:54]
    node _T_137 = mux(_T_127, UInt(0), _T_136) @[addr_buffer.py:54]
    _T_126 <= _T_137 @[addr_buffer.py:54]


