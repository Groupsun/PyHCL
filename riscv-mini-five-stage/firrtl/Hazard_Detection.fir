circuit Hazard_Detection : @[hazard_detection.py:26]
  module Hazard_Detection : @[hazard_detection.py:26]
    input clock : Clock @[rawmodule.py:100]
    input reset : UInt<1> @[rawmodule.py:101]
    output io : {flip rs1 : UInt<5>, flip rs2 : UInt<5>, flip ex_rd : UInt<5>, flip Imm_Sel : UInt<3>, flip ex_Mem_Read : UInt<1>, Bubble : UInt<1>, IF_ID_Write : UInt<1>, PC_Write : UInt<1>} @[hazard_detection.py:11]

    node _T_12 = bits(io.ex_Mem_Read, 0, 0) @[define.py:161]
    node _T_13 = eq(io.Imm_Sel, UInt<3>(5)) @[hazard_detection.py:32]
    node _T_14 = and(_T_12, _T_13) @[hazard_detection.py:32]
    node _T_15 = eq(io.Imm_Sel, UInt<3>(6)) @[hazard_detection.py:32]
    node _T_16 = and(_T_14, _T_15) @[hazard_detection.py:32]
    node _T_17 = eq(io.rs1, io.ex_rd) @[hazard_detection.py:32]
    node _T_18 = and(_T_16, _T_17) @[hazard_detection.py:32]
    node _T_19 = bits(io.ex_Mem_Read, 0, 0) @[define.py:161]
    node _T_20 = eq(io.Imm_Sel, UInt<3>(1)) @[hazard_detection.py:36]
    node _T_21 = eq(io.Imm_Sel, UInt<3>(4)) @[hazard_detection.py:36]
    node _T_22 = or(_T_20, _T_21) @[hazard_detection.py:36]
    node _T_23 = and(_T_19, _T_22) @[hazard_detection.py:36]
    node _T_24 = eq(io.rs2, io.ex_rd) @[hazard_detection.py:36]
    node _T_25 = and(_T_23, _T_24) @[hazard_detection.py:36]
    node _T_26 = or(_T_18, _T_25) @[hazard_detection.py:38]
    node _T_27 = mux(_T_26, UInt<1>(1), UInt<1>(0)) @[hazard_detection.py:40]
    io.Bubble <= _T_27 @[hazard_detection.py:40]
    node _T_28 = mux(_T_26, UInt<1>(0), UInt<1>(1)) @[hazard_detection.py:41]
    io.IF_ID_Write <= _T_28 @[hazard_detection.py:41]
    node _T_29 = mux(_T_26, UInt<1>(0), UInt<1>(1)) @[hazard_detection.py:42]
    io.PC_Write <= _T_29 @[hazard_detection.py:42]


